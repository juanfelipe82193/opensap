{"!name":"sap.uiext.inbox","!version":"1.20.0","!define":{"sap.uiext.inbox.InboxSecondaryFilterPathEnum":{"!description":"Enumeration for Secondary Filter Paths","STATUS":{"!description":"Path for Status Secondary Filter","!category":"enum","!type":"String"},"!module":"sap/uiext/inbox/InboxSecondaryFilterPathEnum","STARTDATE":{"!description":"Path for StartDate Secondary Filter","!category":"enum","!type":"String"},"!helpDescription":"Enumeration for Secondary Filter Paths","!category":"namespace","PRIORITY":{"!description":"Path for Priority Secondary Filter","!category":"enum","!type":"String"},"DUEDATE":{"!description":"Path for DueDate Secondary Filter","!category":"enum","!type":"String"},"TASKTYPE":{"!description":"Path for TaskType Secondary Filter","!category":"enum","!type":"String"}},"sap.uiext.inbox.InboxFilters_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.InboxFilters with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.uiext.inbox.InboxFilters"},"sap.uiext.inbox.composite.InboxTaskTitleControl":{"!description":"InboxTaskTitleControl","getTitleLink":{"!description":"Gets content of aggregation {@link #getTitleLink titleLink}.\n\nInternal aggregation to hold the inner Task Title Link","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setHasAttachments":{"!description":"Sets a new value for property {@link #getHasAttachments hasAttachments}.\n\nhas Attachments\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bHasAttachments: Boolean) -> sap.uiext.inbox.composite.InboxTaskTitleControl","parameters":{"bHasAttachments":"type: boolean, description: New value for property <code>hasAttachments<\/code>"}},"setTitleLink":{"!description":"Sets the aggregated {@link #getTitleLink titleLink}.","!static":false,"!category":"function","!type":"fn(oTitleLink: sap.ui.core.Control) -> sap.uiext.inbox.composite.InboxTaskTitleControl","parameters":{"oTitleLink":"type: sap.ui.core.Control, description: The titleLink to set"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.composite.InboxTaskTitleControl.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setHasComments":{"!description":"Sets a new value for property {@link #getHasComments hasComments}.\n\nhas Comments\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bHasComments: Boolean) -> sap.uiext.inbox.composite.InboxTaskTitleControl","parameters":{"bHasComments":"type: boolean, description: New value for property <code>hasComments<\/code>"}},"!proto":"sap.ui.core.Control","setCategoryIconURI":{"!description":"Sets a new value for property {@link #getCategoryIconURI categoryIconURI}.\n\nCategory icon\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>hasCategory<\/code>.","!static":false,"!category":"function","!type":"fn(sCategoryIconURI: sap.ui.core.URI) -> sap.uiext.inbox.composite.InboxTaskTitleControl","parameters":{"sCategoryIconURI":"type: sap.ui.core.URI, description: New value for property <code>categoryIconURI<\/code>"}},"!category":"class","getTaskTitle":{"!description":"Gets current value of property {@link #getTaskTitle taskTitle}.\n\nThe Task Title of the Task","!static":false,"!category":"function","!type":"fn() -> String"},"getHasAttachments":{"!description":"Gets current value of property {@link #getHasAttachments hasAttachments}.\n\nhas Attachments","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxTaskTitleControl with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"destroyTitleLink":{"!description":"Destroys the titleLink in the aggregation {@link #getTitleLink titleLink}.","!static":false,"!category":"function","!type":"fn() -> sap.uiext.inbox.composite.InboxTaskTitleControl"},"!constructorDescription":"Constructor for a new composite/InboxTaskTitleControl.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTaskTitle taskTitle} : string<\/li>\n<li>{@link #getCategoryIconURI categoryIconURI} : sap.ui.core.URI (default: hasCategory)<\/li>\n<li>{@link #getHasAttachments hasAttachments} : boolean<\/li>\n<li>{@link #getHasComments hasComments} : boolean<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTitleLink titleLink} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/uiext/inbox/composite/InboxTaskTitleControl","!helpDescription":"InboxTaskTitleControl","setTaskTitle":{"!description":"Sets a new value for property {@link #getTaskTitle taskTitle}.\n\nThe Task Title of the Task\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTaskTitle: String) -> sap.uiext.inbox.composite.InboxTaskTitleControl","parameters":{"sTaskTitle":"type: string, description: New value for property <code>taskTitle<\/code>"}},"getHasComments":{"!description":"Gets current value of property {@link #getHasComments hasComments}.\n\nhas Comments","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCategoryIconURI":{"!description":"Gets current value of property {@link #getCategoryIconURI categoryIconURI}.\n\nCategory icon\n\nDefault value is <code>hasCategory<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"}},"sap.uiext.inbox":{"showUserName":{"!description":"Property to indicate whether loggod on User's Name in the header should be displayed or not. Default value is true.","!category":"enum","!type":"Boolean"},"InboxSplitApp":"sap.uiext.inbox.InboxSplitApp_obj","InboxSecondaryFilterValuesEnum":"sap.uiext.inbox.InboxSecondaryFilterValuesEnum","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"taskExecutionURLThemeValue":{"!description":"set the theme URL parameter string to be appended to the task Execution URL. In case of a function callback set for Task Execution PopUp, this string will not be appended.","!category":"enum","!type":"String"},"!category":"namespace","title":{"!description":"The title text appearing in Inbox LaunchPad header bar.","!category":"enum","!type":"String"},"showMasterPageNavBtn":{"!description":"Show/Hide the Navigation Button for the Master Page","!category":"enum","!type":"Boolean"},"tcmConfiguration":{"!description":"TCM Configuration object for control initialization.","!category":"enum","!type":"Object"},"InboxLaunchPad":"sap.uiext.inbox.InboxLaunchPad_obj","tcmServiceURL":{"!description":"TCM service URL","!category":"enum","!type":"String"},"InboxSecondaryFilters":"sap.uiext.inbox.InboxSecondaryFilters_obj","InboxPrimaryFilters":"sap.uiext.inbox.InboxPrimaryFilters_obj","openCompletedTasks":{"!description":"set this to true to enable opening of completed tasks.","!category":"enum","!type":"Boolean"},"logoSrc":{"!description":"Path (src) to the logo icon to be displayed in the Inbox LaunchPad header.","!category":"enum","!type":"String"},"SubstitutionRulesManager":"sap.uiext.inbox.SubstitutionRulesManager_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"composite":"sap.uiext.inbox.composite","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"Inbox":"sap.uiext.inbox.Inbox_obj","handleBindings":{"!description":"set this as true for oData Model. If set as false, the user will need to handle task Actions, search and Task Execution URL population. See function call back methods.","!category":"enum","!type":"Boolean"},"!description":"The Unified Inbox control","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"showLogoutButton":{"!description":"Property to indicate whether the Logoff button in the header should be displayed or not. Default value is true.","!category":"enum","!type":"Boolean"},"InboxPrimaryFilterEnum":"sap.uiext.inbox.InboxPrimaryFilterEnum","InboxConfiguration":"sap.uiext.inbox.InboxConfiguration_obj","filters":{"!description":"Filters to be applied on the data shown in the MasterPage","!category":"enum","!type":"[Object]"},"userName":{"!description":"User name to be shown in the header.","!category":"enum","!type":"String"},"InboxSecondaryFilterPathEnum":"sap.uiext.inbox.InboxSecondaryFilterPathEnum","!module":"sap/uiext/inbox/library","!helpDescription":"The Unified Inbox control","InboxFilters":"sap.uiext.inbox.InboxFilters_obj"},"sap.uiext.inbox.InboxSecondaryFilters_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.InboxSecondaryFilters with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.uiext.inbox.InboxSecondaryFilters"},"sap.uiext.inbox.InboxConfiguration_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.InboxConfiguration with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.uiext.inbox.InboxConfiguration"},"sap.uiext.inbox.composite.InboxAddAttachmentTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxAddAttachmentTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uiext.inbox.composite.InboxAddAttachmentTile"},"sap.uiext.inbox.composite.InboxBusyIndicator":{"!description":"InboxBusyIndicator","extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxBusyIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.composite.InboxBusyIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new composite/InboxBusyIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Control#constructor sap.ui.core.Control} can be used.","!module":"sap/uiext/inbox/composite/InboxBusyIndicator","!helpDescription":"InboxBusyIndicator","!proto":"sap.ui.core.Control","!category":"class"},"sap.uiext.inbox.InboxPrimaryFilters_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.InboxPrimaryFilters with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.uiext.inbox.InboxPrimaryFilters"},"sap.uiext.inbox.composite.InboxAttachmentsTileContainer":{"detachUploadButtonPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:uploadButtonPress uploadButtonPress} event of this <code>sap.uiext.inbox.composite.InboxAttachmentsTileContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachUploadSuccess":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:uploadSuccess uploadSuccess} event of this <code>sap.uiext.inbox.composite.InboxAttachmentsTileContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachUploadSuccess":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:uploadSuccess uploadSuccess} event of this <code>sap.uiext.inbox.composite.InboxAttachmentsTileContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uiext.inbox.composite.InboxAttachmentsTileContainer<\/code> itself.\n\nevent is fired when uploading a file is completed successfully","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uiext.inbox.composite.InboxAttachmentsTileContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","insertAttachment":{"!description":"Inserts a attachment into the aggregation {@link #getAttachments attachments}.","!static":false,"!category":"function","!type":"fn(oAttachment: sap.uiext.inbox.composite.InboxAttachmentTile, iIndex: Number) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"oAttachment":"type: sap.uiext.inbox.composite.InboxAttachmentTile, description: The attachment to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the attachment should be inserted at; for a negative value of <code>iIndex<\/code>, the attachment is inserted at position 0; for a value greater than the current size of the aggregation, the attachment is inserted at the last position"}},"!category":"class","attachUploadButtonPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:uploadButtonPress uploadButtonPress} event of this <code>sap.uiext.inbox.composite.InboxAttachmentsTileContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uiext.inbox.composite.InboxAttachmentsTileContainer<\/code> itself.\n\nevent is fired to add all the header parameters just before uploading a file","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uiext.inbox.composite.InboxAttachmentsTileContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addAttachment":{"!description":"Adds some attachment to the aggregation {@link #getAttachments attachments}.","!static":false,"!category":"function","!type":"fn(oAttachment: sap.uiext.inbox.composite.InboxAttachmentTile) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"oAttachment":"type: sap.uiext.inbox.composite.InboxAttachmentTile, description: The attachment to add; if empty, nothing is inserted"}},"destroyAttachments":{"!description":"Destroys all the attachments in the aggregation {@link #getAttachments attachments}.","!static":false,"!category":"function","!type":"fn() -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer"},"getFileType":{"!description":"Gets current value of property {@link #getFileType fileType}.\n\ntype of the selected file for uploading","!static":false,"!category":"function","!type":"fn() -> String"},"getIsFileSelected":{"!description":"Gets current value of property {@link #getIsFileSelected isFileSelected}.\n\nboolean property to indicate if user has selected a file to upload","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFileName":{"!description":"Sets a new value for property {@link #getFileName fileName}.\n\nname of the selected file for uploading\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFileName: String) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"sFileName":"type: string, description: New value for property <code>fileName<\/code>"}},"!constructorDescription":"Constructor for a new composite/InboxAttachmentsTileContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUploadUrl uploadUrl} : string<\/li>\n<li>{@link #getFileName fileName} : string<\/li>\n<li>{@link #getFileType fileType} : string<\/li>\n<li>{@link #getIsFileSelected isFileSelected} : boolean<\/li>\n<li>{@link #getEnteredDescription enteredDescription} : string<\/li>\n<li>{@link #getShowAddTile showAddTile} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttachments attachments} : sap.uiext.inbox.composite.InboxAttachmentTile[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:uploadButtonPress uploadButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uploadSuccess uploadSuccess} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uploadFailed uploadFailed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setShowAddTile":{"!description":"Sets a new value for property {@link #getShowAddTile showAddTile}.\n\nboolean value to indicate whether to show Add Attachment tile\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowAddTile: Boolean) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"bShowAddTile":"type: boolean, description: New value for property <code>showAddTile<\/code>"}},"getFileName":{"!description":"Gets current value of property {@link #getFileName fileName}.\n\nname of the selected file for uploading","!static":false,"!category":"function","!type":"fn() -> String"},"setIsFileSelected":{"!description":"Sets a new value for property {@link #getIsFileSelected isFileSelected}.\n\nboolean property to indicate if user has selected a file to upload\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bIsFileSelected: Boolean) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"bIsFileSelected":"type: boolean, description: New value for property <code>isFileSelected<\/code>"}},"!description":"InboxAttachmentsTileContainer","removeUploadHeader":{"!description":"method to remove a headerParameter of fileUploader","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.composite.InboxAttachmentsTileContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setFileType":{"!description":"Sets a new value for property {@link #getFileType fileType}.\n\ntype of the selected file for uploading\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFileType: String) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"sFileType":"type: string, description: New value for property <code>fileType<\/code>"}},"attachUploadFailed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:uploadFailed uploadFailed} event of this <code>sap.uiext.inbox.composite.InboxAttachmentsTileContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uiext.inbox.composite.InboxAttachmentsTileContainer<\/code> itself.\n\nevent is fired when uploading a file has failed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uiext.inbox.composite.InboxAttachmentsTileContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAttachment":{"!description":"Removes a attachment from the aggregation {@link #getAttachments attachments}.","!static":false,"!category":"function","!type":"fn(vAttachment: Number | String | sap.uiext.inbox.composite.InboxAttachmentTile) -> sap.uiext.inbox.composite.InboxAttachmentTile","parameters":{"vAttachment":"type: int|string|sap.uiext.inbox.composite.InboxAttachmentTile, description: The attachment to remove or its index or id"}},"addUploadHeader":{"!description":"method to add a header parameter while uploading a file. This method takes header name and header value as input.","!static":false,"!category":"function","!type":"fn()"},"fireUploadButtonPress":{"!description":"Fires event {@link #event:uploadButtonPress uploadButtonPress} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxAttachmentsTileContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getAttachments":{"!description":"Gets content of aggregation {@link #getAttachments attachments}.\n\naggregation for attachments tile","!static":false,"!category":"function","!type":"fn() -> [sap.uiext.inbox.composite.InboxAttachmentTile]"},"getUploadUrl":{"!description":"Gets current value of property {@link #getUploadUrl uploadUrl}.\n\nURL to upload the selected file","!static":false,"!category":"function","!type":"fn() -> String"},"setUploadUrl":{"!description":"Sets a new value for property {@link #getUploadUrl uploadUrl}.\n\nURL to upload the selected file\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUploadUrl: String) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"sUploadUrl":"type: string, description: New value for property <code>uploadUrl<\/code>"}},"getEnteredDescription":{"!description":"Gets current value of property {@link #getEnteredDescription enteredDescription}.\n\ndescription string entered by user while uploading a file","!static":false,"!category":"function","!type":"fn() -> String"},"setEnteredDescription":{"!description":"Sets a new value for property {@link #getEnteredDescription enteredDescription}.\n\ndescription string entered by user while uploading a file\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEnteredDescription: String) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"sEnteredDescription":"type: string, description: New value for property <code>enteredDescription<\/code>"}},"removeAllAttachments":{"!description":"Removes all the controls from the aggregation {@link #getAttachments attachments}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.uiext.inbox.composite.InboxAttachmentTile]"},"!module":"sap/uiext/inbox/composite/InboxAttachmentsTileContainer","fireUploadFailed":{"!description":"Fires event {@link #event:uploadFailed uploadFailed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!helpDescription":"InboxAttachmentsTileContainer","indexOfAttachment":{"!description":"Checks for the provided <code>sap.uiext.inbox.composite.InboxAttachmentTile<\/code> in the aggregation {@link #getAttachments attachments}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAttachment: sap.uiext.inbox.composite.InboxAttachmentTile) -> Number","parameters":{"oAttachment":"type: sap.uiext.inbox.composite.InboxAttachmentTile, description: The attachment whose index is looked for"}},"fireUploadSuccess":{"!description":"Fires event {@link #event:uploadSuccess uploadSuccess} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachUploadFailed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:uploadFailed uploadFailed} event of this <code>sap.uiext.inbox.composite.InboxAttachmentsTileContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.composite.InboxAttachmentsTileContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getShowAddTile":{"!description":"Gets current value of property {@link #getShowAddTile showAddTile}.\n\nboolean value to indicate whether to show Add Attachment tile\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.uiext.inbox.Inbox_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.Inbox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uiext.inbox.Inbox"},"sap.uiext.inbox.SubstitutionRulesManager_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.SubstitutionRulesManager with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uiext.inbox.SubstitutionRulesManager"},"sap.uiext.inbox.InboxSplitApp_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.InboxSplitApp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uiext.inbox.InboxSplitApp"},"sap.uiext.inbox.InboxFilters":{"!description":"PreDefined Filters for Inbox","getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.InboxFilters.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.base.Object","!category":"class","setSecondaryFilter":{"!description":"Setter for Secondary filters to be applied","!static":false,"!category":"function","!type":"fn(oSecondaryFilter: sap.uiext.inbox.InboxSecondaryFilters)","parameters":{"oSecondaryFilter":"type: sap.uiext.inbox.InboxSecondaryFilters, description: undefined"}},"getSearchUersMaxLimit":{"!description":"Getter for Max Limit for user search in Inbox","!static":false,"!category":"function","!type":"fn() -> Number"},"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.InboxFilters with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setPrimaryFilter":{"!description":"Setter for the Primary filters to be applied","!static":false,"!category":"function","!type":"fn(oPrimaryFilter: sap.uiext.inbox.InboxPrimaryFilters)","parameters":{"oPrimaryFilter":"type: sap.uiext.inbox.InboxPrimaryFilters, description: undefined"}},"!constructorDescription":"Constructor for InboxFilters","!module":"sap/uiext/inbox/InboxFilters","getPrimaryFilterr":{"!description":"Getter for Primary filters","!static":false,"!category":"function","!type":"fn() -> sap.uiext.inbox.InboxPrimaryFilters"},"!helpDescription":"PreDefined Filters for Inbox","getSecondaryFilter":{"!description":"Getter for Secondary filters","!static":false,"!category":"function","!type":"fn() -> sap.uiext.inbox.InboxSecondaryFilters"}},"sap.uiext.inbox.InboxLaunchPad_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.InboxLaunchPad with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uiext.inbox.InboxLaunchPad"},"sap.uiext.inbox.InboxSecondaryFilters":{"!description":"Secondary Filters for Inbox","extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.InboxSecondaryFilters with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.InboxSecondaryFilters.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for InboxSecondaryFilters","!module":"sap/uiext/inbox/InboxSecondaryFilters","!helpDescription":"Secondary Filters for Inbox","!proto":"sap.ui.base.Object","setStandardFilters":{"!description":"Set Secondary Filters","!static":false,"!category":"function","!type":"fn(aFilterObjects: Array)","parameters":{"aFilterObjects":"type: Array, description: Array of secondary Filter Objects eg. : {sPath : sap.uiext.inbox.InboxSecondaryFilterPathEnum.Priority, values : [sap.uiext.inbox.InboxSecondaryFilterValuesEnum.Status.LOW, sap.uiext.inbox.InboxSecondaryFilterValuesEnum.Status.HIGH]} sPath : {sap.uiext.inbox.InboxSecondaryFilterPathEnum} values : {Array} Array of SecondaryFilterValuesEnums of {sap.uiext.inbox.InboxSecondaryFilterValuesEnum}"}},"!category":"class"},"sap.uiext.inbox.InboxSecondaryFilterValuesEnum":{"!description":"Enumeration for Secondary Filter Values","StartDate":{"!description":"Enum Values displayed by the StartDate Secondary Filter are <br> <i> Today <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.StartDate.TODAY <\/br> <br> <i> Last7Days <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.StartDate.LAST7DAYS <\/br> <br> <i>Last15Days <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.StartDate.LAST15DAYS <\/br> <br> <i>Last30Days <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.StartDate.LAST30DAYS <\/br>","!category":"enum","!type":"String"},"Status":{"!description":"Enum Values displayed by the Status Secondary Filter dropdown are <br><i> Ready <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.Status.READY <\/br> <br><i>Reserved <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.Status.RESERVED <\/br> <br><i>InProgress <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.Status.INPROGRESS <\/br>","!category":"enum","!type":"String"},"!module":"sap/uiext/inbox/InboxSecondaryFilterValuesEnum","!helpDescription":"Enumeration for Secondary Filter Values","Priority":{"!description":"Enum Values displayed by Priority Secondary Filter dropdown are <br> <i> Low <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.Priority.LOW <\/br> <br> <i> Medium<\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.Priority.MEDIUM <\/br> <br> <i> High <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.Priority.HIGH<\/br> <br> <i> Very High<\/i>: sap.uiext.inbox.InboxSecondaryFilterValuesEnum.Priority.VERYHIGH<\/br>","!category":"enum","!type":"String"},"!category":"namespace","DueDate":{"!description":"Enum Values displayed by DueDate Secondary Filter dropdown are <br><i> Today <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.DueDate.TODAY <\/br> <br><i> Next7Days <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.DueDate.NEXT7DAYS <\/br> <br><i> Next15Days <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.DueDate.NEXT15DAYS <\/br> <br><i> Next30Days <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.DueDate.NEXT30DAYS <\/br> <br><i> NoDueDate <\/i> : sap.uiext.inbox.InboxSecondaryFilterValuesEnum.DueDate.NODUEDATE <\/br>","!category":"enum","!type":"String"}},"sap.uiext.inbox.SubstitutionRulesManager":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","bindSubstitutionRules":{"!description":"Binds the Substitution Rules to the given path.","!static":false,"!category":"function","!type":"fn(path: String) -> sap.uiext.inbox.SubstitutionRulesManager","parameters":{"path":"type: string, description: The path"}},"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.SubstitutionRulesManager with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.SubstitutionRulesManager.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new SubstitutionRulesManager.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Control#constructor sap.ui.core.Control} can be used.","!module":"sap/uiext/inbox/SubstitutionRulesManager","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","!proto":"sap.ui.core.Control","!category":"class"},"sap.uiext.inbox.composite.InboxUploadAttachmentTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxUploadAttachmentTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uiext.inbox.composite.InboxUploadAttachmentTile"},"sap.uiext.inbox.composite.InboxUploadAttachmentTile":{"!description":"InboxUploadAttachmentTile","setFileTypeIcon":{"!description":"Sets a new value for property {@link #getFileTypeIcon fileTypeIcon}.\n\nicon URI of the selected file type\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFileTypeIcon: sap.ui.core.URI) -> sap.uiext.inbox.composite.InboxUploadAttachmentTile","parameters":{"sFileTypeIcon":"type: sap.ui.core.URI, description: New value for property <code>fileTypeIcon<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.composite.InboxUploadAttachmentTile.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","fireUploadSelectedFile":{"!description":"Fires event {@link #event:uploadSelectedFile uploadSelectedFile} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.uiext.inbox.composite.InboxUploadAttachmentTile","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!category":"class","detachUploadSelectedFile":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:uploadSelectedFile uploadSelectedFile} event of this <code>sap.uiext.inbox.composite.InboxUploadAttachmentTile<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.composite.InboxUploadAttachmentTile","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getFileTypeIcon":{"!description":"Gets current value of property {@link #getFileTypeIcon fileTypeIcon}.\n\nicon URI of the selected file type","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxUploadAttachmentTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setFileName":{"!description":"Sets a new value for property {@link #getFileName fileName}.\n\nname of the selected file\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFileName: String) -> sap.uiext.inbox.composite.InboxUploadAttachmentTile","parameters":{"sFileName":"type: string, description: New value for property <code>fileName<\/code>"}},"!constructorDescription":"Constructor for a new composite/InboxUploadAttachmentTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFileName fileName} : string<\/li>\n<li>{@link #getFileTypeIcon fileTypeIcon} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:uploadSelectedFile uploadSelectedFile} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/uiext/inbox/composite/InboxUploadAttachmentTile","!helpDescription":"InboxUploadAttachmentTile","getFileName":{"!description":"Gets current value of property {@link #getFileName fileName}.\n\nname of the selected file","!static":false,"!category":"function","!type":"fn() -> String"},"attachUploadSelectedFile":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:uploadSelectedFile uploadSelectedFile} event of this <code>sap.uiext.inbox.composite.InboxUploadAttachmentTile<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uiext.inbox.composite.InboxUploadAttachmentTile<\/code> itself.\n\nevent is fired when upload for selected file is requested","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.composite.InboxUploadAttachmentTile","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uiext.inbox.composite.InboxUploadAttachmentTile<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap":{"sap":"sap","!category":"namespace","uiext":"sap.uiext"},"sap.uiext.inbox.InboxLaunchPad":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","attachTileSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:tileSelected tileSelected} event of this <code>sap.uiext.inbox.InboxLaunchPad<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uiext.inbox.InboxLaunchPad<\/code> itself.\n\nFires an event when a tile is selected in Inbox LaunchPad.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.InboxLaunchPad","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uiext.inbox.InboxLaunchPad<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.InboxLaunchPad.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","setShowLogoutButton":{"!description":"Sets a new value for property {@link #getShowLogoutButton showLogoutButton}.\n\nProperty to indicate whether the Logoff button in the header should be displayed or not. Default value is true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLogoutButton: Boolean) -> sap.uiext.inbox.InboxLaunchPad","parameters":{"bShowLogoutButton":"type: boolean, description: New value for property <code>showLogoutButton<\/code>"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe title text appearing in Inbox LaunchPad header bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inbox Launch Pad Title<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.uiext.inbox.InboxLaunchPad","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","fireLogout":{"!description":"Fires event {@link #event:logout logout} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.uiext.inbox.InboxLaunchPad","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getShowUserName":{"!description":"Gets current value of property {@link #getShowUserName showUserName}.\n\nProperty to indicate whether loggod on User's Name in the header should be displayed or not. Default value is true.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachLogout":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:logout logout} event of this <code>sap.uiext.inbox.InboxLaunchPad<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uiext.inbox.InboxLaunchPad<\/code> itself.\n\nFired when the user clicks the \"Log-off\" button.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.InboxLaunchPad","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uiext.inbox.InboxLaunchPad<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachLogout":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:logout logout} event of this <code>sap.uiext.inbox.InboxLaunchPad<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.InboxLaunchPad","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.InboxLaunchPad with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new InboxLaunchPad.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: Inbox Launch Pad Title)<\/li>\n<li>{@link #getLogoSrc logoSrc} : string<\/li>\n<li>{@link #getShowLogoutButton showLogoutButton} : boolean (default: true)<\/li>\n<li>{@link #getShowUserName showUserName} : boolean (default: true)<\/li>\n<li>{@link #getUserName userName} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tileSelected tileSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:logout logout} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachTileSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:tileSelected tileSelected} event of this <code>sap.uiext.inbox.InboxLaunchPad<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.InboxLaunchPad","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title text appearing in Inbox LaunchPad header bar.\n\nDefault value is <code>Inbox Launch Pad Title<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/uiext/inbox/InboxLaunchPad","getLogoSrc":{"!description":"Gets current value of property {@link #getLogoSrc logoSrc}.\n\nPath (src) to the logo icon to be displayed in the Inbox LaunchPad header.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setUserName":{"!description":"Sets a new value for property {@link #getUserName userName}.\n\nUser name to be shown in the header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUserName: String) -> sap.uiext.inbox.InboxLaunchPad","parameters":{"sUserName":"type: string, description: New value for property <code>userName<\/code>"}},"getShowLogoutButton":{"!description":"Gets current value of property {@link #getShowLogoutButton showLogoutButton}.\n\nProperty to indicate whether the Logoff button in the header should be displayed or not. Default value is true.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getUserName":{"!description":"Gets current value of property {@link #getUserName userName}.\n\nUser name to be shown in the header.","!static":false,"!category":"function","!type":"fn() -> String"},"fireTileSelected":{"!description":"Fires event {@link #event:tileSelected tileSelected} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.uiext.inbox.InboxLaunchPad","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setShowUserName":{"!description":"Sets a new value for property {@link #getShowUserName showUserName}.\n\nProperty to indicate whether loggod on User's Name in the header should be displayed or not. Default value is true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowUserName: Boolean) -> sap.uiext.inbox.InboxLaunchPad","parameters":{"bShowUserName":"type: boolean, description: New value for property <code>showUserName<\/code>"}},"setLogoSrc":{"!description":"Sets a new value for property {@link #getLogoSrc logoSrc}.\n\nPath (src) to the logo icon to be displayed in the Inbox LaunchPad header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLogoSrc: String) -> sap.uiext.inbox.InboxLaunchPad","parameters":{"sLogoSrc":"type: string, description: New value for property <code>logoSrc<\/code>"}}},"sap.uiext.inbox.InboxConfiguration":{"!description":"Configuration for Inbox","extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.InboxConfiguration with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.InboxConfiguration.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for InboxConfiguration","!module":"sap/uiext/inbox/InboxConfiguration","!helpDescription":"Configuration for Inbox","setSearchUersMaxLimit":{"!description":"Setter for Max Limit for user search in Inbox","!static":false,"!category":"function","!type":"fn(iMaxLimit: Number)","parameters":{"iMaxLimit":"type: number, description: undefined"}},"!proto":"sap.ui.base.Object","!category":"class"},"sap.uiext.inbox.composite.InboxAttachmentTile":{"setShowDeleteButton":{"!description":"Sets a new value for property {@link #getShowDeleteButton showDeleteButton}.\n\nboolean value to indicate whether to show delete button\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDeleteButton: Boolean) -> sap.uiext.inbox.composite.InboxAttachmentTile","parameters":{"bShowDeleteButton":"type: boolean, description: New value for property <code>showDeleteButton<\/code>"}},"setFileDescription":{"!description":"Sets a new value for property {@link #getFileDescription fileDescription}.\n\ndescription of the attachment\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFileDescription: String) -> sap.uiext.inbox.composite.InboxAttachmentTile","parameters":{"sFileDescription":"type: string, description: New value for property <code>fileDescription<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","setDownloadUrl":{"!description":"Sets a new value for property {@link #getDownloadUrl downloadUrl}.\n\nURL for attachment title link to download the attachment.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDownloadUrl: String) -> sap.uiext.inbox.composite.InboxAttachmentTile","parameters":{"sDownloadUrl":"type: string, description: New value for property <code>downloadUrl<\/code>"}},"getShowDeleteButton":{"!description":"Gets current value of property {@link #getShowDeleteButton showDeleteButton}.\n\nboolean value to indicate whether to show delete button\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCreationDate":{"!description":"Gets current value of property {@link #getCreationDate creationDate}.\n\ncreation date of the attachment","!static":false,"!category":"function","!type":"fn() -> String"},"getFileSize":{"!description":"Gets current value of property {@link #getFileSize fileSize}.\n\nsize of the attachment","!static":false,"!category":"function","!type":"fn() -> String"},"setFileName":{"!description":"Sets a new value for property {@link #getFileName fileName}.\n\nName of the attachment\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFileName: String) -> sap.uiext.inbox.composite.InboxAttachmentTile","parameters":{"sFileName":"type: string, description: New value for property <code>fileName<\/code>"}},"!constructorDescription":"Constructor for a new composite/InboxAttachmentTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFileName fileName} : string<\/li>\n<li>{@link #getFileSize fileSize} : string<\/li>\n<li>{@link #getFileDescription fileDescription} : string<\/li>\n<li>{@link #getFileTypeIcon fileTypeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getCreationDate creationDate} : string<\/li>\n<li>{@link #getDownloadUrl downloadUrl} : string<\/li>\n<li>{@link #getCreatedBy createdBy} : string<\/li>\n<li>{@link #getShowDeleteButton showDeleteButton} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:deleteAttachment deleteAttachment} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setCreationDate":{"!description":"Sets a new value for property {@link #getCreationDate creationDate}.\n\ncreation date of the attachment\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sCreationDate: String) -> sap.uiext.inbox.composite.InboxAttachmentTile","parameters":{"sCreationDate":"type: string, description: New value for property <code>creationDate<\/code>"}},"detachDeleteAttachment":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:deleteAttachment deleteAttachment} event of this <code>sap.uiext.inbox.composite.InboxAttachmentTile<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.composite.InboxAttachmentTile","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getFileName":{"!description":"Gets current value of property {@link #getFileName fileName}.\n\nName of the attachment","!static":false,"!category":"function","!type":"fn() -> String"},"!description":"InboxAttachmentTile","setFileTypeIcon":{"!description":"Sets a new value for property {@link #getFileTypeIcon fileTypeIcon}.\n\nIcon URI of the file type\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFileTypeIcon: sap.ui.core.URI) -> sap.uiext.inbox.composite.InboxAttachmentTile","parameters":{"sFileTypeIcon":"type: sap.ui.core.URI, description: New value for property <code>fileTypeIcon<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.composite.InboxAttachmentTile.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setFileSize":{"!description":"Sets a new value for property {@link #getFileSize fileSize}.\n\nsize of the attachment\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFileSize: String) -> sap.uiext.inbox.composite.InboxAttachmentTile","parameters":{"sFileSize":"type: string, description: New value for property <code>fileSize<\/code>"}},"getFileDescription":{"!description":"Gets current value of property {@link #getFileDescription fileDescription}.\n\ndescription of the attachment","!static":false,"!category":"function","!type":"fn() -> String"},"fireDeleteAttachment":{"!description":"Fires event {@link #event:deleteAttachment deleteAttachment} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.uiext.inbox.composite.InboxAttachmentTile","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getFileTypeIcon":{"!description":"Gets current value of property {@link #getFileTypeIcon fileTypeIcon}.\n\nIcon URI of the file type","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxAttachmentTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"attachDeleteAttachment":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:deleteAttachment deleteAttachment} event of this <code>sap.uiext.inbox.composite.InboxAttachmentTile<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uiext.inbox.composite.InboxAttachmentTile<\/code> itself.\n\nfire this event to delete the attachment","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.composite.InboxAttachmentTile","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uiext.inbox.composite.InboxAttachmentTile<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/uiext/inbox/composite/InboxAttachmentTile","getDownloadUrl":{"!description":"Gets current value of property {@link #getDownloadUrl downloadUrl}.\n\nURL for attachment title link to download the attachment.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"InboxAttachmentTile","setCreatedBy":{"!description":"Sets a new value for property {@link #getCreatedBy createdBy}.\n\nname of the user who has uploaded attachment\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sCreatedBy: String) -> sap.uiext.inbox.composite.InboxAttachmentTile","parameters":{"sCreatedBy":"type: string, description: New value for property <code>createdBy<\/code>"}},"getCreatedBy":{"!description":"Gets current value of property {@link #getCreatedBy createdBy}.\n\nname of the user who has uploaded attachment","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.uiext.inbox.InboxSplitApp":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","destroySplitAppl":{"!description":"Destroys the splitAppl in the aggregation {@link #getSplitAppl splitAppl}.","!static":false,"!category":"function","!type":"fn() -> sap.uiext.inbox.InboxSplitApp"},"setShowMasterPageNavBtn":{"!description":"Sets a new value for property {@link #getShowMasterPageNavBtn showMasterPageNavBtn}.\n\nShow/Hide the Navigation Button for the Master Page\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bShowMasterPageNavBtn: Boolean) -> sap.uiext.inbox.InboxSplitApp","parameters":{"bShowMasterPageNavBtn":"type: boolean, description: New value for property <code>showMasterPageNavBtn<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.InboxSplitApp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getTcmConfiguration":{"!description":"Gets current value of property {@link #getTcmConfiguration tcmConfiguration}.\n\nTCM Configuration object for control initialization.","!static":false,"!category":"function","!type":"fn() -> Object"},"detachNavButtonPressed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navButtonPressed navButtonPressed} event of this <code>sap.uiext.inbox.InboxSplitApp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.InboxSplitApp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!proto":"sap.ui.core.Control","resetSearchCriteria":{"!description":"Call this method to reset the search criteria.","!static":false,"!category":"function","!type":"fn() -> sap.uiext.inbox.InboxSplitApp"},"!category":"class","getShowMasterPageNavBtn":{"!description":"Gets current value of property {@link #getShowMasterPageNavBtn showMasterPageNavBtn}.\n\nShow/Hide the Navigation Button for the Master Page","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.InboxSplitApp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSplitAppl":{"!description":"Gets content of aggregation {@link #getSplitAppl splitAppl}.\n\nThis is the splitApp that is created inside the control","!static":false,"!category":"function","!type":"fn() -> sap.m.SplitApp"},"setSplitAppl":{"!description":"Sets the aggregated {@link #getSplitAppl splitAppl}.","!static":false,"!category":"function","!type":"fn(oSplitAppl: sap.m.SplitApp) -> sap.uiext.inbox.InboxSplitApp","parameters":{"oSplitAppl":"type: sap.m.SplitApp, description: The splitAppl to set"}},"!constructorDescription":"Constructor for a new InboxSplitApp.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowMasterPageNavBtn showMasterPageNavBtn} : boolean<\/li>\n<li>{@link #getTcmServiceURL tcmServiceURL} : string<\/li>\n<li>{@link #getFilters filters} : object[]<\/li>\n<li>{@link #getTcmConfiguration tcmConfiguration} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSplitAppl splitAppl} : sap.m.SplitApp<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navButtonPressed navButtonPressed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setTcmConfiguration":{"!description":"Sets a new value for property {@link #getTcmConfiguration tcmConfiguration}.\n\nTCM Configuration object for control initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oTcmConfiguration: Object) -> sap.uiext.inbox.InboxSplitApp","parameters":{"oTcmConfiguration":"type: object, description: New value for property <code>tcmConfiguration<\/code>"}},"!module":"sap/uiext/inbox/InboxSplitApp","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","fireNavButtonPressed":{"!description":"Fires event {@link #event:navButtonPressed navButtonPressed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.uiext.inbox.InboxSplitApp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setFilters":{"!description":"Sets a new value for property {@link #getFilters filters}.\n\nFilters to be applied on the data shown in the MasterPage\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFilters: [Object]) -> sap.uiext.inbox.InboxSplitApp","parameters":{"sFilters":"type: object[], description: New value for property <code>filters<\/code>"}},"getTcmServiceURL":{"!description":"Gets current value of property {@link #getTcmServiceURL tcmServiceURL}.\n\nTCM service URL","!static":false,"!category":"function","!type":"fn() -> String"},"getFilters":{"!description":"Gets current value of property {@link #getFilters filters}.\n\nFilters to be applied on the data shown in the MasterPage","!static":false,"!category":"function","!type":"fn() -> [Object]"},"setTcmServiceURL":{"!description":"Sets a new value for property {@link #getTcmServiceURL tcmServiceURL}.\n\nTCM service URL\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTcmServiceURL: String) -> sap.uiext.inbox.InboxSplitApp","parameters":{"sTcmServiceURL":"type: string, description: New value for property <code>tcmServiceURL<\/code>"}},"attachNavButtonPressed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navButtonPressed navButtonPressed} event of this <code>sap.uiext.inbox.InboxSplitApp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uiext.inbox.InboxSplitApp<\/code> itself.\n\nNavigation Button of the Master Page is pressed, if visible.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.InboxSplitApp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uiext.inbox.InboxSplitApp<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"bindTasks":{"!description":"Call this method to display data in the InboxSplitApp","!static":false,"!category":"function","!type":"fn(aFilters: [Object]) -> sap.uiext.inbox.InboxSplitApp","parameters":{"aFilters":"type: object[], description: undefined"}}},"sap.uiext.inbox.composite.InboxAttachmentTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxAttachmentTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uiext.inbox.composite.InboxAttachmentTile"},"sap.uiext.inbox.composite.InboxAttachmentsTileContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxAttachmentsTileContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uiext.inbox.composite.InboxAttachmentsTileContainer"},"sap.uiext.inbox.composite.InboxTaskTitleControl_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxTaskTitleControl with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uiext.inbox.composite.InboxTaskTitleControl"},"sap.uiext.inbox.composite.InboxBusyIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxBusyIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uiext.inbox.composite.InboxBusyIndicator"},"sap.uiext":{"!category":"namespace","inbox":"sap.uiext.inbox"},"sap.uiext.inbox.composite.InboxAddAttachmentTile":{"!description":"InboxAddAttachmentTile","extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxAddAttachmentTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.composite.InboxAddAttachmentTile.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new composite/InboxAddAttachmentTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Control#constructor sap.ui.core.Control} can be used.","!module":"sap/uiext/inbox/composite/InboxAddAttachmentTile","!helpDescription":"InboxAddAttachmentTile","!proto":"sap.ui.core.Control","!category":"class"},"sap.uiext.inbox.InboxPrimaryFilterEnum":{"!description":"Enumeration for Primary Filters This value will be applied for the DropDown Filter in Inbox","COMPLETED":{"!description":"Primary Filter for Completed Tasks","!category":"enum","!type":"String"},"!module":"sap/uiext/inbox/InboxPrimaryFilterEnum","!helpDescription":"Enumeration for Primary Filters This value will be applied for the DropDown Filter in Inbox","!category":"namespace","ESCALATED":{"!description":"Primary Filter for Escalated Tasks","!category":"enum","!type":"String"},"OPEN":{"!description":"Primary Filter for Open Tasks","!category":"enum","!type":"String"},"OVERDUE":{"!description":"Primary Filter for Overdue Tasks","!category":"enum","!type":"String"}},"sap.uiext.inbox.composite.InboxTaskComments":{"destroyComments":{"!description":"Destroys all the comments in the aggregation {@link #getComments comments}.","!static":false,"!category":"function","!type":"fn() -> sap.uiext.inbox.composite.InboxTaskComments"},"fireCommentSubmit":{"!description":"Fires event {@link #event:commentSubmit commentSubmit} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.uiext.inbox.composite.InboxTaskComments","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!proto":"sap.ui.core.Control","!category":"class","setFeederThumbnailSrc":{"!description":"Sets a new value for property {@link #getFeederThumbnailSrc feederThumbnailSrc}.\n\nURL to the thumbnail image for the comment feeder.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFeederThumbnailSrc: sap.ui.core.URI) -> sap.uiext.inbox.composite.InboxTaskComments","parameters":{"sFeederThumbnailSrc":"type: sap.ui.core.URI, description: New value for property <code>feederThumbnailSrc<\/code>"}},"insertComment":{"!description":"Inserts a comment into the aggregation {@link #getComments comments}.","!static":false,"!category":"function","!type":"fn(oComment: sap.uiext.inbox.composite.InboxComment, iIndex: Number) -> sap.uiext.inbox.composite.InboxTaskComments","parameters":{"oComment":"type: sap.uiext.inbox.composite.InboxComment, description: The comment to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the comment should be inserted at; for a negative value of <code>iIndex<\/code>, the comment is inserted at position 0; for a value greater than the current size of the aggregation, the comment is inserted at the last position"}},"!constructorDescription":"Constructor for a new composite/InboxTaskComments.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFeederSender feederSender} : string<\/li>\n<li>{@link #getFeederThumbnailSrc feederThumbnailSrc} : sap.ui.core.URI<\/li>\n<li>{@link #getShowFeeder showFeeder} : boolean (default: true)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getComments comments} : sap.uiext.inbox.composite.InboxComment[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:commentSubmit commentSubmit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfComment":{"!description":"Checks for the provided <code>sap.uiext.inbox.composite.InboxComment<\/code> in the aggregation {@link #getComments comments}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oComment: sap.uiext.inbox.composite.InboxComment) -> Number","parameters":{"oComment":"type: sap.uiext.inbox.composite.InboxComment, description: The comment whose index is looked for"}},"setFeederSender":{"!description":"Sets a new value for property {@link #getFeederSender feederSender}.\n\nSender for the comment feeder\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFeederSender: String) -> sap.uiext.inbox.composite.InboxTaskComments","parameters":{"sFeederSender":"type: string, description: New value for property <code>feederSender<\/code>"}},"getComments":{"!description":"Gets content of aggregation {@link #getComments comments}.\n\nURL to the thumbnail image.","!static":false,"!category":"function","!type":"fn() -> [sap.uiext.inbox.composite.InboxComment]"},"removeComment":{"!description":"Removes a comment from the aggregation {@link #getComments comments}.","!static":false,"!category":"function","!type":"fn(vComment: Number | String | sap.uiext.inbox.composite.InboxComment) -> sap.uiext.inbox.composite.InboxComment","parameters":{"vComment":"type: int|string|sap.uiext.inbox.composite.InboxComment, description: The comment to remove or its index or id"}},"addComment":{"!description":"Adds some comment to the aggregation {@link #getComments comments}.","!static":false,"!category":"function","!type":"fn(oComment: sap.uiext.inbox.composite.InboxComment) -> sap.uiext.inbox.composite.InboxTaskComments","parameters":{"oComment":"type: sap.uiext.inbox.composite.InboxComment, description: The comment to add; if empty, nothing is inserted"}},"detachCommentSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:commentSubmit commentSubmit} event of this <code>sap.uiext.inbox.composite.InboxTaskComments<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.composite.InboxTaskComments","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getFeederThumbnailSrc":{"!description":"Gets current value of property {@link #getFeederThumbnailSrc feederThumbnailSrc}.\n\nURL to the thumbnail image for the comment feeder.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setShowHeader":{"!description":"Sets a new value for property {@link #getShowHeader showHeader}.\n\nBoolean value for visibility of header\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeader: Boolean) -> sap.uiext.inbox.composite.InboxTaskComments","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"}},"!description":"InboxTaskComments","getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.composite.InboxTaskComments.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setShowFeeder":{"!description":"Sets a new value for property {@link #getShowFeeder showFeeder}.\n\nBoolean value for visibilty of comment feeder\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFeeder: Boolean) -> sap.uiext.inbox.composite.InboxTaskComments","parameters":{"bShowFeeder":"type: boolean, description: New value for property <code>showFeeder<\/code>"}},"getShowHeader":{"!description":"Gets current value of property {@link #getShowHeader showHeader}.\n\nBoolean value for visibility of header\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxTaskComments with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removeAllComments":{"!description":"Removes all the controls from the aggregation {@link #getComments comments}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.uiext.inbox.composite.InboxComment]"},"!module":"sap/uiext/inbox/composite/InboxTaskComments","attachCommentSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:commentSubmit commentSubmit} event of this <code>sap.uiext.inbox.composite.InboxTaskComments<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uiext.inbox.composite.InboxTaskComments<\/code> itself.\n\nEvent is raised when submit on the feeder is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.composite.InboxTaskComments","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uiext.inbox.composite.InboxTaskComments<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!helpDescription":"InboxTaskComments","getFeederSender":{"!description":"Gets current value of property {@link #getFeederSender feederSender}.\n\nSender for the comment feeder","!static":false,"!category":"function","!type":"fn() -> String"},"getShowFeeder":{"!description":"Gets current value of property {@link #getShowFeeder showFeeder}.\n\nBoolean value for visibilty of comment feeder\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.uiext.inbox.Inbox":{"getTaskExecutionURLThemeValue":{"!description":"Gets current value of property {@link #getTaskExecutionURLThemeValue taskExecutionURLThemeValue}.\n\nset the theme URL parameter string to be appended to the task Execution URL. In case of a function callback set for Task Execution PopUp, this string will not be appended.","!static":false,"!category":"function","!type":"fn() -> String"},"detachTaskAction":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:taskAction taskAction} event of this <code>sap.uiext.inbox.Inbox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.Inbox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!proto":"sap.ui.core.Control","!category":"class","attachTaskSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:taskSelectionChange taskSelectionChange} event of this <code>sap.uiext.inbox.Inbox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uiext.inbox.Inbox<\/code> itself.\n\nThis event is fired when table row selection is changed in the list view of Inbox control","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.Inbox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uiext.inbox.Inbox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireODataRequestCompleted":{"!description":"Fires event {@link #event:oDataRequestCompleted oDataRequestCompleted} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.uiext.inbox.Inbox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"bindTaskTypeDynamicFilter":{"!description":"Registers a callback function to be invoked to populate the TaskType Drill Down. This should return the array of Values to be populated in the Task Type Drill Down.","!static":false,"!category":"function","!type":"fn(taskTypeDynamicFilterCallBack: fn()) -> sap.uiext.inbox.Inbox","parameters":{"taskTypeDynamicFilterCallBack":"type: function, description: callback function that populates the TaskType Drill Down"}},"setHandleBindings":{"!description":"Sets a new value for property {@link #getHandleBindings handleBindings}.\n\nset this as true for oData Model. If set as false, the user will need to handle task Actions, search and Task Execution URL population. See function call back methods.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHandleBindings: Boolean) -> sap.uiext.inbox.Inbox","parameters":{"bHandleBindings":"type: boolean, description: New value for property <code>handleBindings<\/code>"}},"addAction":{"!description":"Adds an additional action to inbox","!static":false,"!category":"function","!type":"fn(sActionID: String, sDisplayText: String, sToolTip: String, fnActionHandler: fn(), bMassEnabled: Boolean) -> sap.uiext.inbox.Inbox","parameters":{"sActionID":"type: string, description: ID of the new action.","bMassEnabled":"type: boolean, description: Flag indicating if the action is mass enabled.Default value is true.","sDisplayText":"type: string, description: The Label Text for the new action.","sToolTip":"type: string, description: Tooltip for the added action.","fnActionHandler":"type: function, description: Function to be called when the action is executed"}},"clearRowSettings":{"!description":"Row Settings applied using the Settings button shall be cleared. <TO be Implemented>","!static":false,"!category":"function","!type":"fn()"},"!constructorDescription":"Constructor for a new Inbox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTaskExecutionURLThemeValue taskExecutionURLThemeValue} : string<\/li>\n<li>{@link #getHandleBindings handleBindings} : boolean (default: true)<\/li>\n<li>{@link #getOpenCompletedTasks openCompletedTasks} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:oDataRequestCompleted oDataRequestCompleted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:refresh refresh} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:taskAction taskAction} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:taskSelectionChange taskSelectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getSubstitutionEnabled":{"!description":"Getter for property isSubstitutionEnabled.\n\nBoolean property to enable the sap.uiext.inbox.SubstitutionRulesManager control (default is false). If is true, 'Manage Substitution Rules' is visible in settings button, else if it is false the option will not be visible under settings.\n\nDefault value is false","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachTaskSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:taskSelectionChange taskSelectionChange} event of this <code>sap.uiext.inbox.Inbox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.Inbox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachODataRequestCompleted":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:oDataRequestCompleted oDataRequestCompleted} event of this <code>sap.uiext.inbox.Inbox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.Inbox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setOpenTaskUIInNewTab":{"!description":"Setter for property bOpenTaskUIInNewTab. If set to true, Task UI will opene in a new tab. Default value is false.","!static":false,"!category":"function","!type":"fn()"},"bindTaskTable":{"!description":"Binds the Task Table Rows to the given path.","!static":false,"!category":"function","!type":"fn(sPath: String, oTaskFilters: Object) -> sap.uiext.inbox.Inbox","parameters":{"sPath":"type: string, description: Binding path for the rows of the Task Table","oTaskFilters":"type: object, description: Predefined filter for the Task Table (sap.uiext.inbox.TaskInitialFilters)"}},"detachRefresh":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:refresh refresh} event of this <code>sap.uiext.inbox.Inbox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.Inbox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setConfiguration":{"!description":"Set configuration on Inbox. See APIs in InboxConfiguration","!static":false,"!category":"function","!type":"fn(oConfiguration: Object) -> sap.uiext.inbox.Inbox","parameters":{"oConfiguration":"type: object, description: Configuration object to set the configuration on Inbox. See APIs in InboxConfiguration"}},"fireTaskAction":{"!description":"Fires event {@link #event:taskAction taskAction} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.uiext.inbox.Inbox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireTaskSelectionChange":{"!description":"Fires event {@link #event:taskSelectionChange taskSelectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.uiext.inbox.Inbox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.Inbox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachRefresh":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:refresh refresh} event of this <code>sap.uiext.inbox.Inbox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uiext.inbox.Inbox<\/code> itself.\n\nthis event is fires to handle refresh Action, when the handleBindings property is set to false.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.Inbox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uiext.inbox.Inbox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setSubstitutionEnabled":{"!description":"Setter for property isSubstitutionEnabled.\n\nBoolean property to enable the sap.uiext.inbox.SubstitutionRulesManager control (default is false). If set to true, 'Manage Substitution Rules' is visible in settings button, else if set to false the option will not be visible under settings.\n\nDefault value is false","!static":false,"!category":"function","!type":"fn(bIsSubstitutionEnabled: Boolean, path: String)","parameters":{"path":"type: string, description: the path","bIsSubstitutionEnabled":"type: boolean, description: isSubstitutionEnabled"}},"refresh":{"!description":"Inbox is refreshed if task is completed","!static":false,"!category":"function","!type":"fn(aTaskUniqueIdentifiers: [Object])","parameters":{"aTaskUniqueIdentifiers":"type: object[], description: Array of Json objects containing TaskInstanceID and SAP__Origin"}},"setOpenCompletedTasks":{"!description":"Sets a new value for property {@link #getOpenCompletedTasks openCompletedTasks}.\n\nset this to true to enable opening of completed tasks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bOpenCompletedTasks: Boolean) -> sap.uiext.inbox.Inbox","parameters":{"bOpenCompletedTasks":"type: boolean, description: New value for property <code>openCompletedTasks<\/code>"}},"clearDrillDownFilter":{"!description":"Clears all the filters applied in Drill Down. (Status, Priority, Date/Time and TaskType).","!static":false,"!category":"function","!type":"fn()"},"getHandleBindings":{"!description":"Gets current value of property {@link #getHandleBindings handleBindings}.\n\nset this as true for oData Model. If set as false, the user will need to handle task Actions, search and Task Execution URL population. See function call back methods.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachTaskAction":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:taskAction taskAction} event of this <code>sap.uiext.inbox.Inbox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uiext.inbox.Inbox<\/code> itself.\n\nthis event is fires to handle task Actions - Claim, Release, when the handleBindings property is set to false.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.Inbox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uiext.inbox.Inbox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.Inbox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getTaskTableBinding":{"!description":"returns the binding for the Task Table","!static":false,"!category":"function","!type":"fn() -> Object"},"attachODataRequestCompleted":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:oDataRequestCompleted oDataRequestCompleted} event of this <code>sap.uiext.inbox.Inbox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uiext.inbox.Inbox<\/code> itself.\n\nIf handleBindings property is set to true , the control assumes an oData model is set and handles the complete logic within. In this case once the oData request is complete, this event is fired with additional parameters.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uiext.inbox.Inbox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uiext.inbox.Inbox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/uiext/inbox/Inbox","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getOpenCompletedTasks":{"!description":"Gets current value of property {@link #getOpenCompletedTasks openCompletedTasks}.\n\nset this to true to enable opening of completed tasks.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindTaskExecutionURL":{"!description":"Registers a callback function to be invoked to populate the Task Execution PopUp.","!static":false,"!category":"function","!type":"fn(taskExecURLfnCallBack: fn(), taskExecURLStatusCallBack: fn()) -> sap.uiext.inbox.Inbox","parameters":{"taskExecURLStatusCallBack":"type: function, description: callback function for getting the status of the task, will be supplied with the task ID and should return the Task Status.","taskExecURLfnCallBack":"type: function, description: callback function for getting the execution URL, will be supplied with the task ID and should return the URL to be displayed with the Task Execution PopUp."}},"bindSearch":{"!description":"Registers a callback function to be invoked to search on the Task Table.","!static":false,"!category":"function","!type":"fn(searchCallBack: fn()) -> sap.uiext.inbox.Inbox","parameters":{"searchCallBack":"type: function, description: callback function to be called to execute a search"}},"bindTasks":{"!description":"Bind the Inbox Task Collection","!static":false,"!category":"function","!type":"fn(sPath: String, oFilter: Object, oSorter: sap.ui.model.Sorter) -> sap.uiext.inbox.Inbox","parameters":{"sPath":"type: string, description: Binding path for the element displaying the tasks within the Inbox. This path is the Task Collection according to the TCM (Task Consumption Model)","oFilter":"type: object, description: Predefined filter that is applied to the Task Collection before displaying the tasks in the Inbox. (sap.uiext.inbox.InboxFilters)","oSorter":"type: sap.ui.model.Sorter, description: {}Predefined sorter that is applied to the Task Collection before displaying the tasks in the Inbox. By default the tasks are sorted on 'CreatedOn' , descending, according to TCM. The sorter is not validated for the path being a valid TCM Entity Property. The sorter passed will be applied to the oData service as is. In case the entity Property in the path is a sortable property on the UI, the sorter indicator for that property will be visible."}},"fireRefresh":{"!description":"Fires event {@link #event:refresh refresh} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.uiext.inbox.Inbox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setTaskExecutionURLThemeValue":{"!description":"Sets a new value for property {@link #getTaskExecutionURLThemeValue taskExecutionURLThemeValue}.\n\nset the theme URL parameter string to be appended to the task Execution URL. In case of a function callback set for Task Execution PopUp, this string will not be appended.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTaskExecutionURLThemeValue: String) -> sap.uiext.inbox.Inbox","parameters":{"sTaskExecutionURLThemeValue":"type: string, description: New value for property <code>taskExecutionURLThemeValue<\/code>"}}},"sap.uiext.inbox.InboxPrimaryFilters":{"!description":"Primary Filters for Inbox","extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.InboxPrimaryFilters with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.InboxPrimaryFilters.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for InboxPrimaryFilters","!module":"sap/uiext/inbox/InboxPrimaryFilters","!helpDescription":"Primary Filters for Inbox","!proto":"sap.ui.base.Object","!category":"class","setFilter":{"!description":"set Primary filter","!static":false,"!category":"function","!type":"fn(oFilter: sap.uiext.inbox.InboxPrimaryFilterEnum)","parameters":{"oFilter":"type: sap.uiext.inbox.InboxPrimaryFilterEnum, description: undefined"}}},"sap.uiext.inbox.composite.InboxComment":{"!description":"fsgg","getThumbnailSrc":{"!description":"Gets current value of property {@link #getThumbnailSrc thumbnailSrc}.\n\nURL to the thumbnail image.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getMetadata":{"!description":"Returns a metadata object for class sap.uiext.inbox.composite.InboxComment.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nThe FeedChunk text","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","!category":"class","setThumbnailSrc":{"!description":"Sets a new value for property {@link #getThumbnailSrc thumbnailSrc}.\n\nURL to the thumbnail image.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sThumbnailSrc: sap.ui.core.URI) -> sap.uiext.inbox.composite.InboxComment","parameters":{"sThumbnailSrc":"type: sap.ui.core.URI, description: New value for property <code>thumbnailSrc<\/code>"}},"getSapOrigin":{"!description":"Gets current value of property {@link #getSapOrigin sapOrigin}.\n\nRepresent system origin in case of multi origin scenario","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxComment with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new composite/InboxComment.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSender sender} : string<\/li>\n<li>{@link #getTimestamp timestamp} : string<\/li>\n<li>{@link #getThumbnailSrc thumbnailSrc} : sap.ui.core.URI<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getCreatedBy createdBy} : string<\/li>\n<li>{@link #getSapOrigin sapOrigin} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/uiext/inbox/composite/InboxComment","!helpDescription":"fsgg","getTimestamp":{"!description":"Gets current value of property {@link #getTimestamp timestamp}.\n\nFormat is ISO 8601 YYYY-MM-DDThh:mm:ss.sZ, Z meaning the time is in UTC time zone","!static":false,"!category":"function","!type":"fn() -> String"},"setCreatedBy":{"!description":"Sets a new value for property {@link #getCreatedBy createdBy}.\n\nUnique username of the user responsible for adding comment\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sCreatedBy: String) -> sap.uiext.inbox.composite.InboxComment","parameters":{"sCreatedBy":"type: string, description: New value for property <code>createdBy<\/code>"}},"setSapOrigin":{"!description":"Sets a new value for property {@link #getSapOrigin sapOrigin}.\n\nRepresent system origin in case of multi origin scenario\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSapOrigin: String) -> sap.uiext.inbox.composite.InboxComment","parameters":{"sSapOrigin":"type: string, description: New value for property <code>sapOrigin<\/code>"}},"setSender":{"!description":"Sets a new value for property {@link #getSender sender}.\n\nSender of the comment chunk\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSender: String) -> sap.uiext.inbox.composite.InboxComment","parameters":{"sSender":"type: string, description: New value for property <code>sender<\/code>"}},"getSender":{"!description":"Gets current value of property {@link #getSender sender}.\n\nSender of the comment chunk","!static":false,"!category":"function","!type":"fn() -> String"},"getCreatedBy":{"!description":"Gets current value of property {@link #getCreatedBy createdBy}.\n\nUnique username of the user responsible for adding comment","!static":false,"!category":"function","!type":"fn() -> String"},"setTimestamp":{"!description":"Sets a new value for property {@link #getTimestamp timestamp}.\n\nFormat is ISO 8601 YYYY-MM-DDThh:mm:ss.sZ, Z meaning the time is in UTC time zone\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTimestamp: String) -> sap.uiext.inbox.composite.InboxComment","parameters":{"sTimestamp":"type: string, description: New value for property <code>timestamp<\/code>"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nThe FeedChunk text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.uiext.inbox.composite.InboxComment","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.uiext.inbox.composite.InboxComment_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxComment with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uiext.inbox.composite.InboxComment"},"sap.uiext.inbox.composite.InboxTaskComments_obj":{"extend":{"!description":"Creates a new subclass of class sap.uiext.inbox.composite.InboxTaskComments with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uiext.inbox.composite.InboxTaskComments"},"sap.uiext.inbox.composite":{"fileDescription":{"!description":"description of the attachment","!category":"enum","!type":"String"},"fileName":{"!description":"name of the selected file","!category":"enum","!type":"String"},"hasComments":{"!description":"has Comments","!category":"enum","!type":"Boolean"},"feederThumbnailSrc":{"!description":"URL to the thumbnail image for the comment feeder.","!category":"enum","!type":"sap.ui.core.URI"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"downloadUrl":{"!description":"URL for attachment title link to download the attachment.","!category":"enum","!type":"String"},"!category":"namespace","showFeeder":{"!description":"Boolean value for visibilty of comment feeder","!category":"enum","!type":"Boolean"},"InboxAddAttachmentTile":"sap.uiext.inbox.composite.InboxAddAttachmentTile_obj","isFileSelected":{"!description":"boolean property to indicate if user has selected a file to upload","!category":"enum","!type":"Boolean"},"InboxAttachmentTile":"sap.uiext.inbox.composite.InboxAttachmentTile_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"InboxUploadAttachmentTile":"sap.uiext.inbox.composite.InboxUploadAttachmentTile_obj","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"categoryIconURI":{"!description":"Category icon","!category":"enum","!type":"sap.ui.core.URI"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"feederSender":{"!description":"Sender for the comment feeder","!category":"enum","!type":"String"},"text":{"!description":"The FeedChunk text","!category":"enum","!type":"String"},"hasAttachments":{"!description":"has Attachments","!category":"enum","!type":"Boolean"},"showDeleteButton":{"!description":"boolean value to indicate whether to show delete button","!category":"enum","!type":"Boolean"},"showAddTile":{"!description":"boolean value to indicate whether to show Add Attachment tile","!category":"enum","!type":"Boolean"},"timestamp":{"!description":"Format is ISO 8601 YYYY-MM-DDThh:mm:ss.sZ, Z meaning the time is in UTC time zone","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"InboxBusyIndicator":"sap.uiext.inbox.composite.InboxBusyIndicator_obj","thumbnailSrc":{"!description":"URL to the thumbnail image.","!category":"enum","!type":"sap.ui.core.URI"},"showHeader":{"!description":"Boolean value for visibility of header","!category":"enum","!type":"Boolean"},"enteredDescription":{"!description":"description string entered by user while uploading a file","!category":"enum","!type":"String"},"creationDate":{"!description":"creation date of the attachment","!category":"enum","!type":"String"},"InboxTaskComments":"sap.uiext.inbox.composite.InboxTaskComments_obj","InboxAttachmentsTileContainer":"sap.uiext.inbox.composite.InboxAttachmentsTileContainer_obj","uploadUrl":{"!description":"URL to upload the selected file","!category":"enum","!type":"String"},"fileSize":{"!description":"size of the attachment","!category":"enum","!type":"String"},"createdBy":{"!description":"Unique username of the user responsible for adding comment","!category":"enum","!type":"String"},"sender":{"!description":"Sender of the comment chunk","!category":"enum","!type":"String"},"InboxComment":"sap.uiext.inbox.composite.InboxComment_obj","sapOrigin":{"!description":"Represent system origin in case of multi origin scenario","!category":"enum","!type":"String"},"fileTypeIcon":{"!description":"icon URI of the selected file type","!category":"enum","!type":"sap.ui.core.URI"},"taskTitle":{"!description":"The Task Title of the Task","!category":"enum","!type":"String"},"InboxTaskTitleControl":"sap.uiext.inbox.composite.InboxTaskTitleControl_obj","fileType":{"!description":"type of the selected file for uploading","!category":"enum","!type":"String"}}}}