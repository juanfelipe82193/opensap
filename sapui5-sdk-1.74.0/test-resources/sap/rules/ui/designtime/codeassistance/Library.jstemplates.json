{"Templates":[{"template":"new sap.rules.ui.DecisionTableConfiguration(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tcellFormat: ${sap.rules.ui.DecisionTableCellFormat.Both}, // sap.rules.ui.DecisionTableCellFormat\n\t\thitPolicies: ${[]}, // sap.rules.ui.RuleHitPolicy[]\n\t\tenableSettings: ${bEnableSettings}, // boolean\n\t\tdecisionTableFormat: ${sap.rules.ui.DecisionTableFormat.CellFormat}, // sap.rules.ui.DecisionTableFormat\n\t\tthreshold: ${30}, // int\n\t\tvisibleRowCount: ${30}, // int\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"DecisionTableConfiguration","Experimental":false,"module":"sap/rules/ui/DecisionTableConfiguration","description":"DecisionTableConfiguration(sId?, mSettings?) : sap.rules.ui.DecisionTableConfiguration","constructorDescription":"Constructor for a new DecisionTableConfiguration.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCellFormat cellFormat} : sap.rules.ui.DecisionTableCellFormat (default: Both)<\/li>\n<li>{@link #getHitPolicies hitPolicies} : sap.rules.ui.RuleHitPolicy[] (default: FirstMatch,AllMatch)<\/li>\n<li>{@link #getEnableSettings enableSettings} : boolean (default: false)<\/li>\n<li>{@link #getDecisionTableFormat decisionTableFormat} : sap.rules.ui.DecisionTableFormat (default: CellFormat)<\/li>\n<li>{@link #getThreshold threshold} : int (default: 30)<\/li>\n<li>{@link #getVisibleRowCount visibleRowCount} : int (default: 30)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.rules.ui.DecisionTableConfiguration","helpDescription":"The <code>sap.rules.ui.DecisionTableConfiguration<\/code> element provides the ability to define specific properties that will be applied when rendering the <code>sap.rules.ui.RuleBuilder<\/code> in decision table mode.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireChange(\n\t{\n\t\tname: ${name}, // any\n\t\tvalue: ${value} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.rules.ui.DecisionTableConfiguration.fireChange","description":"fireChange(mParameters?) : sap.rules.ui.DecisionTableConfiguration","helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.rules.ui.RuleBuilder(\n\t\"${sId}\", // string\n\t{\n\t\ttypes: ${[]}, // sap.rules.ui.RuleType[]\n\t\tbindingContextPath: \"${bindingContextPath}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tdecisionTableConfiguration: ${decisionTableConfiguration}, // sap.rules.ui.DecisionTableConfiguration\n\t\ttextRuleConfiguration: ${textRuleConfiguration}, // sap.rules.ui.TextRuleConfiguration\n\t\texpressionLanguage: ${expressionLanguage}, // (sap.rules.ui.services.ExpressionLanguage|string)\n\t\tastExpressionLanguage: ${astExpressionLanguage} // (sap.rules.ui.services.AstExpressionLanguage|string)\n\t}\n)\n","static":"true","prefix":"RuleBuilder","Experimental":false,"module":"sap/rules/ui/RuleBuilder","description":"RuleBuilder(sId?, mSettings?) : sap.rules.ui.RuleBuilder","constructorDescription":"Constructor for a new RuleBuilder control.\r\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTypes types} : sap.rules.ui.RuleType[] (default: DecisionTable,TextRule)<\/li>\n<li>{@link #getBindingContextPath bindingContextPath} : string<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDecisionTableConfiguration decisionTableConfiguration} : sap.rules.ui.DecisionTableConfiguration<\/li>\n<li>{@link #getTextRuleConfiguration textRuleConfiguration} : sap.rules.ui.TextRuleConfiguration<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getExpressionLanguage expressionLanguage} : (sap.ui.core.ID | sap.rules.ui.services.ExpressionLanguage)<\/li>\n<li>{@link #getAstExpressionLanguage astExpressionLanguage} : (sap.ui.core.ID | sap.rules.ui.services.AstExpressionLanguage)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link Control#constructor Control}\ncan be used as well.","extends":"Control","Deprecated":false,"name":"sap.rules.ui.RuleBuilder","helpDescription":"The <code>sap.rules.ui.RuleBuilder<\/code> control allows business users to create rules using a business language.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.rules.ui.TextRuleConfiguration(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tenableSettings: ${bEnableSettings}, // boolean\n\t\tenableElse: ${bEnableElse}, // boolean\n\t\tenableElseIf: ${bEnableElseIf}, // boolean\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"TextRuleConfiguration","Experimental":false,"module":"sap/rules/ui/TextRuleConfiguration","description":"TextRuleConfiguration(sId?, mSettings?) : sap.rules.ui.TextRuleConfiguration","constructorDescription":"Constructor for a new TextRuleConfiguration.\r\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableSettings enableSettings} : boolean (default: false)<\/li>\n<li>{@link #getEnableElse enableElse} : boolean (default: true)<\/li>\n<li>{@link #getEnableElseIf enableElseIf} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.rules.ui.TextRuleConfiguration","helpDescription":"The <code>sap.rules.ui.TextRuleConfiguration<\/code> element provides the ability to define specific properties that will be applied when rendering the <code>sap.rules.ui.RuleBuilder<\/code> in decision table mode.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireChange(\n\t{\n\t\tname: ${name}, // any\n\t\tvalue: ${value} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.rules.ui.TextRuleConfiguration.fireChange","description":"fireChange(mParameters?) : sap.rules.ui.TextRuleConfiguration","helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}}],"!version":"1.20.0"}