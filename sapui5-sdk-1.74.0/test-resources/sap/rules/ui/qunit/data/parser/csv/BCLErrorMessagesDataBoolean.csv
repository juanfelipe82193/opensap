true~player.age > 'bomb'~Error in expression; enter number instead of ''bomb'
true~player.gender is less than 5~Error in expression; enter string in single quotes: '5' instead of 5
true~average of all player.name~Error in expression; enter number, timeinterval instead of 'player.name
true~player.gender contains ('male', 'female')~Error in expression; enter ')' ,'+' instead of ';'
true~player.age > 'One' ~Error in expression; enter number instead of ''One'
true~player.age exists in ('One','Two','Three')~Error in expression; enter number instead of ''One''
true~player.age exists in (1,'Two','Three')~Error in expression; enter number instead of ''Two''
true~average of all (player.age * player.name)~Error in expression; enter number, timeinterval instead of '('
true~average of all player.age * player.name~Error in expression; enter number instead of 'player.name
true~count of (player.payment.id group by player.payment.payment_player_id is greater than 3~Error in expression; enter ')' ,'where' ,'filter by' instead of 'group by'
true~player.age => player.session.start_time~Error in expression; enter number instead of 'player.session.start_time
true~player.age => player.payment.payment_rc.amount~Error in expression; 'player.payment.payment_rc.amount' is a list of values. Change to an expression representing a single value
true~count player.payment.id  is greater than 3 ~Error in expression; enter ''count distinct of', 'count of'' instead of 'count '
true~player.session.start_time equals 3~Error in expression; 'player.session.start_time' is a list of values. Change to an expression representing a single value
true~last player.session.start_time equals 3~Error in expression. Enter a date, time, timestamp using the application format <'yyyy-MM-dd'>,<'HH:mm:ss'>,<'yyyy-MM-dd HH:mm:ss'> instead of '3'.
true~player.birthdate  is  '01-28-1990'~Error in expression; enter ''is after', 'is before', 'is between', 'is equal or greater than', 'is equal or less than', 'is equal to', 'is greater than', 'is in the last', 'is in the next', 'is less than', 'is like', 'is not after', 'is not before', 'is not between', 'is not equal to', 'is not in the last', 'is not in the next', 'is not like'' instead of 'is '
true~ player.birthdate is equal to '12.12.90'~Error in expression. Enter a date, timestamp using the application format <'yyyy-MM-dd'>,<'yyyy-MM-dd HH:mm:ss'> instead of ''12.12.90''.
true~ player.birthdate is after '12.12.90'~Error in expression. Enter a date, timestamp using the application format <'yyyy-MM-dd'>,<'yyyy-MM-dd HH:mm:ss'> instead of ''12.12.90''
true~ player.birthdate  exists in '01-28-1990'~Error in expression; enter '(' instead of ''01-28-1990'
true~ player.birthdate is equal to  '1990-January-10'~Error in expression. Enter a date, timestamp using the application format <'yyyy-MM-dd'>,<'yyyy-MM-dd HH:mm:ss'> instead of ''1990-January-10''.
true~player.session.start_time  is equal to  '01/10/2013 3:47:39 AM' ~Error in expression; 'player.session.start_time' is a list of values. Change to an expression representing a single value
true~ player.session.start_time  is equal to  '01/10/2013 3:47:39 AM' ~Error in expression; 'player.session.start_time' is a list of values. Change to an expression representing a single value
true~ sum of all player.birthdate ~Error in expression; enter number, timeinterval instead of 'player.birthdate'
true~last player.session.start_time >= 6 ~Error in expression. Enter a date, time, timestamp using the application format <'yyyy-MM-dd'>,<'HH:mm:ss'>,<'yyyy-MM-dd HH:mm:ss'> instead of '6'.
true~last player.session.start_time is in '12.1.2013'~Error in expression; enter ''is in the last', 'is in the next'' instead of 'is in '
true~last player.session.start_time is between '12/12/2012' to 'January/12/2012'~Error in expression. Enter a date using the application format <'yyyy-MM-dd'> instead of ''January/12/2012''.
true~player.session.duration is greater than 20 minutes~Error in expression; 'player.session.duration' is a list of values. Change to an expression representing a single value
true~player.whale is 'true'~Error in expression; enter ''is after', 'is before', 'is between', 'is equal or greater than', 'is equal or less than', 'is equal to', 'is greater than', 'is in the last', 'is in the next', 'is less than', 'is like', 'is not after', 'is not before', 'is not between', 'is not equal to', 'is not in the last', 'is not in the next', 'is not like'' instead of 'is '
true~player.whale is equal to 'true'~Error in expression; 'is equal to' is not a valid entry
true~player.whale is not null~Error in expression; remove 'is not null'
true~player.birthday = today ~Error in expression; enter valid operand instead of 'player.birthday'
true~player.level_reached > 5~Error in expression; enter valid operand instead of 'player.level_reached'
true~sum of player.payment.payment_line.amount > 100~Error in expression; enter number, timeinterval instead of 'player.payment.payment_line.amount'
true~player.session.start_date~Error in expression; enter valid operand instead of 'player.session.start_date'
true~player.registrationdate equals today~Error in expression; enter valid operand instead of 'player.registrationdate'
true~minimum of (player.payment.payment_rc.amount) >= 100 USD~Error in expression; remove 'USD'
true~player.names exists in ('John', 'David')~Error in expression; enter valid operand instead of 'player.names'
true~averege of player.session.duration is greater than 300 minutes~Error in expression; enter valid operand instead of 'averege'
true~player.age is less then 40~Error in expression; enter ''is less than'' instead of 'is less th'
true~player.name conteins 'Jim'~Error in expression; 'conteins' is not a valid entry
true~player.name exists in 'Liad', 'Barel'~Error in expression; enter '(' instead of ''Liad
true~player. age > 20~Error in expression; enter valid operand instead of 'player.
true~player.session.start_time is after 11/12/2013  ~Error in expression; 'player.session.start_time' is a list of values. Change to an expression representing a single value
true~player.session.start_time is after 11/12/2013 ~Error in expression; 'player.session.start_time' is a list of values. Change to an expression representing a single value
true~average of (all player.age > 20)~Error in expression; enter ')' ,'where' ,'filter by' instead of '>'
true~player.name does not like 'John'~Error in expression; enter ''does not contain', 'does not end with', 'does not equal', 'does not exist in', 'does not start with'' instead of 'does not '
true~player.age is greater than 21,5~Error in expression; ';' is not a valid entry
true~player.payment.payment_rc.amount > 200~Error in expression; 'player.payment.payment_rc.amount' is a list of values. Change to an expression representing a single value
true~sum player.payment.payment_rc.amount >= 250~Error in expression; enter ''sum of'' instead of 'sum '
true~player.age is less than average all player.age~Error in expression; enter ''average of'' instead of 'average '
true~player.name.age > 20~Error in expression; enter valid operand instead of 'player.name.age'
true~player.birthdate != '05:05:00'~Error in expression. Enter a date, timestamp using the application format <'yyyy-MM-dd'>,<'yyyy-MM-dd HH:mm:ss'> instead of ''05:05:00''
true~player.birthdate is before 'T00:00:00'~Error in expression. Enter a date, timestamp using the application format <'yyyy-MM-dd'>,<'yyyy-MM-dd HH:mm:ss'> instead of ''T00:00:00''
true~'01:01:00' is between player.birthdate and '01-01-2000'~Error in expression. Enter a time, timestamp using the application format <'HH:mm:ss'>,<'yyyy-MM-dd HH:mm:ss'> instead of 'player.birthdate'
true~'01:01:00' is between last player.session.start_time  and '01-01-2000'~Error in expression. Enter a timestamp using the application format <'yyyy-MM-dd HH:mm:ss'> instead of ''01-01-2000''
true~maximum of all player.registration_time is greater than 1 hours~Error in expression. Enter a time, timestamp using the application format <'HH:mm:ss'>,<'yyyy-MM-dd HH:mm:ss'> instead of '1'
true~'01-01-2013 00:01:01' is between player.session.start_time and player.session.end_time~Error in expression; 'player.session.start_time' is a list of values. Change to an expression representing a single value
true~number of all player.id where current player.age + player.age > 8~Error in expression; the keyword 'current' must be applied to all operands on one side of the comparative operator in the 'where' clause.
true~sum of all amounts of all payment_rcs of all payments of all players where amount exists in (current reporting_amount of all payment_rcs of all payments of a player) is greater than 50~Error in expression; enter number, timeinterval instead of 'amounts'
true~sum of amount of all payment_rcs of all payments of all players where amount exists in (current reporting_amount of all payment_rcs of all payments of all players) is greater than 50~Error in expression. The keyword 'all' cannot follow an operand that contains the keyword 'current'.
true~number of all payment_rcs of all payments of a player where amount of all payment_rcs of all payments of all players > 0 > 12~Error in expression; 'amount of all payment_rcs of all payments of all players' is a list of values. Change to an expression representing a single value.
true~current player.age = 8~Error in expression; the keyword 'current' can only be used within a 'where' clause.
true~player.gender contains ('male'; 'female')~Error in expression; enter ')' ,'+' instead of ';'
true~player.age is greater than 21;5~Error in expression; ';' is not a valid entry
true~player.age exists in ('One';'Two';'Three')~Error in expression; enter number instead of ''One''
true~player.age exists in (1;'Two';'Three')~Error in expression; enter number instead of ''Two''
true~player.names exists in ('John'; 'David')~Error in expression; enter valid operand instead of 'player.names'
false~player.name exists in 'Liad'; 'Barel'~Error in expression; enter '(' instead of ''Liad
//Not a bug -  recheck
true~player.country.name In ("UK", "USA")~Error in expression; enter string instead of '"UK", "USA")'
true~(sum of player.payment.payment_rc.amount where last player.session.start_time)  > 0~Error in expression; enter boolean, valid date, timeinterval, number, string instead of 'last'
true~5 hours is between session.duration and 'T01:01:01'  -  last  player.registration_date~Error in expression; enter time instead of 'player.registration_date'

//Known bugs
true~player.whale equals 1~Error in expression; enter boolean instead of '1'
true~player.churn = 0~Error in expression; enter boolean instead of '0'
true~player.registration_date = today - 3,5 weeks~Error in expression; ',' is not a valid entry
true~first player.session.start_time is befor today~Error in expression; enter 'is before' instead of 'is befor

//Error reported also in client, yet not as an incomplete expression.
true~count of all player.id where (player.age > 20)~Incomplete expression;

true~count of (player.payment.id group by player.payment.player.payment.payment_rc) is greater than 3~Error in expression; enter timeinterval, number, time, valid date, timestamp, string, boolean instead of 'player.payment.player.payment.payment_rc
true~(player.name + player.age) > 0~Error in expression; enter string instead of 'player.age'
true~player.name exists in ('John'  'Mary')~Error in expression; enter ')' ,'+' ,',' instead of ''Mary'

