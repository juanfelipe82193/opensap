true~player.age > 'bomb'~Error in expression; enter number instead of ''bomb'
true~player.gender is less than 5~Error in expression; enter string in single quotes: '5' instead of 5
true~average of all player.name~Error in expression; enter number, timeinterval instead of 'player.name
true~player.gender contains ('male', 'female')~Error in expression; enter ')' ,'+' instead of ';'
true~player.age > 'One' ~Error in expression; enter number instead of ''One'
true~player.age exists in ('One','Two','Three')~Error in expression; enter number instead of ''One''
true~player.age exists in (1,'Two','Three')~Error in expression; enter number instead of ''Two''
true~average of all (player.age * player.name)~Error in expression; enter number, timeinterval instead of '('
true~average of all player.age * player.name~Error in expression; enter number instead of 'player.name
true~count of (player.payment.id group by player.payment.payment_player_id is greater than 3~Error in expression; enter ')' ,'where' ,'filter by' instead of 'group by'
true~player.age => player.session.start_time~Error in expression; enter number instead of 'player.session.start_time
true~player.age => player.payment.payment_rc.amount~Error in expression; 'player.payment.payment_rc.amount' is a list of values. Change to an expression representing a single value
true~count player.payment.id  is greater than 3 ~Error in expression; enter ''count distinct of', 'count of'' instead of 'count '
true~last player.session.start_time equals 3~Error in expression. Enter a date, time, timestamp using the application format <'yyyy-MM-dd'>,<'HH:mm:ss'>,<'yyyy-MM-dd HH:mm:ss'> instead of '3'.
true~ player.birthdate is equal to '12.12.90'~Error in expression. Enter a date, timestamp using the application format <'yyyy-MM-dd'>,<'yyyy-MM-dd HH:mm:ss'> instead of ''12.12.90''
true~ player.birthdate is after '12.12.90'~Error in expression. Enter a date, timestamp using the application format <'yyyy-MM-dd'>,<'yyyy-MM-dd HH:mm:ss'> instead of ''12.12.90''
true~ player.birthdate  exists in '01-28-1990'~Error in expression; enter '(' instead of ''01-28-1990'
true~ player.birthdate is equal to  '1990-January-10'~Error in expression. Enter a date, timestamp using the application format <'yyyy-MM-dd'>,<'yyyy-MM-dd HH:mm:ss'> instead of ''1990-January-10''
true~ sum of all player.birthdate ~Error in expression; enter number, timeinterval instead of 'player.birthdate'
true~last player.session.start_time >= 6 ~Error in expression. Enter a date, time, timestamp using the application format <'yyyy-MM-dd'>,<'HH:mm:ss'>,<'yyyy-MM-dd HH:mm:ss'> instead of '6'.
true~last player.session.start_time is in '12.1.2013'~Error in expression; enter ''is in the last', 'is in the next'' instead of 'is in '
true~last player.session.start_time is between '12/12/2012' to 'January/12/2012'~Error in expression. Enter a date using the application format <'yyyy-MM-dd'> instead of ''January/12/2012''
true~player.whale is equal to 'true'~Error in expression; enter boolean instead of ''true''
true~player.birthday = today ~Error in expression; enter valid operand instead of 'player.birthday'
true~player.level_reached > 5~Error in expression; enter valid operand instead of 'player.level_reached'
true~sum of player.payment.payment_line.amount > 100~Error in expression; enter number, timeinterval instead of 'player.payment.payment_line.amount'
true~player.session.start_date~Error in expression; enter valid operand instead of 'player.session.start_date'
true~player.registrationdate equals today~Error in expression; enter valid operand instead of 'player.registrationdate'
true~minimum of (player.payment.payment_rc.amount) >= 100 USD~Error in expression; remove 'USD'
true~player.names exists in ('John', 'David')~Error in expression; enter valid operand instead of 'player.names'
true~averege of player.session.duration is greater than 300 minutes~Error in expression; enter valid operand instead of 'averege'
true~player.age is less then 40~Error in expression; enter ''is less than'' instead of 'is less th'
true~player.name conteins 'Jim'~Error in expression; 'conteins' is not a valid entry
true~player.name exists in 'Liad', 'Barel'~Error in expression; enter '(' instead of ''Liad
true~player. age > 20~Error in expression; enter valid operand instead of 'player.
true~player.age is greater than 21,5~Error in expression; ';' is not a valid entry
true~count player.session.id > 100~Error in expression; enter ''count distinct of', 'count of'' instead of 'count '
true~count  player.session.id > 100~Error in expression; enter ''count distinct of', 'count of'' instead of 'count '
true~sum player.payment.payment_rc.amount >= 250~Error in expression; enter ''sum of'' instead of 'sum '
true~player.age is less than average all player.age~Error in expression; enter ''average of'' instead of 'average '
true~player.name.age > 20~Error in expression; enter valid operand instead of 'player.name.age'
true~player.birthdate != '05:05:00'~Error in expression. Enter a date, timestamp using the application format <'yyyy-MM-dd'>,<'yyyy-MM-dd HH:mm:ss'> instead of ''05:05:00''
true~player.birthdate is before 'T00:00:00'~Error in expression. Enter a date, timestamp using the application format <'yyyy-MM-dd'>,<'yyyy-MM-dd HH:mm:ss'> instead of ''T00:00:00''
true~'01:01:00' is between player.birthdate and '01-01-2000'~Error in expression. Enter a time, timestamp using the application format <'HH:mm:ss'>,<'yyyy-MM-dd HH:mm:ss'> instead of 'player.birthdate'
true~'01:01:00' is between last player.session.start_time  and '01-01-2000'~Error in expression. Enter a timestamp using the application format <'yyyy-MM-dd HH:mm:ss'> instead of ''01-01-2000''
true~maximum of all player.registration_time is greater than 1 hours~Error in expression. Enter a time, timestamp using the application format <'HH:mm:ss'>,<'yyyy-MM-dd HH:mm:ss'> instead of '1'
true~'01-01-2013 00:01:01' is between player.session.start_time and player.session.end_time~Error in expression; 'player.session.start_time' is a list of values. Change to an expression representing a single value
true~number of all player.id where current player.age + player.age > 8~Error in expression; the keyword 'current' must be applied to all operands on one side of the comparative operator in the 'where' clause.
true~current player.age = 8~Error in expression; the keyword 'current' can only be used within a 'where' clause.
true~count of player.purchase.purchase_item.virtual_item.name where (player.purchase.purchase_item.virtual_item.name ends with 'bomb'  player.purchase.timestamp is in the last 7 days)=0~Error in expression; enter boolean, date, number, string, time, timeinterval, timestamp instead of 'player.purchase.purchase_item.virtual_item.name'
true~name of the player contains 'Yifht' with a fuzzy score of 2~Error in expression; 'with a fuzzy score of' is not a valid entry\nError in expression; enter '<value from 0 to 1>' ,'<0 or 1>' instead of 'with a fuzzy score of'\n
true~name of the player contains 'Yifht' with a fuzzy score of -1~Error in expression; 'with a fuzzy score of' is not a valid entry\nError in expression; enter '<value from 0 to 1>' ,'<0 or 1>' instead of 'with a fuzzy score of'\n
true~player.gender contains ('male'; 'female')~Error in expression; enter ')' ,'+' instead of ';'
true~player.age is greater than 21;5~Error in expression; ';' is not a valid entry
true~player.names exists in ('John'; 'David')~Error in expression; enter valid operand instead of 'player.names'
false~player.name exists in 'Liad'; 'Barel'~Error in expression; enter '(' instead of ''Liad



//Known bugs
true~player.whale equals 1~Error in expression; enter boolean instead of '1'
true~player.churn = 0~Error in expression; enter boolean instead of '0'
true~player.registration_date = today - 3,5 weeks~Error in expression; ',' is not a valid entry
true~first player.session.start_time is befor today~Error in expression; enter 'is before' instead of 'is befor

true~count of (player.payment.id group by player.payment.player.payment.payment_rc) is greater than 3~Error in expression; enter timeinterval, number, time, valid date, timestamp, string, boolean instead of 'player.payment.player.payment.payment_rc
true~(player.name + player.age) > 0~Error in expression; enter string instead of 'player.age'

