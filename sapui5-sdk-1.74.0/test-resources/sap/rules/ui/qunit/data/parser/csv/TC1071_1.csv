true;STEP 1 - Complex statement Number;{ "ruleBody": { "type": "text", "content": { "condition": "count of (all player.age where player.age > 18 and current player.gender = player.gender) >= 4", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"18","uom":"","type":"Number","operator":">","description":"player.age"},{"name":"P2","value":"4","uom":"","type":"Number","operator":">=","description":"count of all player.age where player.age > :P1 and current player.gender = player.gender"}];
true;STEP 2 - single statement Number;{ "ruleBody": { "type": "text", "content": { "condition": "player.age = 20", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"20","uom":"","type":"Number","operator":"=","description":"player.age"}];
true;STEP 3 - single statement arithmetic operator;{ "ruleBody": { "type": "text", "content": { "condition": "player.age + 10 > 25", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"10","uom":"","type":"Number","operator":"+","description":"player.age"},{"name":"P2","value":"25","uom":"","type":"Number","operator":">","description":"player.age + :P1"}];
true;STEP 4 - single statement String;{ "ruleBody": { "type": "text", "content": { "condition": "player.gender = 'male'", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"'male'","uom":"","type":"String","operator":"=","description":"player.gender"}];
true;STEP 6 - single statement set of values;{ "ruleBody": { "type": "text", "content": { "condition": "player.age exists in (21.5 , 30 , 40)", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"21.5","uom":"","type":"Number","operator":"exists in","description":"player.age"},{"name":"P2","value":"30","uom":"","type":"Number","operator":"exists in","description":"player.age"},{"name":"P3","value":"40","uom":"","type":"Number","operator":"exists in","description":"player.age"}];
true;STEP 7 - single statement boolean;{ "ruleBody": { "type": "text", "content": { "condition": "player.whale is equal to true", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"true","uom":"","type":"Boolean","operator":"is equal to","description":"player.whale"}];
true;STEP 8 - single statement day;{ "ruleBody": { "type": "text", "content": { "condition": "player.birthdate is in the next 2 days", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"2","uom":"day","type":"TimeSpan","operator":"is in the next","description":"player.birthdate"}];
true;STEP 9 - single statement hour;{ "ruleBody": { "type": "text", "content": { "condition": "maximum of all session.duration is greater than 2 hours", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"2","uom":"hour","type":"TimeSpan","operator":"is greater than","description":"max of(all session.duration)"}];
true;STEP 10 - single statement minute;{ "ruleBody": { "type": "text", "content": { "condition": "average of all session.duration is greater than 30 minutes", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"30","uom":"minute","type":"TimeSpan","operator":"is greater than","description":"average of(all session.duration)"}];
true;STEP 11 - single statement date;{ "ruleBody": { "type": "text", "content": { "condition": "last player.payment.timestamp = '21.10.2012'", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };{"name":"P1","value":"'21.10.2012'","uom":"","type":"Date","operator":"=","description":"last\(player.payment.timestamp\)"};
true;STEP 12 - Complex statement plus top and order by;{ "ruleBody": { "type": "text", "content": { "condition": "count of  ( 20 player.session.id with the highest duration where id = '26') = 1", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"'26'","uom":"","type":"String","operator":"=","description":"id"},{"name":"P2","value":"20","uom":"","type":"Number","operator":"with the highest","description":"duration"},{"name":"P3","value":"1","uom":"","type":"Number","operator":"=","description":"count of(:P2 player.session.id with the highest duration where id = :P1)"}];
true;STEP 13 - single statement exists in plus top and order by;{ "ruleBody": { "type": "text", "content": { "condition": "player.id exists in ( 20 player.session.id with the highest duration where id = 'CPI2013_GLOBAL' )", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"'CPI2013_GLOBAL'","uom":"","type":"String","operator":"=","description":"id"},{"name":"P2","value":"20","uom":"","type":"Number","operator":"with the highest","description":"duration"}];
true;STEP 14 - single statement boolean and string;{ "ruleBody": { "type": "text", "content": { "condition": "player.payment_status is equal to true and player.country_id  is like 'I%'", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"true","uom":"","type":"Boolean","operator":"is equal to","description":"player.payment_status"},{"name":"P2","value":"'I%'","uom":"","type":"String","operator":"is like","description":"player.country_id"}];
true;STEP 15 - Complex statement Number;{ "ruleBody": { "type": "text", "content": { "condition": "number of payments of a player > 0 and number of payment_rcs of all payments of a player = number of (payment_rcs of all payments of a player where amount > 0)", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"0","uom":"","type":"Number","operator":">","description":"number of(payments of a player)"},{"name":"P2","value":"0","uom":"","type":"Number","operator":">","description":"amount"}];
true;STEP 16 - Complex statement Number;{ "ruleBody": { "type": "text", "content": { "condition": "(number of payment_rcs of all payments of a player where amount > 70 >10 or number of payment_rcs of all payments of a player where amount > 70 <= 5) and age of the player > 59", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"70","uom":"","type":"Number","operator":">","description":"amount"},{"name":"P2","value":"10","uom":"","type":"Number","operator":">","description":"number of payment_rcs of all payments of a player where amount > :P1"},{"name":"P3","value":"70","uom":"","type":"Number","operator":">","amount"},{"name":"P4","value":"5","uom":"","type":"Number","operator":"<=","number of payment_rcs of all payments of a player where amount > :P3"},{"name":"P5","value":"59","uom":"","type":"Number","operator":">","age of the player"}];
true;STEP 17 - Complex statement date Number;{ "ruleBody": { "type": "text", "content": { "condition": "player.birthdate is greater than '01/01/1977'  and current_level of the player is greater than 15 or count distinct of payment_rc_payment_id of all payment_rcs of all payments of a player where count distinct of all last_payment_date of the player >0  is greater than 5", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"'01/01/1977'","uom":"","type":"Date","operator":"is greater than","description":"player.birthdate"},{"name":"P2","value":"15","uom":"","type":"Number","operator":"is greater than","description":"current_level of the player"},{"name":"P3","value":"0","uom":"","type":"Number","operator":">","description":"count distinct of(all last_payment_date of the player)"},{"name":"P4","value":"5","uom":"","type":"Number","operator":"is greater than","description":"count distinct of payment_rc_payment_id of all payment_rcs of all payments of a player where count distinct of(all last_payment_date of the player) > :P3"}];
true;STEP 18 - Complex statement day today string number;{ "ruleBody": { "type": "text", "content": { "condition": "count distinct of session_player_id of all sessions of a player where (start_time of the session is before today - 5 days  and (player.current_level > 16 and player.gender ='M'))> 0", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"5","uom":"day","type":"TimeSpan","operator":"is greater than","description":"today"},{"name":"P2","value":"16","uom":"","type":"Number","operator":">","description":"player.current_level"},{"name":"P3","value":"'M'","uom":"","type":"String","operator":"=","description":"player.gender"},{"name":"P4","value":"0","uom":"","type":"Number","operator":">","description":"count distinct of session_player_id of all sessions of a player where (start_time of the session is before today - :P1 day and (player.current_level > :P2 and player.gender = :P3))"}];
true;STEP 19 - Complex statement year hour timeStamp plus top order by;{ "ruleBody": { "type": "text", "content": { "condition": "average of 5 player.session.duration with the most recent start_time where start_time is in  the last 2 year>220 hour", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"2","uom":"year","type":"TimeSpan","operator":"is in the last","description":"start_time"},{"name":"P2","value":"5","uom":"","type":"Number","operator":"with the most recent","description":"start_time"},{"name":"P3","value":"220","uom":"hour","type":"TimeSpan","operator":">","description":"average of(:P2 player.session.duration with the most recent start_time where start_time is in the last :P1 year)"}];
true;STEP 20 - Complex statement Number and arithmetic operator;{ "ruleBody": { "type": "text", "content": { "condition": "(sum of amount of all payment_rcs of a payment - 150) / (number of id of all payment_rcs of all payments of a player - 5) > 1", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"150","uom":"","type":"Number","operator":"-","description":"(sum of(amount of all payment_rcs of a payment)"},{"name":"P2","value":"5","uom":"","type":"Number","operator":"-","description":"(number of(id of all payment_rcs of all payments of a player)"},{"name":"P3","value":"1","uom":"","type":"Number","operator":">","description":"(sum of(amount of all payment_rcs of a payment) - :P1) / (number of(id of all payment_rcs of all payments of a player) - :P2)"}];
true;STEP 21 - single statement many Numbers and arithmetic operators;{ "ruleBody": { "type": "text", "content": { "condition": "current_level of the player > 5*7-2/2+6-(55+49*2-1 )/( 2.5)-147", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"5","uom":"","type":"Number","operator":"*","description":":P2"},{"name":"P2","value":"7","uom":"","type":"Number","operator":"*","description":":P1"},{"name":"P3","value":"2","uom":"","type":"Number","operator":"/","description":":P4"},{"name":"P4","value":"2","uom":"","type":"Number","operator":"/","description":":P3"},{"name":"P5","value":"6","uom":"","type":"Number","operator":"+","description":":P1 * :P2 - :P3 / :P4"},{"name":"P6","value":"55","uom":"","type":"Number","operator":"+","description":":P7 * :P8"},{"name":"P7","value":"49","uom":"","type":"Number","operator":"*","description":":P8"},{"name":"P8","value":"2","uom":"","type":"Number","operator":"*","description":":P7"},{"name":"P9","value":"1","uom":"","type":"Number","operator":"-","description":"(:P6 + :P7 * :P8"},{"name":"P10","value":"2.5","uom":"","type":"Number","operator":"/","description":"(:P6 + :P7 * :P8 - :P9)"},{"name":"P11","value":"147","uom":"","type":"Number","operator":"-","description":":P1 * :P2 - :P3 / :P4 + :P5 - (:P6 + :P7 * :P8 - :P9) / (:P10)"}];
true;STEP 22 - nested advanced function;{ "ruleBody": { "type": "text", "content": { "condition": "round(sin (sum of amount of all payment_rcs of all payments of a player where amount > 1), 2) is greater than 0", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"1","uom":"","type":"Number","operator":">","description":"amount"},{"name":"P2","value":"2","uom":"","type":"Number","operator":"is greater than","description":":P3"},{"name":"P3","value":"0","uom":"","type":"Number","operator":"is greater than","description":":"round(sin(sum of amount of all payment_rcs of all payments of a player where amount > :P1), :P2)"}];
true;STEP 22 - 2 parameters advanced function;{ "ruleBody": { "type": "text", "content": { "condition": "power(lowest current_level of all players, 2) = current_level of the player", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"2","uom":"","type":"Number","operator":"=","description":"current_level of the player"}];
false;STEP 22 - fuzzy search;{ "ruleBody": { "type": "text", "content": { "condition": "name of the player contains 'ri' with a fuzzy score of 0.6", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"'ri'","uom":"","type":"String","operator":"contains","description":"name of the player"},{"name":"P2","value":"0.6","uom":"","type":"Number","operator":"contains","description":"name of the player"}];



3 strange failures (looks like JMETER problem)

true;STEP 17 - Complex statement timestamp is not between operator;{ "ruleBody": { "type": "text", "content": { "condition": "earliest timestamp of all payments of a player is not between '05-09-2011 06:44:05' to '06-09-2011 08:44:05'", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"'05-09-2011 06:44:05'","uom":"","type":"Timestamp","operator":"is not between","description":"earliest(timestamp of all payments of a player)"},{"name":"P2","value":"'06-09-2011 08:44:05'","uom":"","type":"Timestamp","operator":"is not between","description":"earliest(timestamp of all payments of a player)"}];
true;STEP 21 - Complex Statement concatenate;{ "ruleBody": { "type": "text", "content": { "condition": "concatenate ('hello', name of the player,' ', 3, '02-04-2015', number of id of all payments of a player) = 'correct'", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"'hello'","uom":"","type":"String","operator":"=","description":":P5"},{"name":"P2","value":"' '","uom":"","type":"String","operator":"=","description":":P5"},{"name":"P3","value":"3","uom":"","type":"Number","operator":"=","description":":P5"},{"name":"P4","value":"'02-04-2015'","uom":"","type":"Date","operator":"=",":P5"},{"name":"P5","value":"'correct'","uom":"","type":"String","operator":"=","concatenate(:P1, name of the player, :P2, :P3, :P4, number of(id of all payments of a player))"}];
true;STEP 5 - single statement left side constant;{ "ruleBody": { "type": "text", "content": { "condition": "0 exists in (player.purchase.purchase_item.quantity)", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"0","uom":"","type":"Number","operator":"exists in","description":"(player.purchase.purchase_item.quantity)"}];
false;STEP 24 - Complex statement string date number exists in;{ "ruleBody": { "type": "text", "content": { "condition": "number of amount of all payment_rcs of all payments of a player where country_id of the player exists in (all country_id of the player) and  currency_id of all payment_rcs of all payments of a player exists in ('Dollar', 'Shekel') is equal or greater than 1 and most recent timestamp of all payments of a player is after '01-01-2013'", "actions": [ ], "parameters": [ ], "outputs": [ ] } }, "vocabulary": "sap.demo-store.gaming.resources.vocabulary::gaming", "variableValues": null };[{"name":"P1","value":"'Dollar'","uom":"","type":"String","operator":"exists in","description":"currency_id of all payment_rcs of all payments of a player"},{"name":"P2","value":"'Shekel'","uom":"","type":"String","operator":"exists in","description":"currency_id of all payment_rcs of all payments of a player"},{"name":"P3","value":"1","uom":"","type":"Number","operator":"is equal or greater than","description":"number of amount of all payment_rcs of all payments of a player where country_id of the player exists in (all country_id of the player) and currency_id of all payment_rcs of all payments of a player exists in (:P1, :P2)"},{"name":"P4","value":"'01-01-2013'","uom":"","type":"Date","operator":"is after","description":"most recent(timestamp of all payments of a player)"}];

