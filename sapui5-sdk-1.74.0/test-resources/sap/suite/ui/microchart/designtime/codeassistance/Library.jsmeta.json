{"!name":"sap.suite.ui.microchart","!version":"1.20.0","!define":{"sap.suite.ui.microchart.ComparisonMicroChart":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getMaxValue":{"!description":"Gets current value of property {@link #getMaxValue maxValue}.\n\nThe maximum scale value for the chart used to define the value range of the scale for comparing different values.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.core.Control","!category":"class","destroyData":{"!description":"Destroys all the data in the aggregation {@link #getData data}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ComparisonMicroChart"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"insertData":{"!description":"Inserts a data into the aggregation {@link #getData data}.","!static":false,"!category":"function","!type":"fn(oData: sap.suite.ui.microchart.ComparisonMicroChartData, iIndex: Number) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"oData":"type: sap.suite.ui.microchart.ComparisonMicroChartData, description: The data to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the data should be inserted at; for a negative value of <code>iIndex<\/code>, the data is inserted at position 0; for a value greater than the current size of the aggregation, the data is inserted at the last position"}},"setShrinkable":{"!description":"Sets a new value for property {@link #getShrinkable shrinkable}.\n\nIf it is set to true, the height of the control is defined by its content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShrinkable: Boolean) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"bShrinkable":"type: boolean, description: New value for property <code>shrinkable<\/code>"}},"unbindData":{"!description":"Unbinds aggregation {@link #getData data} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ComparisonMicroChart"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new ComparisonMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getScale scale} : string (default: )<\/li>\n<li>{@link #getMinValue minValue} : float<\/li>\n<li>{@link #getMaxValue maxValue} : float<\/li>\n<li>{@link #getView view} : sap.suite.ui.microchart.ComparisonMicroChartViewType (default: Normal)<\/li>\n<li>{@link #getColorPalette colorPalette} : string[] (default: [])<\/li>\n<li>{@link #getShrinkable shrinkable} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getData data} : sap.suite.ui.microchart.ComparisonMicroChartData[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 undefined<br>Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getColorPalette":{"!description":"Gets current value of property {@link #getColorPalette colorPalette}.\n\nThe color palette for the chart. If this property is set, semantic colors defined in ComparisonData are ignored. Colors from the palette are assigned to each bar consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"removeAllData":{"!description":"Removes all the controls from the aggregation {@link #getData data}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.ComparisonMicroChartData]"},"getView":{"!description":"Gets current value of property {@link #getView view}.\n\nThe view of the chart. If not set, the Normal view is used by default.\n\nDefault value is <code>Normal<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ComparisonMicroChartViewType"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ComparisonMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.ComparisonMicroChart<\/code> itself.\n\nThe event is triggered when the chart is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ComparisonMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getData":{"!description":"Gets content of aggregation {@link #getData data}.\n\nThe comparison chart bar data.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.ComparisonMicroChartData]"},"getShrinkable":{"!description":"Gets current value of property {@link #getShrinkable shrinkable}.\n\nIf it is set to true, the height of the control is defined by its content.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"Illustrates values as colored bar charts with title, numeric value, and scaling factor in the content area. This control replaces the deprecated sap.suite.ui.commons.ComparisonChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.ComparisonMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setScale":{"!description":"Sets a new value for property {@link #getScale scale}.\n\nThe scaling suffix that is added to the actual and target values.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sScale: String) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"sScale":"type: string, description: New value for property <code>scale<\/code>"}},"addData":{"!description":"Adds some data to the aggregation {@link #getData data}.","!static":false,"!category":"function","!type":"fn(oData: sap.suite.ui.microchart.ComparisonMicroChartData) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"oData":"type: sap.suite.ui.microchart.ComparisonMicroChartData, description: The data to add; if empty, nothing is inserted"}},"setIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 undefined<br>Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ComparisonMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ComparisonMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setMaxValue":{"!description":"Sets a new value for property {@link #getMaxValue maxValue}.\n\nThe maximum scale value for the chart used to define the value range of the scale for comparing different values.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMaxValue: Number) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"fMaxValue":"type: float, description: New value for property <code>maxValue<\/code>"}},"getMinValue":{"!description":"Gets current value of property {@link #getMinValue minValue}.\n\nThe minimum scale value for the chart used to define the value range of the scale for comparing different values.","!static":false,"!category":"function","!type":"fn() -> Number"},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"!module":"sap/suite/ui/microchart/ComparisonMicroChart","getScale":{"!description":"Gets current value of property {@link #getScale scale}.\n\nThe scaling suffix that is added to the actual and target values.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"Illustrates values as colored bar charts with title, numeric value, and scaling factor in the content area. This control replaces the deprecated sap.suite.ui.commons.ComparisonChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","indexOfData":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.ComparisonMicroChartData<\/code> in the aggregation {@link #getData data}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oData: sap.suite.ui.microchart.ComparisonMicroChartData) -> Number","parameters":{"oData":"type: sap.suite.ui.microchart.ComparisonMicroChartData, description: The data whose index is looked for"}},"setView":{"!description":"Sets a new value for property {@link #getView view}.\n\nThe view of the chart. If not set, the Normal view is used by default.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Normal<\/code>.","!static":false,"!category":"function","!type":"fn(sView: sap.suite.ui.microchart.ComparisonMicroChartViewType) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"sView":"type: sap.suite.ui.microchart.ComparisonMicroChartViewType, description: New value for property <code>view<\/code>"}},"setColorPalette":{"!description":"Sets a new value for property {@link #getColorPalette colorPalette}.\n\nThe color palette for the chart. If this property is set, semantic colors defined in ComparisonData are ignored. Colors from the palette are assigned to each bar consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sColorPalette: [String]) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"sColorPalette":"type: string[], description: New value for property <code>colorPalette<\/code>"}},"removeData":{"!description":"Removes a data from the aggregation {@link #getData data}.","!static":false,"!category":"function","!type":"fn(vData: Number | String | sap.suite.ui.microchart.ComparisonMicroChartData) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"vData":"type: int|string|sap.suite.ui.microchart.ComparisonMicroChartData, description: The data to remove or its index or id"}},"setMinValue":{"!description":"Sets a new value for property {@link #getMinValue minValue}.\n\nThe minimum scale value for the chart used to define the value range of the scale for comparing different values.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMinValue: Number) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"fMinValue":"type: float, description: New value for property <code>minValue<\/code>"}},"bindData":{"!description":"Binds aggregation {@link #getData data} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.ComparisonMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}}},"sap.suite.ui.microchart.InteractiveBarChartBar":{"!description":"A bar element for the InteractiveBarChart.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.InteractiveBarChartBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nThe label for the chart bar.","!static":false,"!category":"function","!type":"fn() -> String"},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nDetermines if the chart bar is selected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.suite.ui.microchart.InteractiveBarChartBar","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"!proto":"sap.ui.core.Element","getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nDetermines the color of the bar.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"getDisplayedValue":{"!description":"Gets current value of property {@link #getDisplayedValue displayedValue}.\n\nThe value label to be displayed on the bar in the chart.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.InteractiveBarChartBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nDetermines if the chart bar is selected.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe numeric value of the chart bar to be displayed on the bar.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for the bar element of the InteractiveBarChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getDisplayedValue displayedValue} : string<\/li>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getValue value} : float<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nDetermines the color of the bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueColor) -> sap.suite.ui.microchart.InteractiveBarChartBar","parameters":{"sColor":"type: sap.m.ValueColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/InteractiveBarChartBar","!helpDescription":"A bar element for the InteractiveBarChart.","setDisplayedValue":{"!description":"Sets a new value for property {@link #getDisplayedValue displayedValue}.\n\nThe value label to be displayed on the bar in the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayedValue: String) -> sap.suite.ui.microchart.InteractiveBarChartBar","parameters":{"sDisplayedValue":"type: string, description: New value for property <code>displayedValue<\/code>"}},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe numeric value of the chart bar to be displayed on the bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fValue: Number) -> sap.suite.ui.microchart.InteractiveBarChartBar","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nThe label for the chart bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.suite.ui.microchart.InteractiveBarChartBar","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}}},"sap.suite.ui.microchart.InteractiveDonutChartSegment_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.InteractiveDonutChartSegment with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.InteractiveDonutChartSegment"},"sap.suite.ui.microchart.ColumnMicroChartLabel_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChartLabel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.ColumnMicroChartLabel"},"sap.suite.ui.microchart.HarveyBallMicroChartItem":{"!description":"Defines the fraction value that is compared with total in a {@link sap.suite.ui.microchart.HarveyBallMicroChart}.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.HarveyBallMicroChartItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setFraction":{"!description":"Sets a new value for property {@link #getFraction fraction}.\n\nThe fraction value that defines the size of the colored sector. <br>This property must be set to a value that is a fraction of the <code>total<\/code> value defined for the {@link sap.suite.ui.microchart.HarveyBallMicroChart}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fFraction: Number) -> sap.suite.ui.microchart.HarveyBallMicroChartItem","parameters":{"fFraction":"type: float, description: New value for property <code>fraction<\/code>"}},"setFractionLabel":{"!description":"Sets a new value for property {@link #getFractionLabel fractionLabel}.\n\nThe fraction label. If this property is specified, it is displayed instead of the label that is based on the <code>fraction<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFractionLabel: String) -> sap.suite.ui.microchart.HarveyBallMicroChartItem","parameters":{"sFractionLabel":"type: string, description: New value for property <code>fractionLabel<\/code>"}},"!proto":"sap.ui.core.Element","getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nThe color of the sector representing the fraction value.<br>The same color is used for the fraction value label defined either by the <code>fraction<\/code> property or by the <code>fractionLabel<\/code> property.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueCSSColor"},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.HarveyBallMicroChartItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new HarveyBallMicroChartItem to be used in a {@link sap.suite.ui.microchart.HarveyBallMicroChart}.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getFraction fraction} : float (default: 0)<\/li>\n<li>{@link #getFractionLabel fractionLabel} : string<\/li>\n<li>{@link #getFractionScale fractionScale} : string<\/li>\n<li>{@link #getFormattedLabel formattedLabel} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nThe color of the sector representing the fraction value.<br>The same color is used for the fraction value label defined either by the <code>fraction<\/code> property or by the <code>fractionLabel<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueCSSColor) -> sap.suite.ui.microchart.HarveyBallMicroChartItem","parameters":{"sColor":"type: sap.m.ValueCSSColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/HarveyBallMicroChartItem","!helpDescription":"Defines the fraction value that is compared with total in a {@link sap.suite.ui.microchart.HarveyBallMicroChart}.","getFractionScale":{"!description":"Gets current value of property {@link #getFractionScale fractionScale}.\n\nThe scaling factor that is displayed after the fraction value.","!static":false,"!category":"function","!type":"fn() -> String"},"setFormattedLabel":{"!description":"Sets a new value for property {@link #getFormattedLabel formattedLabel}.\n\nIf set to <code>true<\/code>, the <code>fractionLabel<\/code> property is used instead of the combination of the fraction value and scaling factor. <br>The default value is <code>false<\/code>, which means that the fraction value, defined by the <code>fraction<\/code> property, and the scaling factor, defined by the <code>fractionScale<\/code> property are displayed separately.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFormattedLabel: Boolean) -> sap.suite.ui.microchart.HarveyBallMicroChartItem","parameters":{"bFormattedLabel":"type: boolean, description: New value for property <code>formattedLabel<\/code>"}},"getFormattedLabel":{"!description":"Gets current value of property {@link #getFormattedLabel formattedLabel}.\n\nIf set to <code>true<\/code>, the <code>fractionLabel<\/code> property is used instead of the combination of the fraction value and scaling factor. <br>The default value is <code>false<\/code>, which means that the fraction value, defined by the <code>fraction<\/code> property, and the scaling factor, defined by the <code>fractionScale<\/code> property are displayed separately.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFractionLabel":{"!description":"Gets current value of property {@link #getFractionLabel fractionLabel}.\n\nThe fraction label. If this property is specified, it is displayed instead of the label that is based on the <code>fraction<\/code> property.","!static":false,"!category":"function","!type":"fn() -> String"},"setFractionScale":{"!description":"Sets a new value for property {@link #getFractionScale fractionScale}.\n\nThe scaling factor that is displayed after the fraction value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFractionScale: String) -> sap.suite.ui.microchart.HarveyBallMicroChartItem","parameters":{"sFractionScale":"type: string, description: New value for property <code>fractionScale<\/code>"}},"getFraction":{"!description":"Gets current value of property {@link #getFraction fraction}.\n\nThe fraction value that defines the size of the colored sector. <br>This property must be set to a value that is a fraction of the <code>total<\/code> value defined for the {@link sap.suite.ui.microchart.HarveyBallMicroChart}.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.suite.ui.microchart.AreaMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.AreaMicroChart"},"sap.suite.ui.microchart.BulletMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.BulletMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.BulletMicroChart"},"sap.suite.ui.microchart.DeltaMicroChartViewType":{"!description":"Lists the views of the delta micro chart concerning the position of titles.","Responsive":{"!description":"Behavior changes based on the current width of the chart. <code>Normal<\/code> view is used for charts up to 192px wide, and <code>Wide<\/code> is used for wider charts.","!category":"enum","!type":"String"},"!module":"sap/suite/ui/microchart/library","!category":"static class","Wide":{"!description":"Titles are displayed in the same line with the bars.","!category":"enum","!type":"String"},"Normal":{"!description":"Titles are displayed above the bars.","!category":"enum","!type":"String"}},"sap.suite.ui.microchart.InteractiveBarChartBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.InteractiveBarChartBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.InteractiveBarChartBar"},"sap.suite.ui.microchart.AreaMicroChartLabel":{"!description":"Displays or hides the labels for start and end dates, start and end values, and minimum and maximum values.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartLabel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChartLabel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new AreaMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getLabel label} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nThe line title.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nThe graphic element color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueCSSColor) -> sap.suite.ui.microchart.AreaMicroChartLabel","parameters":{"sColor":"type: sap.m.ValueCSSColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/AreaMicroChartLabel","!helpDescription":"Displays or hides the labels for start and end dates, start and end values, and minimum and maximum values.","!proto":"sap.ui.core.Element","getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nThe graphic element color.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueCSSColor"},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nThe line title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.suite.ui.microchart.AreaMicroChartLabel","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"!category":"class"},"sap.suite.ui.microchart.ComparisonMicroChartData":{"!description":"Contains the values of the comparison chart.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.ComparisonMicroChartData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Element","getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nThe semantic color of the value.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueCSSColor"},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe comparison bar title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","setDisplayValue":{"!description":"Sets a new value for property {@link #getDisplayValue displayValue}.\n\nIf this property is set then it will be displayed instead of value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplayValue: String) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"sDisplayValue":"type: string, description: New value for property <code>displayValue<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ComparisonMicroChartData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ComparisonMicroChartData<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe value for comparison.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new ComparisonMicroChartData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getDisplayValue displayValue} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe comparison bar title.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nThe semantic color of the value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueCSSColor) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"sColor":"type: sap.m.ValueCSSColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/ComparisonMicroChartData","!helpDescription":"Contains the values of the comparison chart.","getDisplayValue":{"!description":"Gets current value of property {@link #getDisplayValue displayValue}.\n\nIf this property is set then it will be displayed instead of value.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe value for comparison.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fValue: Number) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ComparisonMicroChartData<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.ComparisonMicroChartData<\/code> itself.\n\nThe event is fired when the user chooses the comparison chart bar.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.ComparisonMicroChartData","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ComparisonMicroChartData<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.suite.ui.microchart.RadialMicroChart":{"setTotal":{"!description":"Sets a new value for property {@link #getTotal total}.\n\nThe total value. This is taken as 360 degrees value on the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fTotal: Number) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"fTotal":"type: float, description: New value for property <code>total<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setFraction":{"!description":"Sets a new value for property {@link #getFraction fraction}.\n\nThe fraction of the total value that is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fFraction: Number) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"fFraction":"type: float, description: New value for property <code>fraction<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Describes the configuration of the graphic element on the chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTotal total} : float<\/li>\n<li>{@link #getFraction fraction} : float<\/li>\n<li>{@link #getPercentage percentage} : float<\/li>\n<li>{@link #getValueColor valueColor} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getAlignContent alignContent} : sap.suite.ui.microchart.HorizontalAlignmentType (default: Left)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nThe size of the chart. If it is not set, the Auto size is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getValueColor":{"!description":"Gets current value of property {@link #getValueColor valueColor}.\n\nThe color shown in the completed path.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueCSSColor"},"setValueColor":{"!description":"Sets a new value for property {@link #getValueColor valueColor}.\n\nThe color shown in the completed path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sValueColor: sap.m.ValueCSSColor) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"sValueColor":"type: sap.m.ValueCSSColor, description: New value for property <code>valueColor<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.RadialMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.RadialMicroChart<\/code> itself.\n\nThe event is triggered when the chart is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.RadialMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getPercentage":{"!description":"Gets current value of property {@link #getPercentage percentage}.\n\nThe percentage that is displayed. When a percentage is set, properties total and fraction are not considered.","!static":false,"!category":"function","!type":"fn() -> Number"},"!description":"Displays a ring chart highlighting a current status. The status is displayed with a semantically colored radial bar and a percentage value. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.RadialMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setAlignContent":{"!description":"Sets a new value for property {@link #getAlignContent alignContent}.\n\nThe alignment of the content. If it is not set, the <code>Left<\/code> alignment type is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Left<\/code>.","!static":false,"!category":"function","!type":"fn(sAlignContent: sap.suite.ui.microchart.HorizontalAlignmentType) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"sAlignContent":"type: sap.suite.ui.microchart.HorizontalAlignmentType, description: New value for property <code>alignContent<\/code>"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setPercentage":{"!description":"Sets a new value for property {@link #getPercentage percentage}.\n\nThe percentage that is displayed. When a percentage is set, properties total and fraction are not considered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fPercentage: Number) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"fPercentage":"type: float, description: New value for property <code>percentage<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.RadialMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.RadialMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.RadialMicroChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nThe size of the chart. If it is not set, the Auto size is used.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"!module":"sap/suite/ui/microchart/RadialMicroChart","!helpDescription":"Displays a ring chart highlighting a current status. The status is displayed with a semantically colored radial bar and a percentage value. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string.","getTotal":{"!description":"Gets current value of property {@link #getTotal total}.\n\nThe total value. This is taken as 360 degrees value on the chart.","!static":false,"!category":"function","!type":"fn() -> Number"},"getAlignContent":{"!description":"Gets current value of property {@link #getAlignContent alignContent}.\n\nThe alignment of the content. If it is not set, the <code>Left<\/code> alignment type is used.\n\nDefault value is <code>Left<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.HorizontalAlignmentType"},"getFraction":{"!description":"Gets current value of property {@link #getFraction fraction}.\n\nThe fraction of the total value that is displayed.","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.suite.ui.microchart.ComparisonMicroChartViewType":{"!description":"Lists the views of the comparison micro chart concerning the position of titles and labels.","Responsive":{"!description":"Behavior changes based on the current width of the chart. <code>Normal<\/code> view is used for charts up to 192px wide, and <code>Wide<\/code> is used for wider charts.","!category":"enum","!type":"String"},"!module":"sap/suite/ui/microchart/library","!category":"static class","Wide":{"!description":"Titles and values are displayed in the same line with the bars.","!category":"enum","!type":"String"},"Normal":{"!description":"Titles and values are displayed above the bars.","!category":"enum","!type":"String"}},"sap.suite.ui.microchart.StackedBarMicroChartBar":{"!description":"Contains the values of the stacked bar chart.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.StackedBarMicroChartBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Element","!category":"class","setDisplayValue":{"!description":"Sets a new value for property {@link #getDisplayValue displayValue}.\n\nIf this property is set, then it will be displayed instead of value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayValue: String) -> sap.suite.ui.microchart.StackedBarMicroChartBar","parameters":{"sDisplayValue":"type: string, description: New value for property <code>displayValue<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.StackedBarMicroChartBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe value for stacked bar chart. It is used in order to determine the width of the bar\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new StackedBarMicroChartBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getValueColor valueColor} : sap.m.ValueCSSColor<\/li>\n<li>{@link #getDisplayValue displayValue} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/suite/ui/microchart/StackedBarMicroChartBar","!helpDescription":"Contains the values of the stacked bar chart.","getValueColor":{"!description":"Gets current value of property {@link #getValueColor valueColor}.\n\nThe color of the bar.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueCSSColor"},"setValueColor":{"!description":"Sets a new value for property {@link #getValueColor valueColor}.\n\nThe color of the bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValueColor: sap.m.ValueCSSColor) -> sap.suite.ui.microchart.StackedBarMicroChartBar","parameters":{"sValueColor":"type: sap.m.ValueCSSColor, description: New value for property <code>valueColor<\/code>"}},"getDisplayValue":{"!description":"Gets current value of property {@link #getDisplayValue displayValue}.\n\nIf this property is set, then it will be displayed instead of value.","!static":false,"!category":"function","!type":"fn() -> String"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe value for stacked bar chart. It is used in order to determine the width of the bar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fValue: Number) -> sap.suite.ui.microchart.StackedBarMicroChartBar","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}}},"sap.suite.ui.microchart.InteractiveDonutChartSegment":{"!description":"A donut chart segment.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.InteractiveDonutChartSegment.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nDisplayed text for the segment.","!static":false,"!category":"function","!type":"fn() -> String"},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nIndicator for the selected state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.suite.ui.microchart.InteractiveDonutChartSegment","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"!proto":"sap.ui.core.Element","getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nDetermines the color of the segment.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"getDisplayedValue":{"!description":"Gets current value of property {@link #getDisplayedValue displayedValue}.\n\nThe value that is directly displayed on the legend.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.InteractiveDonutChartSegment with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nIndicator for the selected state.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe value representing a percentage or an absolute value.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for InteractiveDonutChartSegment element.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getValue value} : float<\/li>\n<li>{@link #getDisplayedValue displayedValue} : string<\/li>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nDetermines the color of the segment.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueColor) -> sap.suite.ui.microchart.InteractiveDonutChartSegment","parameters":{"sColor":"type: sap.m.ValueColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/InteractiveDonutChartSegment","!helpDescription":"A donut chart segment.","setDisplayedValue":{"!description":"Sets a new value for property {@link #getDisplayedValue displayedValue}.\n\nThe value that is directly displayed on the legend.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayedValue: String) -> sap.suite.ui.microchart.InteractiveDonutChartSegment","parameters":{"sDisplayedValue":"type: string, description: New value for property <code>displayedValue<\/code>"}},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe value representing a percentage or an absolute value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fValue: Number) -> sap.suite.ui.microchart.InteractiveDonutChartSegment","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nDisplayed text for the segment.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.suite.ui.microchart.InteractiveDonutChartSegment","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}}},"sap.suite.ui.microchart.AreaMicroChartItem":{"!description":"Graphical representation of the area micro chart regarding the value lines, the thresholds, and the target values.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChartItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removePoint":{"!description":"Removes a point from the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn(vPoint: Number | String | sap.suite.ui.microchart.AreaMicroChartPoint) -> sap.suite.ui.microchart.AreaMicroChartPoint","parameters":{"vPoint":"type: int|string|sap.suite.ui.microchart.AreaMicroChartPoint, description: The point to remove or its index or id"}},"!proto":"sap.ui.core.Element","getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nThe graphic element color.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueCSSColor"},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe line title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.suite.ui.microchart.AreaMicroChartItem","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","addPoint":{"!description":"Adds some point to the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.AreaMicroChartPoint) -> sap.suite.ui.microchart.AreaMicroChartItem","parameters":{"oPoint":"type: sap.suite.ui.microchart.AreaMicroChartPoint, description: The point to add; if empty, nothing is inserted"}},"bindPoints":{"!description":"Binds aggregation {@link #getPoints points} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.AreaMicroChartItem","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"The configuration of the graphic element on the chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPoints points} : sap.suite.ui.microchart.AreaMicroChartPoint[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe line title.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfPoint":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.AreaMicroChartPoint<\/code> in the aggregation {@link #getPoints points}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.AreaMicroChartPoint) -> Number","parameters":{"oPoint":"type: sap.suite.ui.microchart.AreaMicroChartPoint, description: The point whose index is looked for"}},"insertPoint":{"!description":"Inserts a point into the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.AreaMicroChartPoint, iIndex: Number) -> sap.suite.ui.microchart.AreaMicroChartItem","parameters":{"oPoint":"type: sap.suite.ui.microchart.AreaMicroChartPoint, description: The point to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the point should be inserted at; for a negative value of <code>iIndex<\/code>, the point is inserted at position 0; for a value greater than the current size of the aggregation, the point is inserted at the last position"}},"setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nThe graphic element color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueCSSColor) -> sap.suite.ui.microchart.AreaMicroChartItem","parameters":{"sColor":"type: sap.m.ValueCSSColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/AreaMicroChartItem","!helpDescription":"Graphical representation of the area micro chart regarding the value lines, the thresholds, and the target values.","destroyPoints":{"!description":"Destroys all the points in the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"getPoints":{"!description":"Gets content of aggregation {@link #getPoints points}.\n\nThe set of points for this graphic element.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.AreaMicroChartPoint]"},"removeAllPoints":{"!description":"Removes all the controls from the aggregation {@link #getPoints points}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.AreaMicroChartPoint]"},"unbindPoints":{"!description":"Unbinds aggregation {@link #getPoints points} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"}},"sap.suite.ui.microchart":{"showDeltaValue":{"!description":"If set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.","!category":"enum","!type":"Boolean"},"value2":{"!description":"The second value for delta calculation.","!category":"enum","!type":"Number"},"showPoints":{"!description":"Defines whether the points are shown. <br>If emphasized points are used, this property is ignored. <br>If this property is set to <code>true<\/code>, the points in the <code>points<\/code> aggregation are shown.\n\n<br>This property has priority over the property <code>showPoints<\/code> of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set. <br>If this property is not defined, the <code>showPoints<\/code> property of the {@link sap.suite.ui.microchart.LineMicroChart} is used instead.","!category":"enum","!type":"Boolean"},"value1":{"!description":"The first value for delta calculation.","!category":"enum","!type":"Number"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"labelWidth":{"!description":"Width of the labels column in the resulting layout (in percentage). Possible range of values from 0 to 100. A value of 40 results in the labels column taking up 40% of available space.","!category":"enum","!type":"sap.ui.core.Percentage"},"RadialMicroChart":"sap.suite.ui.microchart.RadialMicroChart_obj","type":{"!description":"Defines the type of the line.","!category":"enum","!type":"sap.suite.ui.microchart.LineType"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"ColumnMicroChartData":"sap.suite.ui.microchart.ColumnMicroChartData_obj","showThresholdValue":{"!description":"If this property is set to <code>false<\/code>, the threshold value is hidden. <br>If this property is set to <code>true<\/code>, the value will be shown only if the <code>showThresholdLine<\/code> property is also set to <code>true<\/code>.","!category":"enum","!type":"Boolean"},"showThresholds":{"!description":"If set to true, shows the threshold markers.","!category":"enum","!type":"Boolean"},"scaleColor":{"!description":"The background color of the scale. The theming is enabled only for the default value of this property.","!category":"enum","!type":"sap.suite.ui.microchart.CommonBackgroundType"},"AreaMicroChartPoint":"sap.suite.ui.microchart.AreaMicroChartPoint_obj","height":{"!description":"The height of the chart. Overrides the height specified in the <code>size<\/code> property.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"UI5 library: sap.suite.ui.microchart.","showFractions":{"!description":"If set to <code>true<\/code>, the fraction values are displayed next to the chart. The default setting is <code>true<\/code>.","!category":"enum","!type":"Boolean"},"totalScale":{"!description":"The scaling factor that is displayed next to the total value.","!category":"enum","!type":"String"},"maxXValue":{"!description":"If this property is set, it indicates the value the X-axis ends with.","!category":"enum","!type":"Number"},"ColumnMicroChart":"sap.suite.ui.microchart.ColumnMicroChart_obj","title1":{"!description":"The first value title.","!category":"enum","!type":"String"},"title2":{"!description":"The second value title.","!category":"enum","!type":"String"},"forecastValue":{"!description":"The forecast value that is displayed in Actual mode only. If set, the forecast value bar appears in the background of the actual value bar.","!category":"enum","!type":"Number"},"HarveyBallMicroChart":"sap.suite.ui.microchart.HarveyBallMicroChart_obj","!module":"sap/suite/ui/microchart/library","size":{"!description":"The size of the chart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the stacked bar micro chart is included.","!category":"enum","!type":"sap.m.Size"},"InteractiveDonutChart":"sap.suite.ui.microchart.InteractiveDonutChart_obj","rightBottomLabel":{"!description":"Describes the right bottom label of the chart. The label color is set automatically. The space for the label is not reserved if the label is not set.","!category":"enum","!type":"String"},"BulletMicroChartData":"sap.suite.ui.microchart.BulletMicroChartData_obj","HorizontalAlignmentType":"sap.suite.ui.microchart.HorizontalAlignmentType","BulletMicroChart":"sap.suite.ui.microchart.BulletMicroChart_obj","minXValue":{"!description":"If this property is set, it indicates the value the X-axis starts with.","!category":"enum","!type":"Number"},"valueColor":{"!description":"The color of the bar.","!category":"enum","!type":"sap.m.ValueCSSColor"},"ComparisonMicroChart":"sap.suite.ui.microchart.ComparisonMicroChart_obj","min":{"!description":"Begin of displayed scale.","!category":"enum","!type":"Number"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"displayedSegments":{"!description":"Number of segments to be displayed.","!category":"enum","!type":"Number"},"AreaMicroChartItem":"sap.suite.ui.microchart.AreaMicroChartItem_obj","targetValue":{"!description":"The target value that is displayed as a black vertical bar.","!category":"enum","!type":"Number"},"minYValue":{"!description":"If this property is set, it indicates the value the Y-axis starts with.","!category":"enum","!type":"Number"},"InteractiveBarChart":"sap.suite.ui.microchart.InteractiveBarChart_obj","InteractiveLineChart":"sap.suite.ui.microchart.InteractiveLineChart_obj","max":{"!description":"End of displayed scale.","!category":"enum","!type":"Number"},"leftTopLabel":{"!description":"Describes the left top label of the chart. The label color is determined by the color property of the first LineMicroChartPoint in the points aggregation. The space for the label is not reserved if the label is not set.","!category":"enum","!type":"String"},"StackedBarMicroChartBar":"sap.suite.ui.microchart.StackedBarMicroChartBar_obj","showTopLabels":{"!description":"If this property is set to <code>false<\/code>, both top labels are hidden.","!category":"enum","!type":"Boolean"},"fractionScale":{"!description":"The scaling factor that is displayed after the fraction value.","!category":"enum","!type":"String"},"fraction":{"!description":"The fraction of the total value that is displayed.","!category":"enum","!type":"Number"},"displayValue":{"!description":"If this property is set, then it will be displayed instead of value.","!category":"enum","!type":"String"},"AreaMicroChart":"sap.suite.ui.microchart.AreaMicroChart_obj","displayValue1":{"!description":"If this property is set, it is rendered instead of value1.","!category":"enum","!type":"String"},"displayValue2":{"!description":"If this property is set, it is rendered instead of value2.","!category":"enum","!type":"String"},"DeltaMicroChart":"sap.suite.ui.microchart.DeltaMicroChart_obj","width":{"!description":"The width of the chart. Overrides the width specified in the <code>size<\/code> property.","!category":"enum","!type":"sap.ui.core.CSSSize"},"x":{"!description":"The point's horizontal position.","!category":"enum","!type":"Number"},"y":{"!description":"The point's vertical position.","!category":"enum","!type":"Number"},"LineMicroChartLine":"sap.suite.ui.microchart.LineMicroChartLine_obj","showBottomLabels":{"!description":"If this property is set to <code>false<\/code>, both bottom labels are hidden.","!category":"enum","!type":"Boolean"},"BulletMicroChartModeType":"sap.suite.ui.microchart.BulletMicroChartModeType","deltaDisplayValue":{"!description":"If this property is set, it is rendered instead of a calculated delta.","!category":"enum","!type":"String"},"targetValueLabel":{"!description":"If set, displays a specified label instead of the numeric target value.","!category":"enum","!type":"String"},"precision":{"!description":"The precision of the rounding for the calculated percentage values of the bars. It defines how many digits after the decimal point are displayed. The default is set to 1 digit.","!category":"enum","!type":"Number"},"threshold":{"!description":"Determines the chart threshold which is used for vertical normalization. If the threshold does not belong to the value range given by minYValue...maxYValue, the threshold is ignored. By setting the threshold property's value to null, the threshold is disabled and excluded from range calculations.","!category":"enum","!type":"Number"},"showValueMarker":{"!description":"If set to true, shows the value marker.","!category":"enum","!type":"Boolean"},"showLabel":{"!description":"Determines if the labels are displayed or not.","!category":"enum","!type":"Boolean"},"showActualValueInDeltaMode":{"!description":"If set to true, shows the numeric actual value and possibly hides the delta value, if showDeltaValue is set to true. This property works in Delta mode only and has priority over showDeltaValue.","!category":"enum","!type":"Boolean"},"mode":{"!description":"The mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.","!category":"enum","!type":"sap.suite.ui.microchart.BulletMicroChartModeType"},"alignContent":{"!description":"The alignment of the content. If it is not set, the <code>Left<\/code> alignment type is used.","!category":"enum","!type":"sap.suite.ui.microchart.HorizontalAlignmentType"},"ColumnMicroChartLabel":"sap.suite.ui.microchart.ColumnMicroChartLabel_obj","view":{"!description":"The view of the chart. If not set, the <code>Normal<\/code> view is used by default.","!category":"enum","!type":"sap.suite.ui.microchart.DeltaMicroChartViewType"},"showTargetValue":{"!description":"If set to true, shows the numeric target value.","!category":"enum","!type":"Boolean"},"selectionEnabled":{"!description":"If this property is set to true, one or multiple points are selectable.","!category":"enum","!type":"Boolean"},"percentage":{"!description":"The percentage that is displayed. When a percentage is set, properties total and fraction are not considered.","!category":"enum","!type":"Number"},"rightTopLabel":{"!description":"Describes the right top label of the chart. The label color is determined by the color property of the last LineMicroChartPoint in the points aggregation. The space for the label is not reserved if the label is not set.","!category":"enum","!type":"String"},"LineMicroChart":"sap.suite.ui.microchart.LineMicroChart_obj","selected":{"!description":"Determines if the chart point is selected.","!category":"enum","!type":"Boolean"},"thresholdDisplayValue":{"!description":"Overrides the threshold value with a string that is shown instead.","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"displayedPoints":{"!description":"The maximum number of points to be displayed on the chart.","!category":"enum","!type":"Number"},"showActualValue":{"!description":"If set to true, shows the numeric actual value. This property works in Actual mode only.","!category":"enum","!type":"Boolean"},"maxValue":{"!description":"The maximum value can be set to scale StackedBarMicroChartBar values to the same base. If maxValue is smaller than the sum of all StackedMicroChartBar values, the maxValue is ignored. All values are shown as percentage values (same behavior as maxValue is not used). If maxValue is equal or bigger than the sum of all StackedMicroChartBars, all values are scaled to the value of maxValue and the percentage mode is turned off. Absolute values are shown instead. The difference between the sum and maxValue is shown as invisible bar, thus e.g. different StackedBarMicroChart instances can be compared.","!category":"enum","!type":"Number"},"shrinkable":{"!description":"If it is set to true, the height of the control is defined by its content.","!category":"enum","!type":"Boolean"},"InteractiveBarChartBar":"sap.suite.ui.microchart.InteractiveBarChartBar_obj","displayedBars":{"!description":"The number of displayed bars.","!category":"enum","!type":"Number"},"allowColumnLabels":{"!description":"If set to true and there is enough space, top labels of the chart are hidden and labels for each column are shown instead.\n\n* @since 1.60.0","!category":"enum","!type":"Boolean"},"fractionLabel":{"!description":"The fraction label. If this property is specified, it is displayed instead of the label that is based on the <code>fraction<\/code> property.","!category":"enum","!type":"String"},"!helpDescription":"UI5 library: sap.suite.ui.microchart.","showTotal":{"!description":"If set to <code>true<\/code>, the total value is displayed next to the chart. The default setting is <code>true<\/code>.","!category":"enum","!type":"Boolean"},"AreaMicroChartLabel":"sap.suite.ui.microchart.AreaMicroChartLabel_obj","HarveyBallMicroChartItem":"sap.suite.ui.microchart.HarveyBallMicroChartItem_obj","showThresholdLine":{"!description":"If this property is set to <code>false<\/code>, the threshold line is hidden.","!category":"enum","!type":"Boolean"},"LineMicroChartEmphasizedPoint":"sap.suite.ui.microchart.LineMicroChartEmphasizedPoint_obj","color":{"!description":"Defines the color of the chart. <br>In conjunction with emphasized points, this property is only used if all points have the {@link sap.m.ValueColor.Neutral} color. The color can be set as an {@link sap.m.ValueCSSColor} or as a plain object. It has the <code>above<\/code> and <code>below<\/code> properties that determine the color of the graph above and below the threshold, respectively.\n\n<br>This property has priority over the property <code>color<\/code> of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set. <br>If this property is not defined, the value of the <code>color<\/code> property from the parent {@link sap.suite.ui.microchart.LineMicroChart} is used instead.","!category":"enum","!type":"Object"},"LineMicroChartPoint":"sap.suite.ui.microchart.LineMicroChartPoint_obj","formattedLabel":{"!description":"If set to <code>true<\/code>, the <code>fractionLabel<\/code> property is used instead of the combination of the fraction value and scaling factor. <br>The default value is <code>false<\/code>, which means that the fraction value, defined by the <code>fraction<\/code> property, and the scaling factor, defined by the <code>fractionScale<\/code> property are displayed separately.","!category":"enum","!type":"Boolean"},"secondaryLabel":{"!description":"The label that is displayed right below the <code>label<\/code>..","!category":"enum","!type":"String"},"show":{"!description":"Determines whether the chart point should be displayed or not.","!category":"enum","!type":"Boolean"},"scale":{"!description":"The scaling suffix that is added to the actual and target values.","!category":"enum","!type":"String"},"precedingPoint":{"!description":"Abstract invisible point outside of the chart that ensures that the graph flows smoothly into the visible part of the chart.","!category":"enum","!type":"Number"},"!category":"namespace","title":{"!description":"The comparison bar title.","!category":"enum","!type":"String"},"leftBottomLabel":{"!description":"Describes the left bottom label of the chart. The label color is set internally. The space for the label is not reserved if the label is not set.","!category":"enum","!type":"String"},"isResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.62.0 undefined<br>If set to <code>true<\/code>, the width and height of the control are determined by the width and height of the parent container, in which case the <code>size<\/code> and <code>width<\/code> properties are ignored.","!category":"enum","!type":"Boolean"},"ComparisonMicroChartViewType":"sap.suite.ui.microchart.ComparisonMicroChartViewType","minValue":{"!description":"The minimum scale value for the chart used to define the value range of the scale for comparing different values.","!category":"enum","!type":"Number"},"total":{"!description":"The total value. This is taken as 360 degrees value on the chart.","!category":"enum","!type":"Number"},"maxYValue":{"!description":"If this property is set, it indicates the value the Y-axis ends with.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"LineType":"sap.suite.ui.microchart.LineType","value":{"!description":"The value for stacked bar chart. It is used in order to determine the width of the bar","!category":"enum","!type":"Number"},"AreaMicroChartViewType":"sap.suite.ui.microchart.AreaMicroChartViewType","actualValueLabel":{"!description":"If set, displays a specified label instead of the numeric actual value.","!category":"enum","!type":"String"},"CommonBackgroundType":"sap.suite.ui.microchart.CommonBackgroundType","displayedValue":{"!description":"The value label to be displayed near the point in the chart.","!category":"enum","!type":"String"},"StackedBarMicroChart":"sap.suite.ui.microchart.StackedBarMicroChart_obj","label":{"!description":"The bottom label for the chart point.","!category":"enum","!type":"String"},"InteractiveLineChartPoint":"sap.suite.ui.microchart.InteractiveLineChartPoint_obj","ComparisonMicroChartData":"sap.suite.ui.microchart.ComparisonMicroChartData_obj","deltaValueLabel":{"!description":"If set, displays a specified label instead of the calculated numeric delta value.","!category":"enum","!type":"String"},"totalLabel":{"!description":"The total label. If specified, it is displayed instead of the total value.","!category":"enum","!type":"String"},"succeedingPoint":{"!description":"Abstract invisible point outside of the chart that ensures that the graph flows smoothly out of the visible part of the chart.","!category":"enum","!type":"Number"},"showLabels":{"!description":"Defines whether the bar labels should be rendered. If set to <code>true<\/code>, the labels that were specified for each bar become visible.","!category":"enum","!type":"Boolean"},"DeltaMicroChartViewType":"sap.suite.ui.microchart.DeltaMicroChartViewType","InteractiveDonutChartSegment":"sap.suite.ui.microchart.InteractiveDonutChartSegment_obj","colorPalette":{"!description":"The color palette for the chart. Currently only a single color (first color in the array) is supported. <br>If this property is defined, the semantic color defined in the {@link sap.suite.ui.microchart.HarveyBallMicroChartItem} is ignored.","!category":"enum","!type":"[String]"}},"sap.suite.ui.microchart.InteractiveLineChartPoint":{"!description":"A point element for the InteractiveLineChart.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.InteractiveLineChartPoint.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nThe bottom label for the chart point.","!static":false,"!category":"function","!type":"fn() -> String"},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nDetermines if the chart point is selected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.suite.ui.microchart.InteractiveLineChartPoint","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"!proto":"sap.ui.core.Element","getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nDetermines the color of the point.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"getDisplayedValue":{"!description":"Gets current value of property {@link #getDisplayedValue displayedValue}.\n\nThe value label to be displayed near the point in the chart.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.InteractiveLineChartPoint with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nDetermines if the chart point is selected.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe numeric value of the chart point.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for the point element of the InteractiveLineChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getSecondaryLabel secondaryLabel} : string<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getValue value} : float<\/li>\n<li>{@link #getDisplayedValue displayedValue} : string<\/li>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nDetermines the color of the point.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueColor) -> sap.suite.ui.microchart.InteractiveLineChartPoint","parameters":{"sColor":"type: sap.m.ValueColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/InteractiveLineChartPoint","!helpDescription":"A point element for the InteractiveLineChart.","setSecondaryLabel":{"!description":"Sets a new value for property {@link #getSecondaryLabel secondaryLabel}.\n\nThe label that is displayed right below the <code>label<\/code>..\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSecondaryLabel: String) -> sap.suite.ui.microchart.InteractiveLineChartPoint","parameters":{"sSecondaryLabel":"type: string, description: New value for property <code>secondaryLabel<\/code>"}},"getSecondaryLabel":{"!description":"Gets current value of property {@link #getSecondaryLabel secondaryLabel}.\n\nThe label that is displayed right below the <code>label<\/code>..","!static":false,"!category":"function","!type":"fn() -> String"},"setDisplayedValue":{"!description":"Sets a new value for property {@link #getDisplayedValue displayedValue}.\n\nThe value label to be displayed near the point in the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayedValue: String) -> sap.suite.ui.microchart.InteractiveLineChartPoint","parameters":{"sDisplayedValue":"type: string, description: New value for property <code>displayedValue<\/code>"}},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe numeric value of the chart point.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fValue: Number) -> sap.suite.ui.microchart.InteractiveLineChartPoint","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nThe bottom label for the chart point.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.suite.ui.microchart.InteractiveLineChartPoint","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}}},"sap.suite.ui.microchart.LineMicroChart":{"getShowThresholdValue":{"!description":"Gets current value of property {@link #getShowThresholdValue showThresholdValue}.\n\nIf this property is set to <code>false<\/code>, the threshold value is hidden. <br>If this property is set to <code>true<\/code>, the value will be shown only if the <code>showThresholdLine<\/code> property is also set to <code>true<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getThresholdDisplayValue":{"!description":"Gets current value of property {@link #getThresholdDisplayValue thresholdDisplayValue}.\n\nOverrides the threshold value with a string that is shown instead.","!static":false,"!category":"function","!type":"fn() -> String"},"getRightTopLabel":{"!description":"Gets current value of property {@link #getRightTopLabel rightTopLabel}.\n\nDescribes the right top label of the chart. The label color is determined by the color property of the last LineMicroChartPoint in the points aggregation. The space for the label is not reserved if the label is not set.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowBottomLabels":{"!description":"Sets a new value for property {@link #getShowBottomLabels showBottomLabels}.\n\nIf this property is set to <code>false<\/code>, both bottom labels are hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowBottomLabels: Boolean) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"bShowBottomLabels":"type: boolean, description: New value for property <code>showBottomLabels<\/code>"}},"setRightBottomLabel":{"!description":"Sets a new value for property {@link #getRightBottomLabel rightBottomLabel}.\n\nDescribes the right bottom label of the chart. The label color is set automatically. The space for the label is not reserved if the label is not set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRightBottomLabel: String) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"sRightBottomLabel":"type: string, description: New value for property <code>rightBottomLabel<\/code>"}},"getLines":{"!description":"Gets content of aggregation {@link #getLines lines}.\n\nAggregation that containes lines with data points. <br>This aggregation should be used instead of the <code>points<\/code> aggregation.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.LineMicroChartLine]"},"getRightBottomLabel":{"!description":"Gets current value of property {@link #getRightBottomLabel rightBottomLabel}.\n\nDescribes the right bottom label of the chart. The label color is set automatically. The space for the label is not reserved if the label is not set.","!static":false,"!category":"function","!type":"fn() -> String"},"setThreshold":{"!description":"Sets a new value for property {@link #getThreshold threshold}.\n\nDetermines the chart threshold which is used for vertical normalization. If the threshold does not belong to the value range given by minYValue...maxYValue, the threshold is ignored. By setting the threshold property's value to null, the threshold is disabled and excluded from range calculations.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fThreshold: Number) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"fThreshold":"type: float, description: New value for property <code>threshold<\/code>"}},"getMinYValue":{"!description":"Gets current value of property {@link #getMinYValue minYValue}.\n\nIf this property is set, it indicates the value the Y-axis starts with.","!static":false,"!category":"function","!type":"fn() -> Number"},"setLeftTopLabel":{"!description":"Sets a new value for property {@link #getLeftTopLabel leftTopLabel}.\n\nDescribes the left top label of the chart. The label color is determined by the color property of the first LineMicroChartPoint in the points aggregation. The space for the label is not reserved if the label is not set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLeftTopLabel: String) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"sLeftTopLabel":"type: string, description: New value for property <code>leftTopLabel<\/code>"}},"removeAllLines":{"!description":"Removes all the controls from the aggregation {@link #getLines lines}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.LineMicroChartLine]"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.LineMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.LineMicroChart<\/code> itself.\n\nThe event is triggered when the chart is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.LineMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Chart that displays the history of values as segmented lines along a threshold line. The scale is optional and showing the points is also optional. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string.","setThresholdDisplayValue":{"!description":"Sets a new value for property {@link #getThresholdDisplayValue thresholdDisplayValue}.\n\nOverrides the threshold value with a string that is shown instead.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sThresholdDisplayValue: String) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"sThresholdDisplayValue":"type: string, description: New value for property <code>thresholdDisplayValue<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.LineMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLeftTopLabel":{"!description":"Gets current value of property {@link #getLeftTopLabel leftTopLabel}.\n\nDescribes the left top label of the chart. The label color is determined by the color property of the first LineMicroChartPoint in the points aggregation. The space for the label is not reserved if the label is not set.","!static":false,"!category":"function","!type":"fn() -> String"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setMaxXValue":{"!description":"Sets a new value for property {@link #getMaxXValue maxXValue}.\n\nIf this property is set, it indicates the value the X-axis ends with.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMaxXValue: Number) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"fMaxXValue":"type: float, description: New value for property <code>maxXValue<\/code>"}},"getShowBottomLabels":{"!description":"Gets current value of property {@link #getShowBottomLabels showBottomLabels}.\n\nIf this property is set to <code>false<\/code>, both bottom labels are hidden.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindPoints":{"!description":"Binds aggregation {@link #getPoints points} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.LineMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.LineMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getShowPoints":{"!description":"Gets current value of property {@link #getShowPoints showPoints}.\n\nDefines if the control renders the points or not. <br>If emphasized points are used, there is no effect. <br>If the value is true, the points in the aggregation are shown.\n\n<br>The <code>showPoints<\/code> property of the {@link sap.suite.ui.microchart.LineMicroChartLine} control has priority over this property in case it is set.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addLine":{"!description":"Adds some line to the aggregation {@link #getLines lines}.","!static":false,"!category":"function","!type":"fn(oLine: sap.suite.ui.microchart.LineMicroChartLine) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"oLine":"type: sap.suite.ui.microchart.LineMicroChartLine, description: The line to add; if empty, nothing is inserted"}},"!module":"sap/suite/ui/microchart/LineMicroChart","getShowThresholdLine":{"!description":"Gets current value of property {@link #getShowThresholdLine showThresholdLine}.\n\nIf this property is set to <code>false<\/code>, the threshold line is hidden.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!helpDescription":"Chart that displays the history of values as segmented lines along a threshold line. The scale is optional and showing the points is also optional. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string.","destroyLines":{"!description":"Destroys all the lines in the aggregation {@link #getLines lines}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.LineMicroChart"},"indexOfLine":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.LineMicroChartLine<\/code> in the aggregation {@link #getLines lines}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oLine: sap.suite.ui.microchart.LineMicroChartLine) -> Number","parameters":{"oLine":"type: sap.suite.ui.microchart.LineMicroChartLine, description: The line whose index is looked for"}},"getShowTopLabels":{"!description":"Gets current value of property {@link #getShowTopLabels showTopLabels}.\n\nIf this property is set to <code>false<\/code>, both top labels are hidden.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindLines":{"!description":"Binds aggregation {@link #getLines lines} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getMaxXValue":{"!description":"Gets current value of property {@link #getMaxXValue maxXValue}.\n\nIf this property is set, it indicates the value the X-axis ends with.","!static":false,"!category":"function","!type":"fn() -> Number"},"setLeftBottomLabel":{"!description":"Sets a new value for property {@link #getLeftBottomLabel leftBottomLabel}.\n\nDescribes the left bottom label of the chart. The label color is set internally. The space for the label is not reserved if the label is not set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLeftBottomLabel: String) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"sLeftBottomLabel":"type: string, description: New value for property <code>leftBottomLabel<\/code>"}},"removePoint":{"!description":"Removes a point from the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn(vPoint: Number | String | sap.suite.ui.microchart.LineMicroChartPoint) -> sap.suite.ui.microchart.LineMicroChartPoint","parameters":{"vPoint":"type: int|string|sap.suite.ui.microchart.LineMicroChartPoint, description: The point to remove or its index or id"}},"!proto":"sap.ui.core.Control","setMinXValue":{"!description":"Sets a new value for property {@link #getMinXValue minXValue}.\n\nIf this property is set, it indicates the value the X-axis starts with.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMinXValue: Number) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"fMinXValue":"type: float, description: New value for property <code>minXValue<\/code>"}},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setShowThresholdLine":{"!description":"Sets a new value for property {@link #getShowThresholdLine showThresholdLine}.\n\nIf this property is set to <code>false<\/code>, the threshold line is hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowThresholdLine: Boolean) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"bShowThresholdLine":"type: boolean, description: New value for property <code>showThresholdLine<\/code>"}},"getMaxYValue":{"!description":"Gets current value of property {@link #getMaxYValue maxYValue}.\n\nIf this property is set, it indicates the value the Y-axis ends with.","!static":false,"!category":"function","!type":"fn() -> Number"},"setMaxYValue":{"!description":"Sets a new value for property {@link #getMaxYValue maxYValue}.\n\nIf this property is set, it indicates the value the Y-axis ends with.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMaxYValue: Number) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"fMaxYValue":"type: float, description: New value for property <code>maxYValue<\/code>"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new LineMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getThreshold threshold} : float (default: 0)<\/li>\n<li>{@link #getShowThresholdLine showThresholdLine} : boolean (default: true)<\/li>\n<li>{@link #getShowThresholdValue showThresholdValue} : boolean (default: false)<\/li>\n<li>{@link #getThresholdDisplayValue thresholdDisplayValue} : string<\/li>\n<li>{@link #getMinXValue minXValue} : float<\/li>\n<li>{@link #getMaxXValue maxXValue} : float<\/li>\n<li>{@link #getMinYValue minYValue} : float<\/li>\n<li>{@link #getMaxYValue maxYValue} : float<\/li>\n<li>{@link #getLeftTopLabel leftTopLabel} : string<\/li>\n<li>{@link #getRightTopLabel rightTopLabel} : string<\/li>\n<li>{@link #getLeftBottomLabel leftBottomLabel} : string<\/li>\n<li>{@link #getRightBottomLabel rightBottomLabel} : string<\/li>\n<li>{@link #getShowTopLabels showTopLabels} : boolean (default: true)<\/li>\n<li>{@link #getShowBottomLabels showBottomLabels} : boolean (default: true)<\/li>\n<li>{@link #getColor color} : any (default: Neutral)<\/li>\n<li>{@link #getShowPoints showPoints} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPoints points} : sap.suite.ui.microchart.LineMicroChartPoint[] (default)<\/li>\n<li>{@link #getLines lines} : sap.suite.ui.microchart.LineMicroChartLine[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"indexOfPoint":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.LineMicroChartPoint<\/code> in the aggregation {@link #getPoints points}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.LineMicroChartPoint) -> Number","parameters":{"oPoint":"type: sap.suite.ui.microchart.LineMicroChartPoint, description: The point whose index is looked for"}},"insertPoint":{"!description":"Inserts a point into the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.LineMicroChartPoint, iIndex: Number) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"oPoint":"type: sap.suite.ui.microchart.LineMicroChartPoint, description: The point to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the point should be inserted at; for a negative value of <code>iIndex<\/code>, the point is inserted at position 0; for a value greater than the current size of the aggregation, the point is inserted at the last position"}},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nThe size of the chart. If not set, the default size is applied based on the type of the device.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getPoints":{"!description":"Gets content of aggregation {@link #getPoints points}.\n\nAggregation that contains all data points that should be provided in an ordered way. If both the <code>points<\/code> and <code>lines<\/code> aggregations are used, the chart is rendered based on the <code>points<\/code> aggregation, while the lines from the <code>lines<\/code> aggregations are ignored. <br>The <code>points<\/code> aggregation can be used to ensure backward compatibility. However in general, the <code>lines<\/code> aggregation should be preferred.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.LineMicroChartPoint]"},"unbindLines":{"!description":"Unbinds aggregation {@link #getLines lines} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.LineMicroChart"},"setMinYValue":{"!description":"Sets a new value for property {@link #getMinYValue minYValue}.\n\nIf this property is set, it indicates the value the Y-axis starts with.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMinYValue: Number) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"fMinYValue":"type: float, description: New value for property <code>minYValue<\/code>"}},"insertLine":{"!description":"Inserts a line into the aggregation {@link #getLines lines}.","!static":false,"!category":"function","!type":"fn(oLine: sap.suite.ui.microchart.LineMicroChartLine, iIndex: Number) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"oLine":"type: sap.suite.ui.microchart.LineMicroChartLine, description: The line to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the line should be inserted at; for a negative value of <code>iIndex<\/code>, the line is inserted at position 0; for a value greater than the current size of the aggregation, the line is inserted at the last position"}},"setRightTopLabel":{"!description":"Sets a new value for property {@link #getRightTopLabel rightTopLabel}.\n\nDescribes the right top label of the chart. The label color is determined by the color property of the last LineMicroChartPoint in the points aggregation. The space for the label is not reserved if the label is not set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRightTopLabel: String) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"sRightTopLabel":"type: string, description: New value for property <code>rightTopLabel<\/code>"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getLeftBottomLabel":{"!description":"Gets current value of property {@link #getLeftBottomLabel leftBottomLabel}.\n\nDescribes the left bottom label of the chart. The label color is set internally. The space for the label is not reserved if the label is not set.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowTopLabels":{"!description":"Sets a new value for property {@link #getShowTopLabels showTopLabels}.\n\nIf this property is set to <code>false<\/code>, both top labels are hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTopLabels: Boolean) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"bShowTopLabels":"type: boolean, description: New value for property <code>showTopLabels<\/code>"}},"setShowThresholdValue":{"!description":"Sets a new value for property {@link #getShowThresholdValue showThresholdValue}.\n\nIf this property is set to <code>false<\/code>, the threshold value is hidden. <br>If this property is set to <code>true<\/code>, the value will be shown only if the <code>showThresholdLine<\/code> property is also set to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowThresholdValue: Boolean) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"bShowThresholdValue":"type: boolean, description: New value for property <code>showThresholdValue<\/code>"}},"getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nDescribes the color of the chart. <br>In conjunction with emphasized points, it is only used if all points have the sap.m.ValueColor.Neutral color. <br>The color can be set as an {@link sap.m.ValueCSSColor} or as a plain object. It has the 'above|' and 'below' properties that determine the color of the graph above and below the threshold, respectively.\n\n<br>The <code>color<\/code> property of {@link sap.suite.ui.microchart.LineMicroChartLine} has priority over this property in case it is set.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setShowPoints":{"!description":"Sets a new value for property {@link #getShowPoints showPoints}.\n\nDefines if the control renders the points or not. <br>If emphasized points are used, there is no effect. <br>If the value is true, the points in the aggregation are shown.\n\n<br>The <code>showPoints<\/code> property of the {@link sap.suite.ui.microchart.LineMicroChartLine} control has priority over this property in case it is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowPoints: Boolean) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"bShowPoints":"type: boolean, description: New value for property <code>showPoints<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"addPoint":{"!description":"Adds some point to the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.LineMicroChartPoint) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"oPoint":"type: sap.suite.ui.microchart.LineMicroChartPoint, description: The point to add; if empty, nothing is inserted"}},"removeLine":{"!description":"Removes a line from the aggregation {@link #getLines lines}.","!static":false,"!category":"function","!type":"fn(vLine: Number | String | sap.suite.ui.microchart.LineMicroChartLine) -> sap.suite.ui.microchart.LineMicroChartLine","parameters":{"vLine":"type: int|string|sap.suite.ui.microchart.LineMicroChartLine, description: The line to remove or its index or id"}},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nThe size of the chart. If not set, the default size is applied based on the type of the device.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nDescribes the color of the chart. <br>In conjunction with emphasized points, it is only used if all points have the sap.m.ValueColor.Neutral color. <br>The color can be set as an {@link sap.m.ValueCSSColor} or as a plain object. It has the 'above|' and 'below' properties that determine the color of the graph above and below the threshold, respectively.\n\n<br>The <code>color<\/code> property of {@link sap.suite.ui.microchart.LineMicroChartLine} has priority over this property in case it is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(oColor: Object) -> sap.suite.ui.microchart.LineMicroChart","parameters":{"oColor":"type: any, description: New value for property <code>color<\/code>"}},"getMinXValue":{"!description":"Gets current value of property {@link #getMinXValue minXValue}.\n\nIf this property is set, it indicates the value the X-axis starts with.","!static":false,"!category":"function","!type":"fn() -> Number"},"destroyPoints":{"!description":"Destroys all the points in the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.LineMicroChart"},"getThreshold":{"!description":"Gets current value of property {@link #getThreshold threshold}.\n\nDetermines the chart threshold which is used for vertical normalization. If the threshold does not belong to the value range given by minYValue...maxYValue, the threshold is ignored. By setting the threshold property's value to null, the threshold is disabled and excluded from range calculations.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllPoints":{"!description":"Removes all the controls from the aggregation {@link #getPoints points}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.LineMicroChartPoint]"},"unbindPoints":{"!description":"Unbinds aggregation {@link #getPoints points} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.LineMicroChart"}},"sap.suite.ui.microchart.LineMicroChartEmphasizedPoint_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.LineMicroChartEmphasizedPoint with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.LineMicroChartPoint.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.LineMicroChartEmphasizedPoint"},"sap.suite.ui.microchart.DeltaMicroChart":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"!proto":"sap.ui.core.Control","getTitle1":{"!description":"Gets current value of property {@link #getTitle1 title1}.\n\nThe first value title.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setValue2":{"!description":"Sets a new value for property {@link #getValue2 value2}.\n\nThe second value for delta calculation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fValue2: Number) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"fValue2":"type: float, description: New value for property <code>value2<\/code>"}},"!constructorDescription":"Constructor for a new DeltaMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue1 value1} : float<\/li>\n<li>{@link #getValue2 value2} : float<\/li>\n<li>{@link #getTitle1 title1} : string<\/li>\n<li>{@link #getTitle2 title2} : string<\/li>\n<li>{@link #getDisplayValue1 displayValue1} : string<\/li>\n<li>{@link #getDisplayValue2 displayValue2} : string<\/li>\n<li>{@link #getDeltaDisplayValue deltaDisplayValue} : string<\/li>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getView view} : sap.suite.ui.microchart.DeltaMicroChartViewType (default: Normal)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the delta micro chart is included.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"setValue1":{"!description":"Sets a new value for property {@link #getValue1 value1}.\n\nThe first value for delta calculation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fValue1: Number) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"fValue1":"type: float, description: New value for property <code>value1<\/code>"}},"getIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.61.0 undefined<br>Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTitle2":{"!description":"Gets current value of property {@link #getTitle2 title2}.\n\nThe second value title.","!static":false,"!category":"function","!type":"fn() -> String"},"setDeltaDisplayValue":{"!description":"Sets a new value for property {@link #getDeltaDisplayValue deltaDisplayValue}.\n\nIf this property is set, it is rendered instead of a calculated delta.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDeltaDisplayValue: String) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sDeltaDisplayValue":"type: string, description: New value for property <code>deltaDisplayValue<\/code>"}},"getDisplayValue1":{"!description":"Gets current value of property {@link #getDisplayValue1 displayValue1}.\n\nIf this property is set, it is rendered instead of value1.","!static":false,"!category":"function","!type":"fn() -> String"},"getDisplayValue2":{"!description":"Gets current value of property {@link #getDisplayValue2 displayValue2}.\n\nIf this property is set, it is rendered instead of value2.","!static":false,"!category":"function","!type":"fn() -> String"},"getView":{"!description":"Gets current value of property {@link #getView view}.\n\nThe view of the chart. If not set, the <code>Normal<\/code> view is used by default.\n\nDefault value is <code>Normal<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.DeltaMicroChartViewType"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.DeltaMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.DeltaMicroChart<\/code> itself.\n\nThe event is triggered when the chart is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.DeltaMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Represents the delta of two values as a chart. This control replaces the deprecated sap.suite.ui.commons.DeltaMicroChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string.","setTitle2":{"!description":"Sets a new value for property {@link #getTitle2 title2}.\n\nThe second value title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle2: String) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sTitle2":"type: string, description: New value for property <code>title2<\/code>"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.DeltaMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTitle1":{"!description":"Sets a new value for property {@link #getTitle1 title1}.\n\nThe first value title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle1: String) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sTitle1":"type: string, description: New value for property <code>title1<\/code>"}},"getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nThe semantic color of the delta value.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueCSSColor"},"setIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.61.0 undefined<br>Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size and Width properties are ignored in such case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"getValue1":{"!description":"Gets current value of property {@link #getValue1 value1}.\n\nThe first value for delta calculation.","!static":false,"!category":"function","!type":"fn() -> Number"},"getValue2":{"!description":"Gets current value of property {@link #getValue2 value2}.\n\nThe second value for delta calculation.","!static":false,"!category":"function","!type":"fn() -> Number"},"setDisplayValue1":{"!description":"Sets a new value for property {@link #getDisplayValue1 displayValue1}.\n\nIf this property is set, it is rendered instead of value1.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayValue1: String) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sDisplayValue1":"type: string, description: New value for property <code>displayValue1<\/code>"}},"getDeltaDisplayValue":{"!description":"Gets current value of property {@link #getDeltaDisplayValue deltaDisplayValue}.\n\nIf this property is set, it is rendered instead of a calculated delta.","!static":false,"!category":"function","!type":"fn() -> String"},"setDisplayValue2":{"!description":"Sets a new value for property {@link #getDisplayValue2 displayValue2}.\n\nIf this property is set, it is rendered instead of value2.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayValue2: String) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sDisplayValue2":"type: string, description: New value for property <code>displayValue2<\/code>"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.DeltaMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.DeltaMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the delta micro chart is included.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nThe semantic color of the delta value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueCSSColor) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sColor":"type: sap.m.ValueCSSColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/DeltaMicroChart","!helpDescription":"Represents the delta of two values as a chart. This control replaces the deprecated sap.suite.ui.commons.DeltaMicroChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string.","setView":{"!description":"Sets a new value for property {@link #getView view}.\n\nThe view of the chart. If not set, the <code>Normal<\/code> view is used by default.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Normal<\/code>.","!static":false,"!category":"function","!type":"fn(sView: sap.suite.ui.microchart.DeltaMicroChartViewType) -> sap.suite.ui.microchart.DeltaMicroChart","parameters":{"sView":"type: sap.suite.ui.microchart.DeltaMicroChartViewType, description: New value for property <code>view<\/code>"}}},"sap.suite.ui.microchart.ColumnMicroChart":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getAllowColumnLabels":{"!description":"Gets current value of property {@link #getAllowColumnLabels allowColumnLabels}.\n\nIf set to true and there is enough space, top labels of the chart are hidden and labels for each column are shown instead.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getRightTopLabel":{"!description":"Gets content of aggregation {@link #getRightTopLabel rightTopLabel}.\n\nThe label on the right top corner of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChartLabel"},"setShowBottomLabels":{"!description":"Sets a new value for property {@link #getShowBottomLabels showBottomLabels}.\n\nIf this property is set to <code>false<\/code>, both bottom labels are hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowBottomLabels: Boolean) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"bShowBottomLabels":"type: boolean, description: New value for property <code>showBottomLabels<\/code>"}},"setRightBottomLabel":{"!description":"Sets the aggregated {@link #getRightBottomLabel rightBottomLabel}.","!static":false,"!category":"function","!type":"fn(oRightBottomLabel: sap.suite.ui.microchart.ColumnMicroChartLabel) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oRightBottomLabel":"type: sap.suite.ui.microchart.ColumnMicroChartLabel, description: The rightBottomLabel to set"}},"getRightBottomLabel":{"!description":"Gets content of aggregation {@link #getRightBottomLabel rightBottomLabel}.\n\nThe label on the right bottom corner of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChartLabel"},"setLeftTopLabel":{"!description":"Sets the aggregated {@link #getLeftTopLabel leftTopLabel}.","!static":false,"!category":"function","!type":"fn(oLeftTopLabel: sap.suite.ui.microchart.ColumnMicroChartLabel) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oLeftTopLabel":"type: sap.suite.ui.microchart.ColumnMicroChartLabel, description: The leftTopLabel to set"}},"removeAllColumns":{"!description":"Removes all the controls from the aggregation {@link #getColumns columns}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.ColumnMicroChartData]"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ColumnMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.ColumnMicroChart<\/code> itself.\n\nThe event is triggered when the chart is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ColumnMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Compares different values which are represented as vertical bars. This control replaces the deprecated sap.suite.ui.commons.ColumnMicroChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","destroyLeftTopLabel":{"!description":"Destroys the leftTopLabel in the aggregation {@link #getLeftTopLabel leftTopLabel}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChart"},"addColumn":{"!description":"Adds some column to the aggregation {@link #getColumns columns}.","!static":false,"!category":"function","!type":"fn(oColumn: sap.suite.ui.microchart.ColumnMicroChartData) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oColumn":"type: sap.suite.ui.microchart.ColumnMicroChartData, description: The column to add; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.ColumnMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyRightBottomLabel":{"!description":"Destroys the rightBottomLabel in the aggregation {@link #getRightBottomLabel rightBottomLabel}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChart"},"getLeftTopLabel":{"!description":"Gets content of aggregation {@link #getLeftTopLabel leftTopLabel}.\n\nThe label on the left top corner of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChartLabel"},"indexOfColumn":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.ColumnMicroChartData<\/code> in the aggregation {@link #getColumns columns}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oColumn: sap.suite.ui.microchart.ColumnMicroChartData) -> Number","parameters":{"oColumn":"type: sap.suite.ui.microchart.ColumnMicroChartData, description: The column whose index is looked for"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"getShowBottomLabels":{"!description":"Gets current value of property {@link #getShowBottomLabels showBottomLabels}.\n\nIf this property is set to <code>false<\/code>, both bottom labels are hidden.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ColumnMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"unbindColumns":{"!description":"Unbinds aggregation {@link #getColumns columns} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChart"},"!module":"sap/suite/ui/microchart/ColumnMicroChart","insertColumn":{"!description":"Inserts a column into the aggregation {@link #getColumns columns}.","!static":false,"!category":"function","!type":"fn(oColumn: sap.suite.ui.microchart.ColumnMicroChartData, iIndex: Number) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oColumn":"type: sap.suite.ui.microchart.ColumnMicroChartData, description: The column to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the column should be inserted at; for a negative value of <code>iIndex<\/code>, the column is inserted at position 0; for a value greater than the current size of the aggregation, the column is inserted at the last position"}},"!helpDescription":"Compares different values which are represented as vertical bars. This control replaces the deprecated sap.suite.ui.commons.ColumnMicroChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","getShowTopLabels":{"!description":"Gets current value of property {@link #getShowTopLabels showTopLabels}.\n\nIf this property is set to <code>false<\/code>, both top labels are hidden.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindColumns":{"!description":"Binds aggregation {@link #getColumns columns} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"destroyRightTopLabel":{"!description":"Destroys the rightTopLabel in the aggregation {@link #getRightTopLabel rightTopLabel}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChart"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"destroyLeftBottomLabel":{"!description":"Destroys the leftBottomLabel in the aggregation {@link #getLeftBottomLabel leftBottomLabel}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChart"},"setLeftBottomLabel":{"!description":"Sets the aggregated {@link #getLeftBottomLabel leftBottomLabel}.","!static":false,"!category":"function","!type":"fn(oLeftBottomLabel: sap.suite.ui.microchart.ColumnMicroChartLabel) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oLeftBottomLabel":"type: sap.suite.ui.microchart.ColumnMicroChartLabel, description: The leftBottomLabel to set"}},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getColumns":{"!description":"Gets content of aggregation {@link #getColumns columns}.\n\nThe column chart data.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.ColumnMicroChartData]"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new ColumnMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<li>{@link #getShowTopLabels showTopLabels} : boolean (default: true)<\/li>\n<li>{@link #getShowBottomLabels showBottomLabels} : boolean (default: true)<\/li>\n<li>{@link #getAllowColumnLabels allowColumnLabels} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumns columns} : sap.suite.ui.microchart.ColumnMicroChartData[] (default)<\/li>\n<li>{@link #getLeftTopLabel leftTopLabel} : sap.suite.ui.microchart.ColumnMicroChartLabel<\/li>\n<li>{@link #getRightTopLabel rightTopLabel} : sap.suite.ui.microchart.ColumnMicroChartLabel<\/li>\n<li>{@link #getLeftBottomLabel leftBottomLabel} : sap.suite.ui.microchart.ColumnMicroChartLabel<\/li>\n<li>{@link #getRightBottomLabel rightBottomLabel} : sap.suite.ui.microchart.ColumnMicroChartLabel<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the column micro chart is included.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.60.0 undefined<br>Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size, width and height properties are ignored in this case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAllowColumnLabels":{"!description":"Sets a new value for property {@link #getAllowColumnLabels allowColumnLabels}.\n\nIf set to true and there is enough space, top labels of the chart are hidden and labels for each column are shown instead.","!static":false,"!category":"function","!type":"fn(bAllowColumnLabels: Boolean) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"bAllowColumnLabels":"type: boolean, description: New value for property <code>allowColumnLabels<\/code>"}},"setRightTopLabel":{"!description":"Sets the aggregated {@link #getRightTopLabel rightTopLabel}.","!static":false,"!category":"function","!type":"fn(oRightTopLabel: sap.suite.ui.microchart.ColumnMicroChartLabel) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"oRightTopLabel":"type: sap.suite.ui.microchart.ColumnMicroChartLabel, description: The rightTopLabel to set"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getLeftBottomLabel":{"!description":"Gets content of aggregation {@link #getLeftBottomLabel leftBottomLabel}.\n\nThe label on the left bottom corner of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChartLabel"},"setShowTopLabels":{"!description":"Sets a new value for property {@link #getShowTopLabels showTopLabels}.\n\nIf this property is set to <code>false<\/code>, both top labels are hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTopLabels: Boolean) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"bShowTopLabels":"type: boolean, description: New value for property <code>showTopLabels<\/code>"}},"destroyColumns":{"!description":"Destroys all the columns in the aggregation {@link #getColumns columns}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.ColumnMicroChart"},"setIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.60.0 undefined<br>Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf set to true, width and height of the control are determined by the width and height of the container in which the control is placed. Size, width and height properties are ignored in this case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.ColumnMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"removeColumn":{"!description":"Removes a column from the aggregation {@link #getColumns columns}.","!static":false,"!category":"function","!type":"fn(vColumn: Number | String | sap.suite.ui.microchart.ColumnMicroChartData) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"vColumn":"type: int|string|sap.suite.ui.microchart.ColumnMicroChartData, description: The column to remove or its index or id"}},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the column micro chart is included.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"}},"sap.suite.ui.microchart.InteractiveDonutChart":{"fireSelectionChanged":{"!description":"Fires event {@link #event:selectionChanged selectionChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.InteractiveDonutChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getDisplayedSegments":{"!description":"Gets current value of property {@link #getDisplayedSegments displayedSegments}.\n\nNumber of segments to be displayed.\n\nDefault value is <code>3<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllSegments":{"!description":"Removes all the controls from the aggregation {@link #getSegments segments}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.InteractiveDonutChartSegment]"},"!proto":"sap.ui.core.Control","!category":"class","setSelectionEnabled":{"!description":"Sets a new value for property {@link #getSelectionEnabled selectionEnabled}.\n\nSwitch which enables or disables selection.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSelectionEnabled: Boolean) -> sap.suite.ui.microchart.InteractiveDonutChart","parameters":{"bSelectionEnabled":"type: boolean, description: New value for property <code>selectionEnabled<\/code>"}},"getSelectionEnabled":{"!description":"Gets current value of property {@link #getSelectionEnabled selectionEnabled}.\n\nSwitch which enables or disables selection.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachSelectionChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChanged selectionChanged} event of this <code>sap.suite.ui.microchart.InteractiveDonutChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.InteractiveDonutChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for InteractiveDonutChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayedSegments displayedSegments} : int (default: 3)<\/li>\n<li>{@link #getSelectionEnabled selectionEnabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSegments segments} : sap.suite.ui.microchart.InteractiveDonutChartSegment[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChanged selectionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.microchart.InteractiveDonutChart","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"getSelectedSegments":{"!description":"Gets all selected segments or an empty array if there is no segment selected yet","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.InteractiveDonutChartSegment]"},"destroySegments":{"!description":"Destroys all the segments in the aggregation {@link #getSegments segments}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.InteractiveDonutChart"},"unbindSegments":{"!description":"Unbinds aggregation {@link #getSegments segments} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.InteractiveDonutChart"},"setSelectedSegments":{"!description":"Already selected segments will be unselected and members of selectedSegments attribute which are part of the segments aggregation will be set to selected state.","!static":false,"!category":"function","!type":"fn(selectedSegments: [sap.suite.ui.microchart.InteractiveDonutChartSegment | sap.suite.ui.microchart.InteractiveDonutChartSegment]) -> sap.suite.ui.microchart.InteractiveDonutChart","parameters":{"selectedSegments":"type: sap.suite.ui.microchart.InteractiveDonutChartSegment|sap.suite.ui.microchart.InteractiveDonutChartSegment[], description: A segment element or an array of segments for which the status should be set to selected"}},"insertSegment":{"!description":"Inserts a segment into the aggregation {@link #getSegments segments}.","!static":false,"!category":"function","!type":"fn(oSegment: sap.suite.ui.microchart.InteractiveDonutChartSegment, iIndex: Number) -> sap.suite.ui.microchart.InteractiveDonutChart","parameters":{"oSegment":"type: sap.suite.ui.microchart.InteractiveDonutChartSegment, description: The segment to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the segment should be inserted at; for a negative value of <code>iIndex<\/code>, the segment is inserted at position 0; for a value greater than the current size of the aggregation, the segment is inserted at the last position"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.InteractiveDonutChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.InteractiveDonutChart<\/code> itself.\n\nThe event is fired when the user presses the chart while its segments are not selectable in non-interactive mode. This is decided internally, depending on the size of the chart.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.InteractiveDonutChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.InteractiveDonutChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"bindSegments":{"!description":"Binds aggregation {@link #getSegments segments} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.InteractiveDonutChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getSegments":{"!description":"Gets content of aggregation {@link #getSegments segments}.\n\nAggregation which contains all segments.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.InteractiveDonutChartSegment]"},"!description":"The InteractiveDonutChart control belongs to a chart control group in the MicroChart library with a number of interactive features. These interactive features provide more information on a chart value. For example, by selecting a segment you can get more details on the displayed value.","setDisplayedSegments":{"!description":"Sets a new value for property {@link #getDisplayedSegments displayedSegments}.\n\nNumber of segments to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>3<\/code>.","!static":false,"!category":"function","!type":"fn(iDisplayedSegments: Number) -> sap.suite.ui.microchart.InteractiveDonutChart","parameters":{"iDisplayedSegments":"type: int, description: New value for property <code>displayedSegments<\/code>"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.InteractiveDonutChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachSelectionChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChanged selectionChanged} event of this <code>sap.suite.ui.microchart.InteractiveDonutChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.InteractiveDonutChart<\/code> itself.\n\nEvent is fired when a user has selected or deselected a segment or a legend entry.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.InteractiveDonutChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.InteractiveDonutChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfSegment":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.InteractiveDonutChartSegment<\/code> in the aggregation {@link #getSegments segments}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSegment: sap.suite.ui.microchart.InteractiveDonutChartSegment) -> Number","parameters":{"oSegment":"type: sap.suite.ui.microchart.InteractiveDonutChartSegment, description: The segment whose index is looked for"}},"removeSegment":{"!description":"Removes a segment from the aggregation {@link #getSegments segments}.","!static":false,"!category":"function","!type":"fn(vSegment: Number | String | sap.suite.ui.microchart.InteractiveDonutChartSegment) -> sap.suite.ui.microchart.InteractiveDonutChartSegment","parameters":{"vSegment":"type: int|string|sap.suite.ui.microchart.InteractiveDonutChartSegment, description: The segment to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.InteractiveDonutChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.InteractiveDonutChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.InteractiveDonutChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.InteractiveDonutChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"addSegment":{"!description":"Adds some segment to the aggregation {@link #getSegments segments}.","!static":false,"!category":"function","!type":"fn(oSegment: sap.suite.ui.microchart.InteractiveDonutChartSegment) -> sap.suite.ui.microchart.InteractiveDonutChart","parameters":{"oSegment":"type: sap.suite.ui.microchart.InteractiveDonutChartSegment, description: The segment to add; if empty, nothing is inserted"}},"!module":"sap/suite/ui/microchart/InteractiveDonutChart","!helpDescription":"The InteractiveDonutChart control belongs to a chart control group in the MicroChart library with a number of interactive features. These interactive features provide more information on a chart value. For example, by selecting a segment you can get more details on the displayed value."},"sap.suite.ui.microchart.InteractiveLineChartPoint_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.InteractiveLineChartPoint with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.InteractiveLineChartPoint"},"sap.suite.ui.microchart.ColumnMicroChartData":{"!description":"Defines the column chart data.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.ColumnMicroChartData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nThe line title.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nThe graphic element color.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueCSSColor"},"!category":"class","setDisplayValue":{"!description":"Sets a new value for property {@link #getDisplayValue displayValue}.\n\nOverrides the value with a string that is shown when used in combination with {@link sap.suite.ui.microchart.ColumnMicroChart} <code>allowColumnLabels<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayValue: String) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"sDisplayValue":"type: string, description: New value for property <code>displayValue<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChartData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ColumnMicroChartData<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe actual value.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new ColumnMicroChartData control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getLabel label} : string (default: )<\/li>\n<li>{@link #getDisplayValue displayValue} : string<\/li>\n<li>{@link #getValue value} : float<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nThe graphic element color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueCSSColor) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"sColor":"type: sap.m.ValueCSSColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/ColumnMicroChartData","!helpDescription":"Defines the column chart data.","getDisplayValue":{"!description":"Gets current value of property {@link #getDisplayValue displayValue}.\n\nOverrides the value with a string that is shown when used in combination with {@link sap.suite.ui.microchart.ColumnMicroChart} <code>allowColumnLabels<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe actual value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fValue: Number) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nThe line title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.ColumnMicroChartData<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.ColumnMicroChartData<\/code> itself.\n\nThe event is fired when the user chooses the column data.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.ColumnMicroChartData","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.ColumnMicroChartData<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.suite.ui.microchart.AreaMicroChartPoint":{"!description":"Contains the data for the point.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChartPoint.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setY":{"!description":"Sets a new value for property {@link #getY y}.\n\nY value for the given point.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fY: Number) -> sap.suite.ui.microchart.AreaMicroChartPoint","parameters":{"fY":"type: float, description: New value for property <code>y<\/code>"}},"setX":{"!description":"Sets a new value for property {@link #getX x}.\n\nX value for the given point.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fX: Number) -> sap.suite.ui.microchart.AreaMicroChartPoint","parameters":{"fX":"type: float, description: New value for property <code>x<\/code>"}},"!proto":"sap.ui.core.Element","getXValue":{"!description":"Returns the x value. It returns 'undefined', if the x property was not set or an invalid number was set.","!static":false,"!category":"function","!type":"fn() -> Number"},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartPoint with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getX":{"!description":"Gets current value of property {@link #getX x}.\n\nX value for the given point.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"This control contains data for the point.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getX x} : float<\/li>\n<li>{@link #getY y} : float<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getY":{"!description":"Gets current value of property {@link #getY y}.\n\nY value for the given point.","!static":false,"!category":"function","!type":"fn() -> Number"},"!module":"sap/suite/ui/microchart/AreaMicroChartPoint","!helpDescription":"Contains the data for the point.","getYValue":{"!description":"Returns the y value. It returns 'undefined', if the y property was not set or an invalid number was set.","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.suite.ui.microchart.InteractiveDonutChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.InteractiveDonutChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.InteractiveDonutChart"},"sap.suite.ui.microchart.LineMicroChartPoint_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.LineMicroChartPoint with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.LineMicroChartPoint"},"sap.suite.ui.microchart.HarveyBallMicroChartItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.HarveyBallMicroChartItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.HarveyBallMicroChartItem"},"sap.suite.ui.microchart.InteractiveBarChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.InteractiveBarChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.InteractiveBarChart"},"sap.suite.ui.microchart.BulletMicroChartModeType":{"!description":"Defines if the horizontal bar represents a current value only or if it represents the delta between a current value and a threshold value.","!module":"sap/suite/ui/microchart/library","Delta":{"!description":"Displays delta between the Actual and Threshold values.","!category":"enum","!type":"String"},"!category":"static class","Actual":{"!description":"Displays the Actual value.","!category":"enum","!type":"String"}},"sap.suite.ui.microchart.LineMicroChartLine":{"!description":"The container containing all the points of the line.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.LineMicroChartLine.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removePoint":{"!description":"Removes a point from the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn(vPoint: Number | String | sap.suite.ui.microchart.LineMicroChartPoint) -> sap.suite.ui.microchart.LineMicroChartPoint","parameters":{"vPoint":"type: int|string|sap.suite.ui.microchart.LineMicroChartPoint, description: The point to remove or its index or id"}},"!proto":"sap.ui.core.Element","getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nDefines the color of the chart. <br>In conjunction with emphasized points, this property is only used if all points have the {@link sap.m.ValueColor.Neutral} color. The color can be set as an {@link sap.m.ValueCSSColor} or as a plain object. It has the <code>above<\/code> and <code>below<\/code> properties that determine the color of the graph above and below the threshold, respectively.\n\n<br>This property has priority over the property <code>color<\/code> of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set. <br>If this property is not defined, the value of the <code>color<\/code> property from the parent {@link sap.suite.ui.microchart.LineMicroChart} is used instead.","!static":false,"!category":"function","!type":"fn() -> Object"},"!category":"class","setShowPoints":{"!description":"Sets a new value for property {@link #getShowPoints showPoints}.\n\nDefines whether the points are shown. <br>If emphasized points are used, this property is ignored. <br>If this property is set to <code>true<\/code>, the points in the <code>points<\/code> aggregation are shown.\n\n<br>This property has priority over the property <code>showPoints<\/code> of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set. <br>If this property is not defined, the <code>showPoints<\/code> property of the {@link sap.suite.ui.microchart.LineMicroChart} is used instead.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bShowPoints: Boolean) -> sap.suite.ui.microchart.LineMicroChartLine","parameters":{"bShowPoints":"type: boolean, description: New value for property <code>showPoints<\/code>"}},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nDefines the type of the line.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Solid<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.suite.ui.microchart.LineType) -> sap.suite.ui.microchart.LineMicroChartLine","parameters":{"sType":"type: sap.suite.ui.microchart.LineType, description: New value for property <code>type<\/code>"}},"addPoint":{"!description":"Adds some point to the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.LineMicroChartPoint) -> sap.suite.ui.microchart.LineMicroChartLine","parameters":{"oPoint":"type: sap.suite.ui.microchart.LineMicroChartPoint, description: The point to add; if empty, nothing is inserted"}},"bindPoints":{"!description":"Binds aggregation {@link #getPoints points} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.LineMicroChartLine","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.LineMicroChartLine with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getShowPoints":{"!description":"Gets current value of property {@link #getShowPoints showPoints}.\n\nDefines whether the points are shown. <br>If emphasized points are used, this property is ignored. <br>If this property is set to <code>true<\/code>, the points in the <code>points<\/code> aggregation are shown.\n\n<br>This property has priority over the property <code>showPoints<\/code> of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set. <br>If this property is not defined, the <code>showPoints<\/code> property of the {@link sap.suite.ui.microchart.LineMicroChart} is used instead.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new LineMicroChartLine.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : any<\/li>\n<li>{@link #getShowPoints showPoints} : boolean<\/li>\n<li>{@link #getType type} : sap.suite.ui.microchart.LineType (default: Solid)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPoints points} : sap.suite.ui.microchart.LineMicroChartPoint[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","indexOfPoint":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.LineMicroChartPoint<\/code> in the aggregation {@link #getPoints points}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.LineMicroChartPoint) -> Number","parameters":{"oPoint":"type: sap.suite.ui.microchart.LineMicroChartPoint, description: The point whose index is looked for"}},"insertPoint":{"!description":"Inserts a point into the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.LineMicroChartPoint, iIndex: Number) -> sap.suite.ui.microchart.LineMicroChartLine","parameters":{"oPoint":"type: sap.suite.ui.microchart.LineMicroChartPoint, description: The point to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the point should be inserted at; for a negative value of <code>iIndex<\/code>, the point is inserted at position 0; for a value greater than the current size of the aggregation, the point is inserted at the last position"}},"setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nDefines the color of the chart. <br>In conjunction with emphasized points, this property is only used if all points have the {@link sap.m.ValueColor.Neutral} color. The color can be set as an {@link sap.m.ValueCSSColor} or as a plain object. It has the <code>above<\/code> and <code>below<\/code> properties that determine the color of the graph above and below the threshold, respectively.\n\n<br>This property has priority over the property <code>color<\/code> of {@link sap.suite.ui.microchart.LineMicroChart} in case it is set. <br>If this property is not defined, the value of the <code>color<\/code> property from the parent {@link sap.suite.ui.microchart.LineMicroChart} is used instead.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oColor: Object) -> sap.suite.ui.microchart.LineMicroChartLine","parameters":{"oColor":"type: any, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/LineMicroChartLine","!helpDescription":"The container containing all the points of the line.","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nDefines the type of the line.\n\nDefault value is <code>Solid<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.LineType"},"destroyPoints":{"!description":"Destroys all the points in the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.LineMicroChartLine"},"getPoints":{"!description":"Gets content of aggregation {@link #getPoints points}.\n\nAggregation that contains all data points that should be provided in an ordered way.\n\n<br><b>Note:<\/b> Points can be bound without template/factory method. <br>This approach is more efficient when many points are used, because no new objects will be created for them and only their representation in the model will be kept. See the {@link https://ui5.sap.com/#/sample/sap.suite.ui.microchart.sample.LineMicroChartBinding/preview samples}. <br>To use emphasized points, the <code>emphasized<\/code> property has to be set in the model of the point and can be used together with the properties <code>show<\/code> and <code>color<\/code>, as shown in the sample. When this binding method is used, the #getPoints method will always return an empty array.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.LineMicroChartPoint]"},"removeAllPoints":{"!description":"Removes all the controls from the aggregation {@link #getPoints points}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.LineMicroChartPoint]"},"unbindPoints":{"!description":"Unbinds aggregation {@link #getPoints points} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.LineMicroChartLine"}},"sap.suite":{"ui":"sap.suite.ui","!category":"namespace"},"sap.suite.ui.microchart.AreaMicroChartItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.AreaMicroChartItem"},"sap.suite.ui.microchart.AreaMicroChartPoint_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartPoint with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.AreaMicroChartPoint"},"sap.suite.ui.microchart.DeltaMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.DeltaMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.DeltaMicroChart"},"sap.suite.ui.microchart.LineMicroChartLine_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.LineMicroChartLine with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.LineMicroChartLine"},"sap.suite.ui.microchart.ColumnMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.ColumnMicroChart"},"sap.suite.ui.microchart.BulletMicroChartData_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.BulletMicroChartData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.BulletMicroChartData"},"sap.suite.ui.microchart.AreaMicroChartViewType":{"!description":"Enum of available views for the area micro chart concerning the position of the labels.","!module":"sap/suite/ui/microchart/library","!category":"static class","Wide":{"!description":"The view with labels on the left and right.","!category":"enum","!type":"String"},"Normal":{"!description":"The view with labels on the top and bottom.","!category":"enum","!type":"String"}},"sap.suite.ui.microchart.ColumnMicroChartData_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChartData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.ColumnMicroChartData"},"sap.suite.ui.microchart.LineMicroChartEmphasizedPoint":{"!description":"Contains the emphasized point of the line micro chart.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.LineMicroChartEmphasizedPoint with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.LineMicroChartPoint.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.LineMicroChartEmphasizedPoint.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new LineMicroChartEmphasizedPoint.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getShow show} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.microchart.LineMicroChartPoint#constructor sap.suite.ui.microchart.LineMicroChartPoint}\ncan be used as well.","setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nDetermines the color of the emphasized point. The property has an effect only if the 'show' property is true. If at least one emphasized point has a color different from Neutral, the graph is grey; otherwise, the graph is blue.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueCSSColor) -> sap.suite.ui.microchart.LineMicroChartEmphasizedPoint","parameters":{"sColor":"type: sap.m.ValueCSSColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/LineMicroChartEmphasizedPoint","!helpDescription":"Contains the emphasized point of the line micro chart.","getShow":{"!description":"Gets current value of property {@link #getShow show}.\n\nDetermines whether the chart point should be displayed or not.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.suite.ui.microchart.LineMicroChartPoint","getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nDetermines the color of the emphasized point. The property has an effect only if the 'show' property is true. If at least one emphasized point has a color different from Neutral, the graph is grey; otherwise, the graph is blue.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueCSSColor"},"!category":"class","setShow":{"!description":"Sets a new value for property {@link #getShow show}.\n\nDetermines whether the chart point should be displayed or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShow: Boolean) -> sap.suite.ui.microchart.LineMicroChartEmphasizedPoint","parameters":{"bShow":"type: boolean, description: New value for property <code>show<\/code>"}}},"sap.suite.ui.microchart.LineMicroChartPoint":{"!description":"Contains the point of the line micro chart.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.LineMicroChartPoint with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.LineMicroChartPoint.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getX":{"!description":"Gets current value of property {@link #getX x}.\n\nThe point's horizontal position.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setY":{"!description":"Sets a new value for property {@link #getY y}.\n\nThe point's vertical position.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fY: Number) -> sap.suite.ui.microchart.LineMicroChartPoint","parameters":{"fY":"type: float, description: New value for property <code>y<\/code>"}},"!constructorDescription":"Constructor for a new LineMicroChartPoint.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getX x} : float (default: 0)<\/li>\n<li>{@link #getY y} : float (default: 0)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getY":{"!description":"Gets current value of property {@link #getY y}.\n\nThe point's vertical position.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setX":{"!description":"Sets a new value for property {@link #getX x}.\n\nThe point's horizontal position.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fX: Number) -> sap.suite.ui.microchart.LineMicroChartPoint","parameters":{"fX":"type: float, description: New value for property <code>x<\/code>"}},"!module":"sap/suite/ui/microchart/LineMicroChartPoint","!helpDescription":"Contains the point of the line micro chart.","!proto":"sap.ui.core.Element","!category":"class"},"sap.suite.ui.microchart.RadialMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.RadialMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.suite.ui.microchart.RadialMicroChart"},"sap.suite.ui.microchart.CommonBackgroundType":{"!description":"Lists the available theme-specific background colors.","ExtraLight":{"!description":"Extra light background color.","!category":"enum","!type":"String"},"MediumLight":{"!description":"Medium light background color.","!category":"enum","!type":"String"},"!module":"sap/suite/ui/microchart/library","Transparent":{"!description":"The transparent background color.","!category":"enum","!type":"String"},"Dark":{"!description":"Dark background color.","!category":"enum","!type":"String"},"Darkest":{"!description":"The darkest background color.","!category":"enum","!type":"String"},"Light":{"!description":"Light background color.","!category":"enum","!type":"String"},"Medium":{"!description":"Medium background color.","!category":"enum","!type":"String"},"ExtraDark":{"!description":"Extra dark background color.","!category":"enum","!type":"String"},"!category":"static class","Lightest":{"!description":"The lightest background color.","!category":"enum","!type":"String"}},"sap.suite.ui.microchart.BulletMicroChart":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"insertThreshold":{"!description":"Inserts a threshold into the aggregation {@link #getThresholds thresholds}.","!static":false,"!category":"function","!type":"fn(oThreshold: sap.suite.ui.microchart.BulletMicroChartData, iIndex: Number) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oThreshold":"type: sap.suite.ui.microchart.BulletMicroChartData, description: The threshold to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the threshold should be inserted at; for a negative value of <code>iIndex<\/code>, the threshold is inserted at position 0; for a value greater than the current size of the aggregation, the threshold is inserted at the last position"}},"setShowTargetValue":{"!description":"Sets a new value for property {@link #getShowTargetValue showTargetValue}.\n\nIf set to true, shows the numeric target value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTargetValue: Boolean) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"bShowTargetValue":"type: boolean, description: New value for property <code>showTargetValue<\/code>"}},"getActualValueLabel":{"!description":"Gets current value of property {@link #getActualValueLabel actualValueLabel}.\n\nIf set, displays a specified label instead of the numeric actual value.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowActualValue":{"!description":"Sets a new value for property {@link #getShowActualValue showActualValue}.\n\nIf set to true, shows the numeric actual value. This property works in Actual mode only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowActualValue: Boolean) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"bShowActualValue":"type: boolean, description: New value for property <code>showActualValue<\/code>"}},"destroyThresholds":{"!description":"Destroys all the thresholds in the aggregation {@link #getThresholds thresholds}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.BulletMicroChart"},"getMode":{"!description":"Gets current value of property {@link #getMode mode}.\n\nThe mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.\n\nDefault value is <code>Actual<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.BulletMicroChartModeType"},"setActualValueLabel":{"!description":"Sets a new value for property {@link #getActualValueLabel actualValueLabel}.\n\nIf set, displays a specified label instead of the numeric actual value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sActualValueLabel: String) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sActualValueLabel":"type: string, description: New value for property <code>actualValueLabel<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.BulletMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.BulletMicroChart<\/code> itself.\n\nThe event is triggered when the chart is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.BulletMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setShowActualValueInDeltaMode":{"!description":"Sets a new value for property {@link #getShowActualValueInDeltaMode showActualValueInDeltaMode}.\n\nIf set to true, shows the numeric actual value and possibly hides the delta value, if showDeltaValue is set to true. This property works in Delta mode only and has priority over showDeltaValue.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowActualValueInDeltaMode: Boolean) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"bShowActualValueInDeltaMode":"type: boolean, description: New value for property <code>showActualValueInDeltaMode<\/code>"}},"!description":"Displays a colored horizontal bar representing a current value on top of a background bar representing the compared value. The vertical bars can represent the numeric values, the scaling factors, the thresholds, and the target values. This control replaces the deprecated sap.suite.ui.commons.BulletChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.BulletMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getTargetValue":{"!description":"Gets current value of property {@link #getTargetValue targetValue}.\n\nThe target value that is displayed as a black vertical bar.","!static":false,"!category":"function","!type":"fn() -> Number"},"getTargetValueLabel":{"!description":"Gets current value of property {@link #getTargetValueLabel targetValueLabel}.\n\nIf set, displays a specified label instead of the numeric target value.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setScale":{"!description":"Sets a new value for property {@link #getScale scale}.\n\nThe scaling suffix that is added to all values.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sScale: String) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sScale":"type: string, description: New value for property <code>scale<\/code>"}},"setForecastValue":{"!description":"Sets a new value for property {@link #getForecastValue forecastValue}.\n\nThe forecast value that is displayed in Actual mode only. If set, the forecast value bar appears in the background of the actual value bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fForecastValue: Number) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"fForecastValue":"type: float, description: New value for property <code>forecastValue<\/code>"}},"getDeltaValueLabel":{"!description":"Gets current value of property {@link #getDeltaValueLabel deltaValueLabel}.\n\nIf set, displays a specified label instead of the calculated numeric delta value.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowThresholds":{"!description":"Sets a new value for property {@link #getShowThresholds showThresholds}.\n\nIf set to true, shows the threshold markers.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowThresholds: Boolean) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"bShowThresholds":"type: boolean, description: New value for property <code>showThresholds<\/code>"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.BulletMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"unbindThresholds":{"!description":"Unbinds aggregation {@link #getThresholds thresholds} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.BulletMicroChart"},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.BulletMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setMaxValue":{"!description":"Sets a new value for property {@link #getMaxValue maxValue}.\n\nThe maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMaxValue: Number) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"fMaxValue":"type: float, description: New value for property <code>maxValue<\/code>"}},"setScaleColor":{"!description":"Sets a new value for property {@link #getScaleColor scaleColor}.\n\nThe background color of the scale. The theming is enabled only for the default value of this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>MediumLight<\/code>.","!static":false,"!category":"function","!type":"fn(sScaleColor: sap.suite.ui.microchart.CommonBackgroundType) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sScaleColor":"type: sap.suite.ui.microchart.CommonBackgroundType, description: New value for property <code>scaleColor<\/code>"}},"!module":"sap/suite/ui/microchart/BulletMicroChart","getScale":{"!description":"Gets current value of property {@link #getScale scale}.\n\nThe scaling suffix that is added to all values.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"Displays a colored horizontal bar representing a current value on top of a background bar representing the compared value. The vertical bars can represent the numeric values, the scaling factors, the thresholds, and the target values. This control replaces the deprecated sap.suite.ui.commons.BulletChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","setTargetValueLabel":{"!description":"Sets a new value for property {@link #getTargetValueLabel targetValueLabel}.\n\nIf set, displays a specified label instead of the numeric target value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTargetValueLabel: String) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sTargetValueLabel":"type: string, description: New value for property <code>targetValueLabel<\/code>"}},"setMinValue":{"!description":"Sets a new value for property {@link #getMinValue minValue}.\n\nThe minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMinValue: Number) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"fMinValue":"type: float, description: New value for property <code>minValue<\/code>"}},"getShowValueMarker":{"!description":"Gets current value of property {@link #getShowValueMarker showValueMarker}.\n\nIf set to true, shows the value marker.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getActual":{"!description":"Gets content of aggregation {@link #getActual actual}.\n\nActual data of the BulletMicroChart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.BulletMicroChartData"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getThresholds":{"!description":"Gets content of aggregation {@link #getThresholds thresholds}.\n\nThreshold data of the BulletMicroChart.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.BulletMicroChartData]"},"getMaxValue":{"!description":"Gets current value of property {@link #getMaxValue maxValue}.\n\nThe maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllThresholds":{"!description":"Removes all the controls from the aggregation {@link #getThresholds thresholds}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.BulletMicroChartData]"},"!proto":"sap.ui.core.Control","getScaleColor":{"!description":"Gets current value of property {@link #getScaleColor scaleColor}.\n\nThe background color of the scale. The theming is enabled only for the default value of this property.\n\nDefault value is <code>MediumLight<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.CommonBackgroundType"},"!category":"class","getShowActualValueInDeltaMode":{"!description":"Gets current value of property {@link #getShowActualValueInDeltaMode showActualValueInDeltaMode}.\n\nIf set to true, shows the numeric actual value and possibly hides the delta value, if showDeltaValue is set to true. This property works in Delta mode only and has priority over showDeltaValue.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getShowThresholds":{"!description":"Gets current value of property {@link #getShowThresholds showThresholds}.\n\nIf set to true, shows the threshold markers.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new BulletMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getMode mode} : sap.suite.ui.microchart.BulletMicroChartModeType (default: Actual)<\/li>\n<li>{@link #getScale scale} : string (default: )<\/li>\n<li>{@link #getForecastValue forecastValue} : float<\/li>\n<li>{@link #getTargetValue targetValue} : float<\/li>\n<li>{@link #getMinValue minValue} : float<\/li>\n<li>{@link #getMaxValue maxValue} : float<\/li>\n<li>{@link #getShowActualValue showActualValue} : boolean (default: true)<\/li>\n<li>{@link #getShowDeltaValue showDeltaValue} : boolean (default: true)<\/li>\n<li>{@link #getShowActualValueInDeltaMode showActualValueInDeltaMode} : boolean (default: false)<\/li>\n<li>{@link #getShowTargetValue showTargetValue} : boolean (default: true)<\/li>\n<li>{@link #getShowValueMarker showValueMarker} : boolean (default: false)<\/li>\n<li>{@link #getShowThresholds showThresholds} : boolean (default: true)<\/li>\n<li>{@link #getActualValueLabel actualValueLabel} : string (default: )<\/li>\n<li>{@link #getDeltaValueLabel deltaValueLabel} : string (default: )<\/li>\n<li>{@link #getTargetValueLabel targetValueLabel} : string (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getScaleColor scaleColor} : sap.suite.ui.microchart.CommonBackgroundType (default: MediumLight)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getActual actual} : sap.suite.ui.microchart.BulletMicroChartData (default)<\/li>\n<li>{@link #getThresholds thresholds} : sap.suite.ui.microchart.BulletMicroChartData[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 undefined<br>Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowActualValue":{"!description":"Gets current value of property {@link #getShowActualValue showActualValue}.\n\nIf set to true, shows the numeric actual value. This property works in Actual mode only.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindActual":{"!description":"Binds aggregation {@link #getActual actual} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getShowDeltaValue":{"!description":"Gets current value of property {@link #getShowDeltaValue showDeltaValue}.\n\nIf set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"destroyActual":{"!description":"Destroys the actual in the aggregation {@link #getActual actual}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.BulletMicroChart"},"addThreshold":{"!description":"Adds some threshold to the aggregation {@link #getThresholds thresholds}.","!static":false,"!category":"function","!type":"fn(oThreshold: sap.suite.ui.microchart.BulletMicroChartData) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oThreshold":"type: sap.suite.ui.microchart.BulletMicroChartData, description: The threshold to add; if empty, nothing is inserted"}},"setMode":{"!description":"Sets a new value for property {@link #getMode mode}.\n\nThe mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Actual<\/code>.","!static":false,"!category":"function","!type":"fn(sMode: sap.suite.ui.microchart.BulletMicroChartModeType) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sMode":"type: sap.suite.ui.microchart.BulletMicroChartModeType, description: New value for property <code>mode<\/code>"}},"setIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 undefined<br>Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"setTargetValue":{"!description":"Sets a new value for property {@link #getTargetValue targetValue}.\n\nThe target value that is displayed as a black vertical bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fTargetValue: Number) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"fTargetValue":"type: float, description: New value for property <code>targetValue<\/code>"}},"setActual":{"!description":"Sets the aggregated {@link #getActual actual}.","!static":false,"!category":"function","!type":"fn(oActual: sap.suite.ui.microchart.BulletMicroChartData) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oActual":"type: sap.suite.ui.microchart.BulletMicroChartData, description: The actual to set"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"unbindActual":{"!description":"Unbinds aggregation {@link #getActual actual} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.BulletMicroChart"},"setShowValueMarker":{"!description":"Sets a new value for property {@link #getShowValueMarker showValueMarker}.\n\nIf set to true, shows the value marker.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowValueMarker: Boolean) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"bShowValueMarker":"type: boolean, description: New value for property <code>showValueMarker<\/code>"}},"getMinValue":{"!description":"Gets current value of property {@link #getMinValue minValue}.\n\nThe minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.","!static":false,"!category":"function","!type":"fn() -> Number"},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"bindThresholds":{"!description":"Binds aggregation {@link #getThresholds thresholds} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeThreshold":{"!description":"Removes a threshold from the aggregation {@link #getThresholds thresholds}.","!static":false,"!category":"function","!type":"fn(vThreshold: Number | String | sap.suite.ui.microchart.BulletMicroChartData) -> sap.suite.ui.microchart.BulletMicroChartData","parameters":{"vThreshold":"type: int|string|sap.suite.ui.microchart.BulletMicroChartData, description: The threshold to remove or its index or id"}},"setDeltaValueLabel":{"!description":"Sets a new value for property {@link #getDeltaValueLabel deltaValueLabel}.\n\nIf set, displays a specified label instead of the calculated numeric delta value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sDeltaValueLabel: String) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"sDeltaValueLabel":"type: string, description: New value for property <code>deltaValueLabel<\/code>"}},"setShowDeltaValue":{"!description":"Sets a new value for property {@link #getShowDeltaValue showDeltaValue}.\n\nIf set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDeltaValue: Boolean) -> sap.suite.ui.microchart.BulletMicroChart","parameters":{"bShowDeltaValue":"type: boolean, description: New value for property <code>showDeltaValue<\/code>"}},"getForecastValue":{"!description":"Gets current value of property {@link #getForecastValue forecastValue}.\n\nThe forecast value that is displayed in Actual mode only. If set, the forecast value bar appears in the background of the actual value bar.","!static":false,"!category":"function","!type":"fn() -> Number"},"indexOfThreshold":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.BulletMicroChartData<\/code> in the aggregation {@link #getThresholds thresholds}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oThreshold: sap.suite.ui.microchart.BulletMicroChartData) -> Number","parameters":{"oThreshold":"type: sap.suite.ui.microchart.BulletMicroChartData, description: The threshold whose index is looked for"}},"getShowTargetValue":{"!description":"Gets current value of property {@link #getShowTargetValue showTargetValue}.\n\nIf set to true, shows the numeric target value.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.suite.ui.microchart.HarveyBallMicroChart":{"setTotal":{"!description":"Sets a new value for property {@link #getTotal total}.\n\nThe total value. The total value is represented by a full circle, or 360 degrees value on the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fTotal: Number) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"fTotal":"type: float, description: New value for property <code>total<\/code>"}},"setTotalScale":{"!description":"Sets a new value for property {@link #getTotalScale totalScale}.\n\nThe scaling factor that is displayed next to the total value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTotalScale: String) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"sTotalScale":"type: string, description: New value for property <code>totalScale<\/code>"}},"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.suite.ui.microchart.HarveyBallMicroChartItem) -> sap.suite.ui.microchart.HarveyBallMicroChartItem","parameters":{"vItem":"type: int|string|sap.suite.ui.microchart.HarveyBallMicroChartItem, description: The item to remove or its index or id"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.HarveyBallMicroChart"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getShowTotal":{"!description":"Gets current value of property {@link #getShowTotal showTotal}.\n\nIf set to <code>true<\/code>, the total value is displayed next to the chart. The default setting is <code>true<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowFractions":{"!description":"Gets current value of property {@link #getShowFractions showFractions}.\n\nIf set to <code>true<\/code>, the fraction values are displayed next to the chart. The default setting is <code>true<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.suite.ui.microchart.HarveyBallMicroChartItem) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"oItem":"type: sap.suite.ui.microchart.HarveyBallMicroChartItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nThe set of items. Currently only a single item is supported.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.HarveyBallMicroChartItem]"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new HarveyBallMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTotal total} : float<\/li>\n<li>{@link #getTotalLabel totalLabel} : string<\/li>\n<li>{@link #getTotalScale totalScale} : string<\/li>\n<li>{@link #getFormattedLabel formattedLabel} : boolean (default: false)<\/li>\n<li>{@link #getShowTotal showTotal} : boolean (default: true)<\/li>\n<li>{@link #getShowFractions showFractions} : boolean (default: true)<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getColorPalette colorPalette} : string[] (default: [])<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getAlignContent alignContent} : sap.suite.ui.microchart.HorizontalAlignmentType (default: Left)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.suite.ui.microchart.HarveyBallMicroChartItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nThe size of the chart. If not set, the default size is applied based on the device type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.62.0 undefined<br>Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf set to <code>true<\/code>, the width and height of the control are determined by the width and height of the parent container, in which case the <code>size<\/code> and <code>width<\/code> properties are ignored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfItem":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.HarveyBallMicroChartItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.suite.ui.microchart.HarveyBallMicroChartItem) -> Number","parameters":{"oItem":"type: sap.suite.ui.microchart.HarveyBallMicroChartItem, description: The item whose index is looked for"}},"setTotalLabel":{"!description":"Sets a new value for property {@link #getTotalLabel totalLabel}.\n\nThe total label. If specified, it is displayed instead of the total value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTotalLabel: String) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"sTotalLabel":"type: string, description: New value for property <code>totalLabel<\/code>"}},"getTotalScale":{"!description":"Gets current value of property {@link #getTotalScale totalScale}.\n\nThe scaling factor that is displayed next to the total value.","!static":false,"!category":"function","!type":"fn() -> String"},"bindItems":{"!description":"Binds aggregation {@link #getItems items} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getColorPalette":{"!description":"Gets current value of property {@link #getColorPalette colorPalette}.\n\nThe color palette for the chart. Currently only a single color (first color in the array) is supported. <br>If this property is defined, the semantic color defined in the {@link sap.suite.ui.microchart.HarveyBallMicroChartItem} is ignored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.HarveyBallMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.HarveyBallMicroChart<\/code> itself.\n\nThis event is fired when the chart is clicked or tapped.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.HarveyBallMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"A radial chart that displays a value compared to its total. <br>Unlike a pie chart, which shows multiple values or sectors, a Harvey Ball microchart shows only one value from a total. <br>The sector that represents a value being compared to a total is defined by {@link sap.suite.ui.microchart.HarveyBallMicroChartItem}. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.HarveyBallMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"unbindItems":{"!description":"Unbinds aggregation {@link #getItems items} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.HarveyBallMicroChart"},"getTotalLabel":{"!description":"Gets current value of property {@link #getTotalLabel totalLabel}.\n\nThe total label. If specified, it is displayed instead of the total value.","!static":false,"!category":"function","!type":"fn() -> String"},"setAlignContent":{"!description":"Sets a new value for property {@link #getAlignContent alignContent}.\n\nThe alignment of the content. If not set, the <code>Left<\/code> alignment type is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Left<\/code>.","!static":false,"!category":"function","!type":"fn(sAlignContent: sap.suite.ui.microchart.HorizontalAlignmentType) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"sAlignContent":"type: sap.suite.ui.microchart.HorizontalAlignmentType, description: New value for property <code>alignContent<\/code>"}},"setIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.62.0 undefined<br>Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf set to <code>true<\/code>, the width and height of the control are determined by the width and height of the parent container, in which case the <code>size<\/code> and <code>width<\/code> properties are ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.HarveyBallMicroChartItem]"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.HarveyBallMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.HarveyBallMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nThe size of the chart. If not set, the default size is applied based on the device type.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"!module":"sap/suite/ui/microchart/HarveyBallMicroChart","setShowFractions":{"!description":"Sets a new value for property {@link #getShowFractions showFractions}.\n\nIf set to <code>true<\/code>, the fraction values are displayed next to the chart. The default setting is <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFractions: Boolean) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"bShowFractions":"type: boolean, description: New value for property <code>showFractions<\/code>"}},"setShowTotal":{"!description":"Sets a new value for property {@link #getShowTotal showTotal}.\n\nIf set to <code>true<\/code>, the total value is displayed next to the chart. The default setting is <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTotal: Boolean) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"bShowTotal":"type: boolean, description: New value for property <code>showTotal<\/code>"}},"!helpDescription":"A radial chart that displays a value compared to its total. <br>Unlike a pie chart, which shows multiple values or sectors, a Harvey Ball microchart shows only one value from a total. <br>The sector that represents a value being compared to a total is defined by {@link sap.suite.ui.microchart.HarveyBallMicroChartItem}. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","setFormattedLabel":{"!description":"Sets a new value for property {@link #getFormattedLabel formattedLabel}.\n\nIf set to <code>true<\/code>, the <code>totalLabel<\/code> property is used instead of the combination of the total value and its scaling factor. <br>The default value is <code>false<\/code>, which means that the total value, defined by the <code>total<\/code> property, and the scaling factor, defined by the <code>totalScale<\/code> property, are displayed separately.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFormattedLabel: Boolean) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"bFormattedLabel":"type: boolean, description: New value for property <code>formattedLabel<\/code>"}},"getFormattedLabel":{"!description":"Gets current value of property {@link #getFormattedLabel formattedLabel}.\n\nIf set to <code>true<\/code>, the <code>totalLabel<\/code> property is used instead of the combination of the total value and its scaling factor. <br>The default value is <code>false<\/code>, which means that the total value, defined by the <code>total<\/code> property, and the scaling factor, defined by the <code>totalScale<\/code> property, are displayed separately.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTotal":{"!description":"Gets current value of property {@link #getTotal total}.\n\nThe total value. The total value is represented by a full circle, or 360 degrees value on the chart.","!static":false,"!category":"function","!type":"fn() -> Number"},"setColorPalette":{"!description":"Sets a new value for property {@link #getColorPalette colorPalette}.\n\nThe color palette for the chart. Currently only a single color (first color in the array) is supported. <br>If this property is defined, the semantic color defined in the {@link sap.suite.ui.microchart.HarveyBallMicroChartItem} is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sColorPalette: [String]) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"sColorPalette":"type: string[], description: New value for property <code>colorPalette<\/code>"}},"getAlignContent":{"!description":"Gets current value of property {@link #getAlignContent alignContent}.\n\nThe alignment of the content. If not set, the <code>Left<\/code> alignment type is used.\n\nDefault value is <code>Left<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.HorizontalAlignmentType"},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.suite.ui.microchart.HarveyBallMicroChartItem, iIndex: Number) -> sap.suite.ui.microchart.HarveyBallMicroChart","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.suite.ui.microchart.HarveyBallMicroChartItem, description: The item to insert; if empty, nothing is inserted"}}},"sap.suite.ui.microchart.AreaMicroChartLabel_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChartLabel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.AreaMicroChartLabel"},"sap.suite.ui":{"microchart":"sap.suite.ui.microchart","!category":"namespace"},"sap.suite.ui.microchart.StackedBarMicroChartBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.StackedBarMicroChartBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.StackedBarMicroChartBar"},"sap.suite.ui.microchart.StackedBarMicroChart":{"removeBar":{"!description":"Removes a bar from the aggregation {@link #getBars bars}.","!static":false,"!category":"function","!type":"fn(vBar: Number | String | sap.suite.ui.microchart.StackedBarMicroChartBar) -> sap.suite.ui.microchart.StackedBarMicroChartBar","parameters":{"vBar":"type: int|string|sap.suite.ui.microchart.StackedBarMicroChartBar, description: The bar to remove or its index or id"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getMaxValue":{"!description":"Gets current value of property {@link #getMaxValue maxValue}.\n\nThe maximum value can be set to scale StackedBarMicroChartBar values to the same base. If maxValue is smaller than the sum of all StackedMicroChartBar values, the maxValue is ignored. All values are shown as percentage values (same behavior as maxValue is not used). If maxValue is equal or bigger than the sum of all StackedMicroChartBars, all values are scaled to the value of maxValue and the percentage mode is turned off. Absolute values are shown instead. The difference between the sum and maxValue is shown as invisible bar, thus e.g. different StackedBarMicroChart instances can be compared.","!static":false,"!category":"function","!type":"fn() -> Number"},"setPrecision":{"!description":"Sets a new value for property {@link #getPrecision precision}.\n\nThe precision of the rounding for the calculated percentage values of the bars. It defines how many digits after the decimal point are displayed. The default is set to 1 digit.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iPrecision: Number) -> sap.suite.ui.microchart.StackedBarMicroChart","parameters":{"iPrecision":"type: int, description: New value for property <code>precision<\/code>"}},"addBar":{"!description":"Adds some bar to the aggregation {@link #getBars bars}.","!static":false,"!category":"function","!type":"fn(oBar: sap.suite.ui.microchart.StackedBarMicroChartBar) -> sap.suite.ui.microchart.StackedBarMicroChart","parameters":{"oBar":"type: sap.suite.ui.microchart.StackedBarMicroChartBar, description: The bar to add; if empty, nothing is inserted"}},"removeAllBars":{"!description":"Removes all the controls from the aggregation {@link #getBars bars}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.StackedBarMicroChartBar]"},"!proto":"sap.ui.core.Control","!category":"class","getBars":{"!description":"Gets content of aggregation {@link #getBars bars}.\n\nThe stacked bar chart items.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.StackedBarMicroChartBar]"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"insertBar":{"!description":"Inserts a bar into the aggregation {@link #getBars bars}.","!static":false,"!category":"function","!type":"fn(oBar: sap.suite.ui.microchart.StackedBarMicroChartBar, iIndex: Number) -> sap.suite.ui.microchart.StackedBarMicroChart","parameters":{"oBar":"type: sap.suite.ui.microchart.StackedBarMicroChartBar, description: The bar to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the bar should be inserted at; for a negative value of <code>iIndex<\/code>, the bar is inserted at position 0; for a value greater than the current size of the aggregation, the bar is inserted at the last position"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new StackedBarMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getMaxValue maxValue} : float<\/li>\n<li>{@link #getPrecision precision} : int (default: 1)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getShowLabels showLabels} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBars bars} : sap.suite.ui.microchart.StackedBarMicroChartBar[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.microchart.StackedBarMicroChart","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"setShowLabels":{"!description":"Sets a new value for property {@link #getShowLabels showLabels}.\n\nDefines whether the bar labels should be rendered. If set to <code>true<\/code>, the labels that were specified for each bar become visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLabels: Boolean) -> sap.suite.ui.microchart.StackedBarMicroChart","parameters":{"bShowLabels":"type: boolean, description: New value for property <code>showLabels<\/code>"}},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nThe size of the chart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the stacked bar micro chart is included.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.StackedBarMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"destroyBars":{"!description":"Destroys all the bars in the aggregation {@link #getBars bars}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.StackedBarMicroChart"},"unbindBars":{"!description":"Unbinds aggregation {@link #getBars bars} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.StackedBarMicroChart"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.StackedBarMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.StackedBarMicroChart<\/code> itself.\n\nThe event is fired when the user chooses the microchart.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.StackedBarMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.StackedBarMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Illustrates values as stacked and colored bar charts displaying numeric values (as absolute values or percentages) inside the bars. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.StackedBarMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"bindBars":{"!description":"Binds aggregation {@link #getBars bars} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.StackedBarMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"indexOfBar":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.StackedBarMicroChartBar<\/code> in the aggregation {@link #getBars bars}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oBar: sap.suite.ui.microchart.StackedBarMicroChartBar) -> Number","parameters":{"oBar":"type: sap.suite.ui.microchart.StackedBarMicroChartBar, description: The bar whose index is looked for"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.StackedBarMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.StackedBarMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getPrecision":{"!description":"Gets current value of property {@link #getPrecision precision}.\n\nThe precision of the rounding for the calculated percentage values of the bars. It defines how many digits after the decimal point are displayed. The default is set to 1 digit.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.StackedBarMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.StackedBarMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.StackedBarMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.StackedBarMicroChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setMaxValue":{"!description":"Sets a new value for property {@link #getMaxValue maxValue}.\n\nThe maximum value can be set to scale StackedBarMicroChartBar values to the same base. If maxValue is smaller than the sum of all StackedMicroChartBar values, the maxValue is ignored. All values are shown as percentage values (same behavior as maxValue is not used). If maxValue is equal or bigger than the sum of all StackedMicroChartBars, all values are scaled to the value of maxValue and the percentage mode is turned off. Absolute values are shown instead. The difference between the sum and maxValue is shown as invisible bar, thus e.g. different StackedBarMicroChart instances can be compared.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMaxValue: Number) -> sap.suite.ui.microchart.StackedBarMicroChart","parameters":{"fMaxValue":"type: float, description: New value for property <code>maxValue<\/code>"}},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nThe size of the chart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the stacked bar micro chart is included.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"!module":"sap/suite/ui/microchart/StackedBarMicroChart","!helpDescription":"Illustrates values as stacked and colored bar charts displaying numeric values (as absolute values or percentages) inside the bars. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","getShowLabels":{"!description":"Gets current value of property {@link #getShowLabels showLabels}.\n\nDefines whether the bar labels should be rendered. If set to <code>true<\/code>, the labels that were specified for each bar become visible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.suite.ui.microchart.ComparisonMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ComparisonMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.ComparisonMicroChart"},"sap.suite.ui.microchart.InteractiveLineChart":{"fireSelectionChanged":{"!description":"Fires event {@link #event:selectionChanged selectionChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getSelectedPoints":{"!description":"Retrieves the selected point elements from the points aggregation and returns them.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.InteractiveLineChartPoint]"},"removePoint":{"!description":"Removes a point from the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn(vPoint: Number | String | sap.suite.ui.microchart.InteractiveLineChartPoint) -> sap.suite.ui.microchart.InteractiveLineChartPoint","parameters":{"vPoint":"type: int|string|sap.suite.ui.microchart.InteractiveLineChartPoint, description: The point to remove or its index or id"}},"!proto":"sap.ui.core.Control","!category":"class","getDisplayedPoints":{"!description":"Gets current value of property {@link #getDisplayedPoints displayedPoints}.\n\nThe maximum number of points to be displayed on the chart.\n\nDefault value is <code>6<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setSelectionEnabled":{"!description":"Sets a new value for property {@link #getSelectionEnabled selectionEnabled}.\n\nIf this property is set to true, one or multiple points are selectable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSelectionEnabled: Boolean) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"bSelectionEnabled":"type: boolean, description: New value for property <code>selectionEnabled<\/code>"}},"getSelectionEnabled":{"!description":"Gets current value of property {@link #getSelectionEnabled selectionEnabled}.\n\nIf this property is set to true, one or multiple points are selectable.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachSelectionChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChanged selectionChanged} event of this <code>sap.suite.ui.microchart.InteractiveLineChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new InteractiveLineChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayedPoints displayedPoints} : int (default: 6)<\/li>\n<li>{@link #getPrecedingPoint precedingPoint} : float (default: 0)<\/li>\n<li>{@link #getSucceedingPoint succeedingPoint} : float (default: 0)<\/li>\n<li>{@link #getSelectionEnabled selectionEnabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPoints points} : sap.suite.ui.microchart.InteractiveLineChartPoint[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChanged selectionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"indexOfPoint":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.InteractiveLineChartPoint<\/code> in the aggregation {@link #getPoints points}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.InteractiveLineChartPoint) -> Number","parameters":{"oPoint":"type: sap.suite.ui.microchart.InteractiveLineChartPoint, description: The point whose index is looked for"}},"insertPoint":{"!description":"Inserts a point into the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.InteractiveLineChartPoint, iIndex: Number) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"oPoint":"type: sap.suite.ui.microchart.InteractiveLineChartPoint, description: The point to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the point should be inserted at; for a negative value of <code>iIndex<\/code>, the point is inserted at position 0; for a value greater than the current size of the aggregation, the point is inserted at the last position"}},"setSucceedingPoint":{"!description":"Sets a new value for property {@link #getSucceedingPoint succeedingPoint}.\n\nAbstract invisible point outside of the chart that ensures that the graph flows smoothly out of the visible part of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fSucceedingPoint: Number) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"fSucceedingPoint":"type: float, description: New value for property <code>succeedingPoint<\/code>"}},"getPoints":{"!description":"Gets content of aggregation {@link #getPoints points}.\n\nPoints displayed in the chart.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.InteractiveLineChartPoint]"},"setDisplayedPoints":{"!description":"Sets a new value for property {@link #getDisplayedPoints displayedPoints}.\n\nThe maximum number of points to be displayed on the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>6<\/code>.","!static":false,"!category":"function","!type":"fn(iDisplayedPoints: Number) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"iDisplayedPoints":"type: int, description: New value for property <code>displayedPoints<\/code>"}},"setPrecedingPoint":{"!description":"Sets a new value for property {@link #getPrecedingPoint precedingPoint}.\n\nAbstract invisible point outside of the chart that ensures that the graph flows smoothly into the visible part of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fPrecedingPoint: Number) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"fPrecedingPoint":"type: float, description: New value for property <code>precedingPoint<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.InteractiveLineChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.InteractiveLineChart<\/code> itself.\n\nThe event is fired only in non-interactive mode when the user presses the chart; in this mode, the points and surrounding areas are not selectable. Non-interactive mode is decided upon internally, depending on the size of the areas surrounding the points.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.InteractiveLineChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getPrecedingPoint":{"!description":"Gets current value of property {@link #getPrecedingPoint precedingPoint}.\n\nAbstract invisible point outside of the chart that ensures that the graph flows smoothly into the visible part of the chart.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getSucceedingPoint":{"!description":"Gets current value of property {@link #getSucceedingPoint succeedingPoint}.\n\nAbstract invisible point outside of the chart that ensures that the graph flows smoothly out of the visible part of the chart.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!description":"The InteractiveLineChart control belongs to a chart control group in the MicroChart library having a number of interactive features.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.InteractiveLineChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachSelectionChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChanged selectionChanged} event of this <code>sap.suite.ui.microchart.InteractiveLineChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.InteractiveLineChart<\/code> itself.\n\nEvent is fired when a user has selected or deselected a point.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.InteractiveLineChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setSelectedPoints":{"!description":"Already selected points will be deselected and members of the selectedPoints attribute which are part of the points aggregation will be set to selected state.","!static":false,"!category":"function","!type":"fn(selectedPoints: [sap.suite.ui.microchart.InteractiveLineChartPoint | sap.suite.ui.microchart.InteractiveLineChartPoint]) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"selectedPoints":"type: sap.suite.ui.microchart.InteractiveLineChartPoint|sap.suite.ui.microchart.InteractiveLineChartPoint[], description: A point element or an array of points for which the status should be set to selected."}},"addPoint":{"!description":"Adds some point to the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn(oPoint: sap.suite.ui.microchart.InteractiveLineChartPoint) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"oPoint":"type: sap.suite.ui.microchart.InteractiveLineChartPoint, description: The point to add; if empty, nothing is inserted"}},"bindPoints":{"!description":"Binds aggregation {@link #getPoints points} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.InteractiveLineChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.InteractiveLineChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.InteractiveLineChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!module":"sap/suite/ui/microchart/InteractiveLineChart","!helpDescription":"The InteractiveLineChart control belongs to a chart control group in the MicroChart library having a number of interactive features.","destroyPoints":{"!description":"Destroys all the points in the aggregation {@link #getPoints points}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.InteractiveLineChart"},"removeAllPoints":{"!description":"Removes all the controls from the aggregation {@link #getPoints points}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.InteractiveLineChartPoint]"},"unbindPoints":{"!description":"Unbinds aggregation {@link #getPoints points} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.InteractiveLineChart"}},"sap":{"suite":"sap.suite","sap":"sap","!category":"namespace"},"sap.suite.ui.microchart.LineType":{"!description":"Type of the microchart line.","!module":"sap/suite/ui/microchart/library","Dotted":{"!description":"Dotted line.","!category":"enum","!type":"String"},"Dashed":{"!description":"Dashed line.","!category":"enum","!type":"String"},"!category":"static class","Solid":{"!description":"Solid line.","!category":"enum","!type":"String"}},"sap.suite.ui.microchart.ComparisonMicroChartData_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ComparisonMicroChartData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.ComparisonMicroChartData"},"sap.suite.ui.microchart.InteractiveBarChart":{"removeBar":{"!description":"Removes a bar from the aggregation {@link #getBars bars}.","!static":false,"!category":"function","!type":"fn(vBar: Number | String | sap.suite.ui.microchart.InteractiveBarChartBar) -> sap.suite.ui.microchart.InteractiveBarChartBar","parameters":{"vBar":"type: int|string|sap.suite.ui.microchart.InteractiveBarChartBar, description: The bar to remove or its index or id"}},"fireSelectionChanged":{"!description":"Fires event {@link #event:selectionChanged selectionChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"addBar":{"!description":"Adds some bar to the aggregation {@link #getBars bars}.","!static":false,"!category":"function","!type":"fn(oBar: sap.suite.ui.microchart.InteractiveBarChartBar) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"oBar":"type: sap.suite.ui.microchart.InteractiveBarChartBar, description: The bar to add; if empty, nothing is inserted"}},"removeAllBars":{"!description":"Removes all the controls from the aggregation {@link #getBars bars}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.InteractiveBarChartBar]"},"!proto":"sap.ui.core.Control","!category":"class","getBars":{"!description":"Gets content of aggregation {@link #getBars bars}.\n\nBars displayed on the chart.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.InteractiveBarChartBar]"},"getDisplayedBars":{"!description":"Gets current value of property {@link #getDisplayedBars displayedBars}.\n\nThe number of displayed bars.\n\nDefault value is <code>3<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"insertBar":{"!description":"Inserts a bar into the aggregation {@link #getBars bars}.","!static":false,"!category":"function","!type":"fn(oBar: sap.suite.ui.microchart.InteractiveBarChartBar, iIndex: Number) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"oBar":"type: sap.suite.ui.microchart.InteractiveBarChartBar, description: The bar to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the bar should be inserted at; for a negative value of <code>iIndex<\/code>, the bar is inserted at position 0; for a value greater than the current size of the aggregation, the bar is inserted at the last position"}},"setSelectionEnabled":{"!description":"Sets a new value for property {@link #getSelectionEnabled selectionEnabled}.\n\nEnables the selection in the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSelectionEnabled: Boolean) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"bSelectionEnabled":"type: boolean, description: New value for property <code>selectionEnabled<\/code>"}},"getSelectionEnabled":{"!description":"Gets current value of property {@link #getSelectionEnabled selectionEnabled}.\n\nEnables the selection in the chart.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLabelWidth":{"!description":"Gets current value of property {@link #getLabelWidth labelWidth}.\n\nWidth of the labels column in the resulting layout (in percentage). Possible range of values from 0 to 100. A value of 40 results in the labels column taking up 40% of available space.\n\nDefault value is <code>40%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Percentage"},"detachSelectionChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChanged selectionChanged} event of this <code>sap.suite.ui.microchart.InteractiveBarChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setMin":{"!description":"Sets a new value for property {@link #getMin min}.\n\nBegin of displayed scale.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMin: Number) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"fMin":"type: float, description: New value for property <code>min<\/code>"}},"!constructorDescription":"Constructor for a new InteractiveBarChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayedBars displayedBars} : int (default: 3)<\/li>\n<li>{@link #getLabelWidth labelWidth} : sap.ui.core.Percentage (default: 40%)<\/li>\n<li>{@link #getSelectionEnabled selectionEnabled} : boolean (default: true)<\/li>\n<li>{@link #getMin min} : float<\/li>\n<li>{@link #getMax max} : float<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBars bars} : sap.suite.ui.microchart.InteractiveBarChartBar[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChanged selectionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"destroyBars":{"!description":"Destroys all the bars in the aggregation {@link #getBars bars}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.InteractiveBarChart"},"getMin":{"!description":"Gets current value of property {@link #getMin min}.\n\nBegin of displayed scale.","!static":false,"!category":"function","!type":"fn() -> Number"},"unbindBars":{"!description":"Unbinds aggregation {@link #getBars bars} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.InteractiveBarChart"},"setSelectedBars":{"!description":"Already selected bars will be deselected and members of the selectedBars parameter which are part of the bars aggregation will be set to selected state.","!static":false,"!category":"function","!type":"fn(selectedBars: [sap.suite.ui.microchart.InteractiveBarChartBar | sap.suite.ui.microchart.InteractiveBarChartBar]) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"selectedBars":"type: sap.suite.ui.microchart.InteractiveBarChartBar|sap.suite.ui.microchart.InteractiveBarChartBar[], description: A bar element or an array of bars for which the status should be set to selected."}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.InteractiveBarChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.InteractiveBarChart<\/code> itself.\n\nThe event is fired when the user presses the chart while its bars are not selectable in non-interactive mode. This is decided internally, depending on the size of the bars.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.InteractiveBarChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"The InteractiveBarChart control belongs to a chart control group in the MicroChart library with a number of interactive features. These interactive features provide more information on a chart value. For example, by selecting a bar you can get more details on the displayed value.","setMax":{"!description":"Sets a new value for property {@link #getMax max}.\n\nEnd of displayed scale.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMax: Number) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"fMax":"type: float, description: New value for property <code>max<\/code>"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.InteractiveBarChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachSelectionChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChanged selectionChanged} event of this <code>sap.suite.ui.microchart.InteractiveBarChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.InteractiveBarChart<\/code> itself.\n\nEvent is fired when user has selected or deselected a bar.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.InteractiveBarChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setDisplayedBars":{"!description":"Sets a new value for property {@link #getDisplayedBars displayedBars}.\n\nThe number of displayed bars.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>3<\/code>.","!static":false,"!category":"function","!type":"fn(iDisplayedBars: Number) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"iDisplayedBars":"type: int, description: New value for property <code>displayedBars<\/code>"}},"getMax":{"!description":"Gets current value of property {@link #getMax max}.\n\nEnd of displayed scale.","!static":false,"!category":"function","!type":"fn() -> Number"},"getSelectedBars":{"!description":"Gets all selected bars.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.InteractiveBarChartBar]"},"setLabelWidth":{"!description":"Sets a new value for property {@link #getLabelWidth labelWidth}.\n\nWidth of the labels column in the resulting layout (in percentage). Possible range of values from 0 to 100. A value of 40 results in the labels column taking up 40% of available space.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>40%<\/code>.","!static":false,"!category":"function","!type":"fn(sLabelWidth: sap.ui.core.Percentage) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"sLabelWidth":"type: sap.ui.core.Percentage, description: New value for property <code>labelWidth<\/code>"}},"bindBars":{"!description":"Binds aggregation {@link #getBars bars} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"indexOfBar":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.InteractiveBarChartBar<\/code> in the aggregation {@link #getBars bars}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oBar: sap.suite.ui.microchart.InteractiveBarChartBar) -> Number","parameters":{"oBar":"type: sap.suite.ui.microchart.InteractiveBarChartBar, description: The bar whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.InteractiveBarChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.InteractiveBarChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.InteractiveBarChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!module":"sap/suite/ui/microchart/InteractiveBarChart","!helpDescription":"The InteractiveBarChart control belongs to a chart control group in the MicroChart library with a number of interactive features. These interactive features provide more information on a chart value. For example, by selecting a bar you can get more details on the displayed value."},"sap.suite.ui.microchart.HorizontalAlignmentType":{"!description":"Alignment type for the microchart content.","Center":{"!description":"Center alignment.","!category":"enum","!type":"String"},"Left":{"!description":"Left alignment.","!category":"enum","!type":"String"},"!module":"sap/suite/ui/microchart/library","Right":{"!description":"Right alignment.","!category":"enum","!type":"String"},"!category":"static class"},"sap.suite.ui.microchart.StackedBarMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.StackedBarMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.StackedBarMicroChart"},"sap.suite.ui.microchart.BulletMicroChartData":{"!description":"Contains the thresholds data.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.BulletMicroChartData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe actual value.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.BulletMicroChartData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new BulletMicroChartData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nThe semantic color of the actual value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueColor) -> sap.suite.ui.microchart.BulletMicroChartData","parameters":{"sColor":"type: sap.m.ValueColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/BulletMicroChartData","!helpDescription":"Contains the thresholds data.","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe actual value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fValue: Number) -> sap.suite.ui.microchart.BulletMicroChartData","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}},"!proto":"sap.ui.core.Element","getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nThe semantic color of the actual value.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"!category":"class"},"sap.suite.ui.microchart.ColumnMicroChartLabel":{"!description":"Displays or hides the labels of a column micro chart.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.ColumnMicroChartLabel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.ColumnMicroChartLabel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ColumnMicroChartLabel control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getLabel label} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nThe line title.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nThe graphic element color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sColor: sap.m.ValueCSSColor) -> sap.suite.ui.microchart.ColumnMicroChartLabel","parameters":{"sColor":"type: sap.m.ValueCSSColor, description: New value for property <code>color<\/code>"}},"!module":"sap/suite/ui/microchart/ColumnMicroChartLabel","!helpDescription":"Displays or hides the labels of a column micro chart.","!proto":"sap.ui.core.Element","getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nThe graphic element color.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueCSSColor"},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nThe line title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.suite.ui.microchart.ColumnMicroChartLabel","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"!category":"class"},"sap.suite.ui.microchart.LineMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.LineMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.LineMicroChart"},"sap.suite.ui.microchart.AreaMicroChart":{"destroyLastXLabel":{"!description":"Destroys the lastXLabel in the aggregation {@link #getLastXLabel lastXLabel}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getMinLabel":{"!description":"Gets content of aggregation {@link #getMinLabel minLabel}.\n\nThe label for the minimum point of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartLabel"},"destroyInnerMinThreshold":{"!description":"Destroys the innerMinThreshold in the aggregation {@link #getInnerMinThreshold innerMinThreshold}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"setInnerMaxThreshold":{"!description":"Sets the aggregated {@link #getInnerMaxThreshold innerMaxThreshold}.","!static":false,"!category":"function","!type":"fn(oInnerMaxThreshold: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oInnerMaxThreshold":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The innerMaxThreshold to set"}},"destroyInnerMaxThreshold":{"!description":"Destroys the innerMaxThreshold in the aggregation {@link #getInnerMaxThreshold innerMaxThreshold}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"getLines":{"!description":"Gets content of aggregation {@link #getLines lines}.\n\nThe set of lines.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.AreaMicroChartItem]"},"setInnerMinThreshold":{"!description":"Sets the aggregated {@link #getInnerMinThreshold innerMinThreshold}.","!static":false,"!category":"function","!type":"fn(oInnerMinThreshold: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oInnerMinThreshold":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The innerMinThreshold to set"}},"destroyMinLabel":{"!description":"Destroys the minLabel in the aggregation {@link #getMinLabel minLabel}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"setShowLabel":{"!description":"Sets a new value for property {@link #getShowLabel showLabel}.\n\nDetermines if the labels are displayed or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLabel: Boolean) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"bShowLabel":"type: boolean, description: New value for property <code>showLabel<\/code>"}},"destroyChart":{"!description":"Destroys the chart in the aggregation {@link #getChart chart}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"getTarget":{"!description":"Gets content of aggregation {@link #getTarget target}.\n\nThe configuration of the target values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"getMinYValue":{"!description":"Gets current value of property {@link #getMinYValue minYValue}.\n\nIf this property is set it indicates the value X axis ends with.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllLines":{"!description":"Removes all the controls from the aggregation {@link #getLines lines}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.suite.ui.microchart.AreaMicroChartItem]"},"getView":{"!description":"Gets current value of property {@link #getView view}.\n\nThe view of the chart.\n\nDefault value is <code>Normal<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartViewType"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.microchart.AreaMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.microchart.AreaMicroChart<\/code> itself.\n\nThe event is triggered when the chart is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.microchart.AreaMicroChart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setFirstXLabel":{"!description":"Sets the aggregated {@link #getFirstXLabel firstXLabel}.","!static":false,"!category":"function","!type":"fn(oFirstXLabel: sap.suite.ui.microchart.AreaMicroChartLabel) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oFirstXLabel":"type: sap.suite.ui.microchart.AreaMicroChartLabel, description: The firstXLabel to set"}},"!description":"<br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","setFirstYLabel":{"!description":"Sets the aggregated {@link #getFirstYLabel firstYLabel}.","!static":false,"!category":"function","!type":"fn(oFirstYLabel: sap.suite.ui.microchart.AreaMicroChartLabel) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oFirstYLabel":"type: sap.suite.ui.microchart.AreaMicroChartLabel, description: The firstYLabel to set"}},"bindChart":{"!description":"Binds aggregation {@link #getChart chart} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getInnerMaxThreshold":{"!description":"Gets content of aggregation {@link #getInnerMaxThreshold innerMaxThreshold}.\n\nThe configuration of the upper line of the inner threshold area. The color property defines the color of the area between inner thresholds. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.microchart.AreaMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyMinThreshold":{"!description":"Destroys the minThreshold in the aggregation {@link #getMinThreshold minThreshold}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"getLastXLabel":{"!description":"Gets content of aggregation {@link #getLastXLabel lastXLabel}.\n\nThe label on X axis for the last point of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartLabel"},"getMaxThreshold":{"!description":"Gets content of aggregation {@link #getMaxThreshold maxThreshold}.\n\nThe configuration of the max threshold area. The color property defines the color of the area above the max threshold line. Points are rendered in the same sequence as in this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"setMaxLabel":{"!description":"Sets the aggregated {@link #getMaxLabel maxLabel}.","!static":false,"!category":"function","!type":"fn(oMaxLabel: sap.suite.ui.microchart.AreaMicroChartLabel) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oMaxLabel":"type: sap.suite.ui.microchart.AreaMicroChartLabel, description: The maxLabel to set"}},"destroyFirstYLabel":{"!description":"Destroys the firstYLabel in the aggregation {@link #getFirstYLabel firstYLabel}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"getShowLabel":{"!description":"Gets current value of property {@link #getShowLabel showLabel}.\n\nDetermines if the labels are displayed or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyMaxThreshold":{"!description":"Destroys the maxThreshold in the aggregation {@link #getMaxThreshold maxThreshold}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"destroyLastYLabel":{"!description":"Destroys the lastYLabel in the aggregation {@link #getLastYLabel lastYLabel}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"enableXIndexing":{"!description":"Enables x-values of all points are automatically indexed with numeric, equidistant values.","!static":false,"!category":"function","!type":"fn(useIndex: Boolean)","parameters":{"useIndex":"type: boolean, description: Flag to activate automatic index"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setMaxXValue":{"!description":"Property setter for the Max X value","!static":false,"!category":"function","!type":"fn(value: Number, bSuppressInvalidate: Boolean)","parameters":{"bSuppressInvalidate":"type: boolean, description: Suppress in validate","value":"type: float, description: new value Max X"}},"setMaxThreshold":{"!description":"Sets the aggregated {@link #getMaxThreshold maxThreshold}.","!static":false,"!category":"function","!type":"fn(oMaxThreshold: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oMaxThreshold":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The maxThreshold to set"}},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.AreaMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.microchart.AreaMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroyTarget":{"!description":"Destroys the target in the aggregation {@link #getTarget target}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"addLine":{"!description":"Adds some line to the aggregation {@link #getLines lines}.","!static":false,"!category":"function","!type":"fn(oLine: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oLine":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The line to add; if empty, nothing is inserted"}},"!module":"sap/suite/ui/microchart/AreaMicroChart","getInnerMinThreshold":{"!description":"Gets content of aggregation {@link #getInnerMinThreshold innerMinThreshold}.\n\nThe configuration of the bottom line of the inner threshold area. The color property is ignored. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"!helpDescription":"<br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","setMinThreshold":{"!description":"Sets the aggregated {@link #getMinThreshold minThreshold}.","!static":false,"!category":"function","!type":"fn(oMinThreshold: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oMinThreshold":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The minThreshold to set"}},"destroyLines":{"!description":"Destroys all the lines in the aggregation {@link #getLines lines}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"setMinLabel":{"!description":"Sets the aggregated {@link #getMinLabel minLabel}.","!static":false,"!category":"function","!type":"fn(oMinLabel: sap.suite.ui.microchart.AreaMicroChartLabel) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oMinLabel":"type: sap.suite.ui.microchart.AreaMicroChartLabel, description: The minLabel to set"}},"indexOfLine":{"!description":"Checks for the provided <code>sap.suite.ui.microchart.AreaMicroChartItem<\/code> in the aggregation {@link #getLines lines}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oLine: sap.suite.ui.microchart.AreaMicroChartItem) -> Number","parameters":{"oLine":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The line whose index is looked for"}},"setLastYLabel":{"!description":"Sets the aggregated {@link #getLastYLabel lastYLabel}.","!static":false,"!category":"function","!type":"fn(oLastYLabel: sap.suite.ui.microchart.AreaMicroChartLabel) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oLastYLabel":"type: sap.suite.ui.microchart.AreaMicroChartLabel, description: The lastYLabel to set"}},"destroyMaxLabel":{"!description":"Destroys the maxLabel in the aggregation {@link #getMaxLabel maxLabel}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"setColorPalette":{"!description":"Sets a new value for property {@link #getColorPalette colorPalette}.\n\nThe color palette for the chart. If this property is set, semantic colors defined in AreaMicroChartItem are ignored. As a result, colors of the palette are assigned to each line. When all the palette colors are used up, assignment of the colors starts again from the beginning of the palette.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sColorPalette: [String]) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"sColorPalette":"type: string[], description: New value for property <code>colorPalette<\/code>"}},"unbindChart":{"!description":"Unbinds aggregation {@link #getChart chart} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"unbindTarget":{"!description":"Unbinds aggregation {@link #getTarget target} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"bindLines":{"!description":"Binds aggregation {@link #getLines lines} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getMaxXValue":{"!description":"Gets current value of property {@link #getMaxXValue maxXValue}.\n\nIf this property is set, it indicates the value the X-axis ends with.","!static":false,"!category":"function","!type":"fn() -> Number"},"getLastYLabel":{"!description":"Gets content of aggregation {@link #getLastYLabel lastYLabel}.\n\nThe label on Y axis for the last point of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartLabel"},"!proto":"sap.ui.core.Control","setMinXValue":{"!description":"Property setter for the Min X value","!static":false,"!category":"function","!type":"fn(value: Number, bSuppressInvalidate: Boolean)","parameters":{"bSuppressInvalidate":"type: boolean, description: Suppress in validate","value":"type: float, description: new value Min X"}},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getFirstYLabel":{"!description":"Gets content of aggregation {@link #getFirstYLabel firstYLabel}.\n\nThe label on Y axis for the first point of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartLabel"},"getMaxYValue":{"!description":"Gets current value of property {@link #getMaxYValue maxYValue}.\n\nIf this property is set it indicates the value X axis ends with.","!static":false,"!category":"function","!type":"fn() -> Number"},"setMaxYValue":{"!description":"Property setter for the Max Y value","!static":false,"!category":"function","!type":"fn(value: Number, bSuppressInvalidate: Boolean)","parameters":{"bSuppressInvalidate":"type: boolean, description: Suppress in validate","value":"type: float, description: new value Max Y"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new AreaMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxXValue maxXValue} : float<\/li>\n<li>{@link #getMinXValue minXValue} : float<\/li>\n<li>{@link #getMaxYValue maxYValue} : float<\/li>\n<li>{@link #getMinYValue minYValue} : float<\/li>\n<li>{@link #getView view} : sap.suite.ui.microchart.AreaMicroChartViewType (default: Normal)<\/li>\n<li>{@link #getColorPalette colorPalette} : string[] (default: [])<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: true)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getChart chart} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getMaxThreshold maxThreshold} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getInnerMaxThreshold innerMaxThreshold} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getInnerMinThreshold innerMinThreshold} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getMinThreshold minThreshold} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getTarget target} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getFirstXLabel firstXLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getFirstYLabel firstYLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getLastXLabel lastXLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getLastYLabel lastYLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getMaxLabel maxLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getMinLabel minLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getLines lines} : sap.suite.ui.microchart.AreaMicroChartItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"setChart":{"!description":"Sets the aggregated {@link #getChart chart}.","!static":false,"!category":"function","!type":"fn(oChart: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oChart":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The chart to set"}},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.60 undefined<br>Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getColorPalette":{"!description":"Gets current value of property {@link #getColorPalette colorPalette}.\n\nThe color palette for the chart. If this property is set, semantic colors defined in AreaMicroChartItem are ignored. As a result, colors of the palette are assigned to each line. When all the palette colors are used up, assignment of the colors starts again from the beginning of the palette.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setTarget":{"!description":"Sets the aggregated {@link #getTarget target}.","!static":false,"!category":"function","!type":"fn(oTarget: sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oTarget":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The target to set"}},"setLastXLabel":{"!description":"Sets the aggregated {@link #getLastXLabel lastXLabel}.","!static":false,"!category":"function","!type":"fn(oLastXLabel: sap.suite.ui.microchart.AreaMicroChartLabel) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oLastXLabel":"type: sap.suite.ui.microchart.AreaMicroChartLabel, description: The lastXLabel to set"}},"unbindLines":{"!description":"Unbinds aggregation {@link #getLines lines} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"setMinYValue":{"!description":"Property setter for the Min Y value","!static":false,"!category":"function","!type":"fn(value: Number, bSuppressInvalidate: Boolean)","parameters":{"bSuppressInvalidate":"type: boolean, description: Suppress in validate","value":"type: float, description: new value Min Y"}},"insertLine":{"!description":"Inserts a line into the aggregation {@link #getLines lines}.","!static":false,"!category":"function","!type":"fn(oLine: sap.suite.ui.microchart.AreaMicroChartItem, iIndex: Number) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oLine":"type: sap.suite.ui.microchart.AreaMicroChartItem, description: The line to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the line should be inserted at; for a negative value of <code>iIndex<\/code>, the line is inserted at position 0; for a value greater than the current size of the aggregation, the line is inserted at the last position"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getChart":{"!description":"Gets content of aggregation {@link #getChart chart}.\n\nThe configuration of the actual values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"setIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.60 undefined<br>Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive: Boolean) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"getMinThreshold":{"!description":"Gets content of aggregation {@link #getMinThreshold minThreshold}.\n\nThe configuration of the min threshold area. The color property defines the color of the area below the min threshold line. Points are rendered in the same sequence as in this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartItem"},"bindTarget":{"!description":"Binds aggregation {@link #getTarget target} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"removeLine":{"!description":"Removes a line from the aggregation {@link #getLines lines}.","!static":false,"!category":"function","!type":"fn(vLine: Number | String | sap.suite.ui.microchart.AreaMicroChartItem) -> sap.suite.ui.microchart.AreaMicroChartItem","parameters":{"vLine":"type: int|string|sap.suite.ui.microchart.AreaMicroChartItem, description: The line to remove or its index or id"}},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the bullet micro chart is included.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"destroyFirstXLabel":{"!description":"Destroys the firstXLabel in the aggregation {@link #getFirstXLabel firstXLabel}.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChart"},"setView":{"!description":"Sets a new value for property {@link #getView view}.\n\nThe view of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Normal<\/code>.","!static":false,"!category":"function","!type":"fn(sView: sap.suite.ui.microchart.AreaMicroChartViewType) -> sap.suite.ui.microchart.AreaMicroChart","parameters":{"sView":"type: sap.suite.ui.microchart.AreaMicroChartViewType, description: New value for property <code>view<\/code>"}},"getMinXValue":{"!description":"Gets current value of property {@link #getMinXValue minXValue}.\n\nIf this property is set it indicates the value X axis ends with.","!static":false,"!category":"function","!type":"fn() -> Number"},"getFirstXLabel":{"!description":"Gets content of aggregation {@link #getFirstXLabel firstXLabel}.\n\nThe label on X axis for the first point of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartLabel"},"getMaxLabel":{"!description":"Gets content of aggregation {@link #getMaxLabel maxLabel}.\n\nThe label for the maximum point of the chart.","!static":false,"!category":"function","!type":"fn() -> sap.suite.ui.microchart.AreaMicroChartLabel"}},"sap.suite.ui.microchart.HarveyBallMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.HarveyBallMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.HarveyBallMicroChart"},"sap.suite.ui.microchart.InteractiveLineChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.microchart.InteractiveLineChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.microchart.InteractiveLineChart"}}}