{"Templates":[{"template":"new sap.suite.ui.microchart.AreaMicroChart(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tmaxXValue: ${maxXValue}, // float\n\t\tminXValue: ${minXValue}, // float\n\t\tmaxYValue: ${maxYValue}, // float\n\t\tminYValue: ${minYValue}, // float\n\t\tview: ${sap.suite.ui.microchart.AreaMicroChartViewType.Normal}, // sap.suite.ui.microchart.AreaMicroChartViewType\n\t\tcolorPalette: ${[]}, // string[]\n\t\tshowLabel: ${bShowLabel}, // boolean\n\t\tisResponsive: ${bIsResponsive}, // boolean\n\t\tchart: ${chart}, // sap.suite.ui.microchart.AreaMicroChartItem\n\t\tmaxThreshold: ${maxThreshold}, // sap.suite.ui.microchart.AreaMicroChartItem\n\t\tinnerMaxThreshold: ${innerMaxThreshold}, // sap.suite.ui.microchart.AreaMicroChartItem\n\t\tinnerMinThreshold: ${innerMinThreshold}, // sap.suite.ui.microchart.AreaMicroChartItem\n\t\tminThreshold: ${minThreshold}, // sap.suite.ui.microchart.AreaMicroChartItem\n\t\ttarget: ${target}, // sap.suite.ui.microchart.AreaMicroChartItem\n\t\tfirstXLabel: ${firstXLabel}, // sap.suite.ui.microchart.AreaMicroChartLabel\n\t\tfirstYLabel: ${firstYLabel}, // sap.suite.ui.microchart.AreaMicroChartLabel\n\t\tlastXLabel: ${lastXLabel}, // sap.suite.ui.microchart.AreaMicroChartLabel\n\t\tlastYLabel: ${lastYLabel}, // sap.suite.ui.microchart.AreaMicroChartLabel\n\t\tmaxLabel: ${maxLabel}, // sap.suite.ui.microchart.AreaMicroChartLabel\n\t\tminLabel: ${minLabel}, // sap.suite.ui.microchart.AreaMicroChartLabel\n\t\tlines: [${lines}], // sap.suite.ui.microchart.AreaMicroChartItem[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"AreaMicroChart","Experimental":false,"module":"sap/suite/ui/microchart/AreaMicroChart","description":"AreaMicroChart(sId?, mSettings?) : sap.suite.ui.microchart.AreaMicroChart","constructorDescription":"Constructor for a new AreaMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxXValue maxXValue} : float<\/li>\n<li>{@link #getMinXValue minXValue} : float<\/li>\n<li>{@link #getMaxYValue maxYValue} : float<\/li>\n<li>{@link #getMinYValue minYValue} : float<\/li>\n<li>{@link #getView view} : sap.suite.ui.microchart.AreaMicroChartViewType (default: Normal)<\/li>\n<li>{@link #getColorPalette colorPalette} : string[] (default: [])<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: true)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getChart chart} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getMaxThreshold maxThreshold} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getInnerMaxThreshold innerMaxThreshold} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getInnerMinThreshold innerMinThreshold} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getMinThreshold minThreshold} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getTarget target} : sap.suite.ui.microchart.AreaMicroChartItem<\/li>\n<li>{@link #getFirstXLabel firstXLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getFirstYLabel firstYLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getLastXLabel lastXLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getLastYLabel lastYLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getMaxLabel maxLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getMinLabel minLabel} : sap.suite.ui.microchart.AreaMicroChartLabel<\/li>\n<li>{@link #getLines lines} : sap.suite.ui.microchart.AreaMicroChartItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.suite.ui.microchart.AreaMicroChart","helpDescription":"<br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.AreaMicroChartItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tcolor: ${sap.m.ValueCSSColor.Neutral}, // sap.m.ValueCSSColor\n\t\ttitle: \"${title}\", // string\n\t\tpoints: [${points}] // sap.suite.ui.microchart.AreaMicroChartPoint[]\n\t}\n)\n","static":"true","prefix":"AreaMicroChartItem","Experimental":false,"module":"sap/suite/ui/microchart/AreaMicroChartItem","description":"AreaMicroChartItem(sId?, mSettings?) : sap.suite.ui.microchart.AreaMicroChartItem","constructorDescription":"The configuration of the graphic element on the chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPoints points} : sap.suite.ui.microchart.AreaMicroChartPoint[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.AreaMicroChartItem","helpDescription":"Graphical representation of the area micro chart regarding the value lines, the thresholds, and the target values.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.AreaMicroChartLabel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tcolor: ${sap.m.ValueCSSColor.Neutral}, // sap.m.ValueCSSColor\n\t\tlabel: ${\"\"} // string\n\t}\n)\n","static":"true","prefix":"AreaMicroChartLabel","Experimental":false,"module":"sap/suite/ui/microchart/AreaMicroChartLabel","description":"AreaMicroChartLabel(sId?, mSettings?) : sap.suite.ui.microchart.AreaMicroChartLabel","constructorDescription":"Constructor for a new AreaMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getLabel label} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.AreaMicroChartLabel","helpDescription":"Displays or hides the labels for start and end dates, start and end values, and minimum and maximum values.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.AreaMicroChartPoint(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tx: ${x}, // float\n\t\ty: ${y} // float\n\t}\n)\n","static":"true","prefix":"AreaMicroChartPoint","Experimental":false,"module":"sap/suite/ui/microchart/AreaMicroChartPoint","description":"AreaMicroChartPoint(sId?, mSettings?) : sap.suite.ui.microchart.AreaMicroChartPoint","constructorDescription":"This control contains data for the point.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getX x} : float<\/li>\n<li>{@link #getY y} : float<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.AreaMicroChartPoint","helpDescription":"Contains the data for the point.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.BulletMicroChart(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tmode: ${sap.suite.ui.microchart.BulletMicroChartModeType.Actual}, // sap.suite.ui.microchart.BulletMicroChartModeType\n\t\tscale: ${\"\"}, // string\n\t\tforecastValue: ${forecastValue}, // float\n\t\ttargetValue: ${targetValue}, // float\n\t\tminValue: ${minValue}, // float\n\t\tmaxValue: ${maxValue}, // float\n\t\tshowActualValue: ${bShowActualValue}, // boolean\n\t\tshowDeltaValue: ${bShowDeltaValue}, // boolean\n\t\tshowActualValueInDeltaMode: ${bShowActualValueInDeltaMode}, // boolean\n\t\tshowTargetValue: ${bShowTargetValue}, // boolean\n\t\tshowValueMarker: ${bShowValueMarker}, // boolean\n\t\tshowThresholds: ${bShowThresholds}, // boolean\n\t\tactualValueLabel: ${\"\"}, // string\n\t\tdeltaValueLabel: ${\"\"}, // string\n\t\ttargetValueLabel: ${\"\"}, // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tscaleColor: ${sap.suite.ui.microchart.CommonBackgroundType.MediumLight}, // sap.suite.ui.microchart.CommonBackgroundType\n\t\tisResponsive: ${bIsResponsive}, // boolean\n\t\tactual: ${actual}, // sap.suite.ui.microchart.BulletMicroChartData\n\t\tthresholds: [${thresholds}], // sap.suite.ui.microchart.BulletMicroChartData[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"BulletMicroChart","Experimental":false,"module":"sap/suite/ui/microchart/BulletMicroChart","description":"BulletMicroChart(sId?, mSettings?) : sap.suite.ui.microchart.BulletMicroChart","constructorDescription":"Constructor for a new BulletMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getMode mode} : sap.suite.ui.microchart.BulletMicroChartModeType (default: Actual)<\/li>\n<li>{@link #getScale scale} : string (default: )<\/li>\n<li>{@link #getForecastValue forecastValue} : float<\/li>\n<li>{@link #getTargetValue targetValue} : float<\/li>\n<li>{@link #getMinValue minValue} : float<\/li>\n<li>{@link #getMaxValue maxValue} : float<\/li>\n<li>{@link #getShowActualValue showActualValue} : boolean (default: true)<\/li>\n<li>{@link #getShowDeltaValue showDeltaValue} : boolean (default: true)<\/li>\n<li>{@link #getShowActualValueInDeltaMode showActualValueInDeltaMode} : boolean (default: false)<\/li>\n<li>{@link #getShowTargetValue showTargetValue} : boolean (default: true)<\/li>\n<li>{@link #getShowValueMarker showValueMarker} : boolean (default: false)<\/li>\n<li>{@link #getShowThresholds showThresholds} : boolean (default: true)<\/li>\n<li>{@link #getActualValueLabel actualValueLabel} : string (default: )<\/li>\n<li>{@link #getDeltaValueLabel deltaValueLabel} : string (default: )<\/li>\n<li>{@link #getTargetValueLabel targetValueLabel} : string (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getScaleColor scaleColor} : sap.suite.ui.microchart.CommonBackgroundType (default: MediumLight)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getActual actual} : sap.suite.ui.microchart.BulletMicroChartData (default)<\/li>\n<li>{@link #getThresholds thresholds} : sap.suite.ui.microchart.BulletMicroChartData[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.suite.ui.microchart.BulletMicroChart","helpDescription":"Displays a colored horizontal bar representing a current value on top of a background bar representing the compared value. The vertical bars can represent the numeric values, the scaling factors, the thresholds, and the target values. This control replaces the deprecated sap.suite.ui.commons.BulletChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.BulletMicroChartData(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tvalue: ${\"0\"}, // float\n\t\tcolor: ${sap.m.ValueColor.Neutral} // sap.m.ValueColor\n\t}\n)\n","static":"true","prefix":"BulletMicroChartData","Experimental":false,"module":"sap/suite/ui/microchart/BulletMicroChartData","description":"BulletMicroChartData(sId?, mSettings?) : sap.suite.ui.microchart.BulletMicroChartData","constructorDescription":"Constructor for a new BulletMicroChartData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.BulletMicroChartData","helpDescription":"Contains the thresholds data.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.ColumnMicroChart(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tisResponsive: ${bIsResponsive}, // boolean\n\t\tshowTopLabels: ${bShowTopLabels}, // boolean\n\t\tshowBottomLabels: ${bShowBottomLabels}, // boolean\n\t\tallowColumnLabels: ${bAllowColumnLabels}, // boolean\n\t\tcolumns: [${columns}], // sap.suite.ui.microchart.ColumnMicroChartData[]\n\t\tleftTopLabel: ${leftTopLabel}, // sap.suite.ui.microchart.ColumnMicroChartLabel\n\t\trightTopLabel: ${rightTopLabel}, // sap.suite.ui.microchart.ColumnMicroChartLabel\n\t\tleftBottomLabel: ${leftBottomLabel}, // sap.suite.ui.microchart.ColumnMicroChartLabel\n\t\trightBottomLabel: ${rightBottomLabel}, // sap.suite.ui.microchart.ColumnMicroChartLabel\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ColumnMicroChart","Experimental":false,"module":"sap/suite/ui/microchart/ColumnMicroChart","description":"ColumnMicroChart(sId?, mSettings?) : sap.suite.ui.microchart.ColumnMicroChart","constructorDescription":"Constructor for a new ColumnMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<li>{@link #getShowTopLabels showTopLabels} : boolean (default: true)<\/li>\n<li>{@link #getShowBottomLabels showBottomLabels} : boolean (default: true)<\/li>\n<li>{@link #getAllowColumnLabels allowColumnLabels} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumns columns} : sap.suite.ui.microchart.ColumnMicroChartData[] (default)<\/li>\n<li>{@link #getLeftTopLabel leftTopLabel} : sap.suite.ui.microchart.ColumnMicroChartLabel<\/li>\n<li>{@link #getRightTopLabel rightTopLabel} : sap.suite.ui.microchart.ColumnMicroChartLabel<\/li>\n<li>{@link #getLeftBottomLabel leftBottomLabel} : sap.suite.ui.microchart.ColumnMicroChartLabel<\/li>\n<li>{@link #getRightBottomLabel rightBottomLabel} : sap.suite.ui.microchart.ColumnMicroChartLabel<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.suite.ui.microchart.ColumnMicroChart","helpDescription":"Compares different values which are represented as vertical bars. This control replaces the deprecated sap.suite.ui.commons.ColumnMicroChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.ColumnMicroChartData(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tcolor: ${sap.m.ValueCSSColor.Neutral}, // sap.m.ValueCSSColor\n\t\tlabel: ${\"\"}, // string\n\t\tdisplayValue: \"${displayValue}\", // string\n\t\tvalue: ${value}, // float\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ColumnMicroChartData","Experimental":false,"module":"sap/suite/ui/microchart/ColumnMicroChartData","description":"ColumnMicroChartData(sId?, mSettings?) : sap.suite.ui.microchart.ColumnMicroChartData","constructorDescription":"Constructor for a new ColumnMicroChartData control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getLabel label} : string (default: )<\/li>\n<li>{@link #getDisplayValue displayValue} : string<\/li>\n<li>{@link #getValue value} : float<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.ColumnMicroChartData","helpDescription":"Defines the column chart data.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.ColumnMicroChartLabel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tcolor: ${sap.m.ValueCSSColor.Neutral}, // sap.m.ValueCSSColor\n\t\tlabel: ${\"\"} // string\n\t}\n)\n","static":"true","prefix":"ColumnMicroChartLabel","Experimental":false,"module":"sap/suite/ui/microchart/ColumnMicroChartLabel","description":"ColumnMicroChartLabel(sId?, mSettings?) : sap.suite.ui.microchart.ColumnMicroChartLabel","constructorDescription":"Constructor for a new ColumnMicroChartLabel control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getLabel label} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.ColumnMicroChartLabel","helpDescription":"Displays or hides the labels of a column micro chart.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.ComparisonMicroChart(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tscale: ${\"\"}, // string\n\t\tminValue: ${minValue}, // float\n\t\tmaxValue: ${maxValue}, // float\n\t\tview: ${sap.suite.ui.microchart.ComparisonMicroChartViewType.Normal}, // sap.suite.ui.microchart.ComparisonMicroChartViewType\n\t\tcolorPalette: ${[]}, // string[]\n\t\tshrinkable: ${bShrinkable}, // boolean\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tisResponsive: ${bIsResponsive}, // boolean\n\t\tdata: [${data}], // sap.suite.ui.microchart.ComparisonMicroChartData[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ComparisonMicroChart","Experimental":false,"module":"sap/suite/ui/microchart/ComparisonMicroChart","description":"ComparisonMicroChart(sId?, mSettings?) : sap.suite.ui.microchart.ComparisonMicroChart","constructorDescription":"Constructor for a new ComparisonMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getScale scale} : string (default: )<\/li>\n<li>{@link #getMinValue minValue} : float<\/li>\n<li>{@link #getMaxValue maxValue} : float<\/li>\n<li>{@link #getView view} : sap.suite.ui.microchart.ComparisonMicroChartViewType (default: Normal)<\/li>\n<li>{@link #getColorPalette colorPalette} : string[] (default: [])<\/li>\n<li>{@link #getShrinkable shrinkable} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getData data} : sap.suite.ui.microchart.ComparisonMicroChartData[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.suite.ui.microchart.ComparisonMicroChart","helpDescription":"Illustrates values as colored bar charts with title, numeric value, and scaling factor in the content area. This control replaces the deprecated sap.suite.ui.commons.ComparisonChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.ComparisonMicroChartData(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tvalue: ${\"0\"}, // float\n\t\tcolor: ${sap.m.ValueCSSColor.Neutral}, // sap.m.ValueCSSColor\n\t\ttitle: ${\"\"}, // string\n\t\tdisplayValue: ${\"\"}, // string\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ComparisonMicroChartData","Experimental":false,"module":"sap/suite/ui/microchart/ComparisonMicroChartData","description":"ComparisonMicroChartData(sId?, mSettings?) : sap.suite.ui.microchart.ComparisonMicroChartData","constructorDescription":"Constructor for a new ComparisonMicroChartData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getDisplayValue displayValue} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.ComparisonMicroChartData","helpDescription":"Contains the values of the comparison chart.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.DeltaMicroChart(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue1: ${value1}, // float\n\t\tvalue2: ${value2}, // float\n\t\ttitle1: \"${title1}\", // string\n\t\ttitle2: \"${title2}\", // string\n\t\tdisplayValue1: \"${displayValue1}\", // string\n\t\tdisplayValue2: \"${displayValue2}\", // string\n\t\tdeltaDisplayValue: \"${deltaDisplayValue}\", // string\n\t\tcolor: ${sap.m.ValueCSSColor.Neutral}, // sap.m.ValueCSSColor\n\t\tview: ${sap.suite.ui.microchart.DeltaMicroChartViewType.Normal}, // sap.suite.ui.microchart.DeltaMicroChartViewType\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tisResponsive: ${bIsResponsive}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"DeltaMicroChart","Experimental":false,"module":"sap/suite/ui/microchart/DeltaMicroChart","description":"DeltaMicroChart(sId?, mSettings?) : sap.suite.ui.microchart.DeltaMicroChart","constructorDescription":"Constructor for a new DeltaMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue1 value1} : float<\/li>\n<li>{@link #getValue2 value2} : float<\/li>\n<li>{@link #getTitle1 title1} : string<\/li>\n<li>{@link #getTitle2 title2} : string<\/li>\n<li>{@link #getDisplayValue1 displayValue1} : string<\/li>\n<li>{@link #getDisplayValue2 displayValue2} : string<\/li>\n<li>{@link #getDeltaDisplayValue deltaDisplayValue} : string<\/li>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getView view} : sap.suite.ui.microchart.DeltaMicroChartViewType (default: Normal)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.suite.ui.microchart.DeltaMicroChart","helpDescription":"Represents the delta of two values as a chart. This control replaces the deprecated sap.suite.ui.commons.DeltaMicroChart. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.HarveyBallMicroChart(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttotal: ${total}, // float\n\t\ttotalLabel: \"${totalLabel}\", // string\n\t\ttotalScale: \"${totalScale}\", // string\n\t\tformattedLabel: ${bFormattedLabel}, // boolean\n\t\tshowTotal: ${bShowTotal}, // boolean\n\t\tshowFractions: ${bShowFractions}, // boolean\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tcolorPalette: ${[]}, // string[]\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\talignContent: ${sap.suite.ui.microchart.HorizontalAlignmentType.Left}, // sap.suite.ui.microchart.HorizontalAlignmentType\n\t\tisResponsive: ${bIsResponsive}, // boolean\n\t\titems: [${items}], // sap.suite.ui.microchart.HarveyBallMicroChartItem[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"HarveyBallMicroChart","Experimental":false,"module":"sap/suite/ui/microchart/HarveyBallMicroChart","description":"HarveyBallMicroChart(sId?, mSettings?) : sap.suite.ui.microchart.HarveyBallMicroChart","constructorDescription":"Constructor for a new HarveyBallMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTotal total} : float<\/li>\n<li>{@link #getTotalLabel totalLabel} : string<\/li>\n<li>{@link #getTotalScale totalScale} : string<\/li>\n<li>{@link #getFormattedLabel formattedLabel} : boolean (default: false)<\/li>\n<li>{@link #getShowTotal showTotal} : boolean (default: true)<\/li>\n<li>{@link #getShowFractions showFractions} : boolean (default: true)<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getColorPalette colorPalette} : string[] (default: [])<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getAlignContent alignContent} : sap.suite.ui.microchart.HorizontalAlignmentType (default: Left)<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.suite.ui.microchart.HarveyBallMicroChartItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.suite.ui.microchart.HarveyBallMicroChart","helpDescription":"A radial chart that displays a value compared to its total. <br>Unlike a pie chart, which shows multiple values or sectors, a Harvey Ball microchart shows only one value from a total. <br>The sector that represents a value being compared to a total is defined by {@link sap.suite.ui.microchart.HarveyBallMicroChartItem}. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.HarveyBallMicroChartItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tcolor: ${sap.m.ValueCSSColor.Neutral}, // sap.m.ValueCSSColor\n\t\tfraction: ${0}, // float\n\t\tfractionLabel: \"${fractionLabel}\", // string\n\t\tfractionScale: \"${fractionScale}\", // string\n\t\tformattedLabel: ${bFormattedLabel} // boolean\n\t}\n)\n","static":"true","prefix":"HarveyBallMicroChartItem","Experimental":false,"module":"sap/suite/ui/microchart/HarveyBallMicroChartItem","description":"HarveyBallMicroChartItem(sId?, mSettings?) : sap.suite.ui.microchart.HarveyBallMicroChartItem","constructorDescription":"Constructor for a new HarveyBallMicroChartItem to be used in a {@link sap.suite.ui.microchart.HarveyBallMicroChart}.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getFraction fraction} : float (default: 0)<\/li>\n<li>{@link #getFractionLabel fractionLabel} : string<\/li>\n<li>{@link #getFractionScale fractionScale} : string<\/li>\n<li>{@link #getFormattedLabel formattedLabel} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.HarveyBallMicroChartItem","helpDescription":"Defines the fraction value that is compared with total in a {@link sap.suite.ui.microchart.HarveyBallMicroChart}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.InteractiveBarChart(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tdisplayedBars: ${3}, // int\n\t\tlabelWidth: ${\"40%\"}, // sap.ui.core.Percentage\n\t\tselectionEnabled: ${bSelectionEnabled}, // boolean\n\t\tmin: ${min}, // float\n\t\tmax: ${max}, // float\n\t\tbars: [${bars}], // sap.suite.ui.microchart.InteractiveBarChartBar[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselectionChanged: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"InteractiveBarChart","Experimental":false,"module":"sap/suite/ui/microchart/InteractiveBarChart","description":"InteractiveBarChart(sId?, mSettings?) : sap.suite.ui.microchart.InteractiveBarChart","constructorDescription":"Constructor for a new InteractiveBarChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayedBars displayedBars} : int (default: 3)<\/li>\n<li>{@link #getLabelWidth labelWidth} : sap.ui.core.Percentage (default: 40%)<\/li>\n<li>{@link #getSelectionEnabled selectionEnabled} : boolean (default: true)<\/li>\n<li>{@link #getMin min} : float<\/li>\n<li>{@link #getMax max} : float<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBars bars} : sap.suite.ui.microchart.InteractiveBarChartBar[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChanged selectionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.suite.ui.microchart.InteractiveBarChart","helpDescription":"The InteractiveBarChart control belongs to a chart control group in the MicroChart library with a number of interactive features. These interactive features provide more information on a chart value. For example, by selecting a bar you can get more details on the displayed value.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelectionChanged(\n\t{\n\t\tselectedBars: [${selectedBars}], // sap.suite.ui.microchart.InteractiveBarChartBar[]\n\t\tbar: ${bar}, // sap.suite.ui.microchart.InteractiveBarChartBar\n\t\tselected: ${bSelected} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.suite.ui.microchart.InteractiveBarChart.fireSelectionChanged","description":"fireSelectionChanged(mParameters?) : sap.suite.ui.microchart.InteractiveBarChart","helpDescription":"Fires event {@link #event:selectionChanged selectionChanged} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.InteractiveBarChartBar(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tlabel: \"${label}\", // string\n\t\tselected: ${bSelected}, // boolean\n\t\tdisplayedValue: \"${displayedValue}\", // string\n\t\tcolor: ${sap.m.ValueColor.Neutral}, // sap.m.ValueColor\n\t\tvalue: ${value} // float\n\t}\n)\n","static":"true","prefix":"InteractiveBarChartBar","Experimental":false,"module":"sap/suite/ui/microchart/InteractiveBarChartBar","description":"InteractiveBarChartBar(sId?, mSettings?) : sap.suite.ui.microchart.InteractiveBarChartBar","constructorDescription":"Constructor for the bar element of the InteractiveBarChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getDisplayedValue displayedValue} : string<\/li>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getValue value} : float<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.InteractiveBarChartBar","helpDescription":"A bar element for the InteractiveBarChart.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.InteractiveDonutChart(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tdisplayedSegments: ${3}, // int\n\t\tselectionEnabled: ${bSelectionEnabled}, // boolean\n\t\tsegments: [${segments}], // sap.suite.ui.microchart.InteractiveDonutChartSegment[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselectionChanged: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"InteractiveDonutChart","Experimental":false,"module":"sap/suite/ui/microchart/InteractiveDonutChart","description":"InteractiveDonutChart(sId?, mSettings?) : sap.suite.ui.microchart.InteractiveDonutChart","constructorDescription":"Constructor for InteractiveDonutChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayedSegments displayedSegments} : int (default: 3)<\/li>\n<li>{@link #getSelectionEnabled selectionEnabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSegments segments} : sap.suite.ui.microchart.InteractiveDonutChartSegment[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChanged selectionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.suite.ui.microchart.InteractiveDonutChart","helpDescription":"The InteractiveDonutChart control belongs to a chart control group in the MicroChart library with a number of interactive features. These interactive features provide more information on a chart value. For example, by selecting a segment you can get more details on the displayed value.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelectionChanged(\n\t{\n\t\tselectedSegments: [${selectedSegments}], // sap.suite.ui.microchart.InteractiveDonutChartSegment[]\n\t\tsegment: ${segment}, // sap.suite.ui.microchart.InteractiveDonutChartSegment\n\t\tselected: ${bSelected} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.suite.ui.microchart.InteractiveDonutChart.fireSelectionChanged","description":"fireSelectionChanged(mParameters?) : sap.suite.ui.microchart.InteractiveDonutChart","helpDescription":"Fires event {@link #event:selectionChanged selectionChanged} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.InteractiveDonutChartSegment(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tlabel: \"${label}\", // string\n\t\tselected: ${bSelected}, // boolean\n\t\tvalue: ${value}, // float\n\t\tdisplayedValue: \"${displayedValue}\", // string\n\t\tcolor: ${sap.m.ValueColor.Neutral} // sap.m.ValueColor\n\t}\n)\n","static":"true","prefix":"InteractiveDonutChartSegment","Experimental":false,"module":"sap/suite/ui/microchart/InteractiveDonutChartSegment","description":"InteractiveDonutChartSegment(sId?, mSettings?) : sap.suite.ui.microchart.InteractiveDonutChartSegment","constructorDescription":"Constructor for InteractiveDonutChartSegment element.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getValue value} : float<\/li>\n<li>{@link #getDisplayedValue displayedValue} : string<\/li>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.InteractiveDonutChartSegment","helpDescription":"A donut chart segment.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.InteractiveLineChart(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tdisplayedPoints: ${6}, // int\n\t\tprecedingPoint: ${0}, // float\n\t\tsucceedingPoint: ${0}, // float\n\t\tselectionEnabled: ${bSelectionEnabled}, // boolean\n\t\tpoints: [${points}], // sap.suite.ui.microchart.InteractiveLineChartPoint[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselectionChanged: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"InteractiveLineChart","Experimental":false,"module":"sap/suite/ui/microchart/InteractiveLineChart","description":"InteractiveLineChart(sId?, mSettings?) : sap.suite.ui.microchart.InteractiveLineChart","constructorDescription":"Constructor for a new InteractiveLineChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayedPoints displayedPoints} : int (default: 6)<\/li>\n<li>{@link #getPrecedingPoint precedingPoint} : float (default: 0)<\/li>\n<li>{@link #getSucceedingPoint succeedingPoint} : float (default: 0)<\/li>\n<li>{@link #getSelectionEnabled selectionEnabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPoints points} : sap.suite.ui.microchart.InteractiveLineChartPoint[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChanged selectionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.suite.ui.microchart.InteractiveLineChart","helpDescription":"The InteractiveLineChart control belongs to a chart control group in the MicroChart library having a number of interactive features.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelectionChanged(\n\t{\n\t\tselectedPoints: [${selectedPoints}], // sap.suite.ui.microchart.InteractiveLineChartPoint[]\n\t\tpoint: ${point}, // sap.suite.ui.microchart.InteractiveLineChartPoint\n\t\tselected: ${bSelected} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.suite.ui.microchart.InteractiveLineChart.fireSelectionChanged","description":"fireSelectionChanged(mParameters?) : sap.suite.ui.microchart.InteractiveLineChart","helpDescription":"Fires event {@link #event:selectionChanged selectionChanged} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.InteractiveLineChartPoint(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tlabel: \"${label}\", // string\n\t\tsecondaryLabel: \"${secondaryLabel}\", // string\n\t\tselected: ${bSelected}, // boolean\n\t\tvalue: ${value}, // float\n\t\tdisplayedValue: \"${displayedValue}\", // string\n\t\tcolor: ${sap.m.ValueColor.Neutral} // sap.m.ValueColor\n\t}\n)\n","static":"true","prefix":"InteractiveLineChartPoint","Experimental":false,"module":"sap/suite/ui/microchart/InteractiveLineChartPoint","description":"InteractiveLineChartPoint(sId?, mSettings?) : sap.suite.ui.microchart.InteractiveLineChartPoint","constructorDescription":"Constructor for the point element of the InteractiveLineChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getSecondaryLabel secondaryLabel} : string<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getValue value} : float<\/li>\n<li>{@link #getDisplayedValue displayedValue} : string<\/li>\n<li>{@link #getColor color} : sap.m.ValueColor (default: Neutral)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.InteractiveLineChartPoint","helpDescription":"A point element for the InteractiveLineChart.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.LineMicroChart(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tthreshold: ${0}, // float\n\t\tshowThresholdLine: ${bShowThresholdLine}, // boolean\n\t\tshowThresholdValue: ${bShowThresholdValue}, // boolean\n\t\tthresholdDisplayValue: \"${thresholdDisplayValue}\", // string\n\t\tminXValue: ${minXValue}, // float\n\t\tmaxXValue: ${maxXValue}, // float\n\t\tminYValue: ${minYValue}, // float\n\t\tmaxYValue: ${maxYValue}, // float\n\t\tleftTopLabel: \"${leftTopLabel}\", // string\n\t\trightTopLabel: \"${rightTopLabel}\", // string\n\t\tleftBottomLabel: \"${leftBottomLabel}\", // string\n\t\trightBottomLabel: \"${rightBottomLabel}\", // string\n\t\tshowTopLabels: ${bShowTopLabels}, // boolean\n\t\tshowBottomLabels: ${bShowBottomLabels}, // boolean\n\t\tcolor: ${\"Neutral\"}, // any\n\t\tshowPoints: ${bShowPoints}, // boolean\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tpoints: [${points}], // sap.suite.ui.microchart.LineMicroChartPoint[]\n\t\tlines: [${lines}], // sap.suite.ui.microchart.LineMicroChartLine[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"LineMicroChart","Experimental":false,"module":"sap/suite/ui/microchart/LineMicroChart","description":"LineMicroChart(sId?, mSettings?) : sap.suite.ui.microchart.LineMicroChart","constructorDescription":"Constructor for a new LineMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getThreshold threshold} : float (default: 0)<\/li>\n<li>{@link #getShowThresholdLine showThresholdLine} : boolean (default: true)<\/li>\n<li>{@link #getShowThresholdValue showThresholdValue} : boolean (default: false)<\/li>\n<li>{@link #getThresholdDisplayValue thresholdDisplayValue} : string<\/li>\n<li>{@link #getMinXValue minXValue} : float<\/li>\n<li>{@link #getMaxXValue maxXValue} : float<\/li>\n<li>{@link #getMinYValue minYValue} : float<\/li>\n<li>{@link #getMaxYValue maxYValue} : float<\/li>\n<li>{@link #getLeftTopLabel leftTopLabel} : string<\/li>\n<li>{@link #getRightTopLabel rightTopLabel} : string<\/li>\n<li>{@link #getLeftBottomLabel leftBottomLabel} : string<\/li>\n<li>{@link #getRightBottomLabel rightBottomLabel} : string<\/li>\n<li>{@link #getShowTopLabels showTopLabels} : boolean (default: true)<\/li>\n<li>{@link #getShowBottomLabels showBottomLabels} : boolean (default: true)<\/li>\n<li>{@link #getColor color} : any (default: Neutral)<\/li>\n<li>{@link #getShowPoints showPoints} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPoints points} : sap.suite.ui.microchart.LineMicroChartPoint[] (default)<\/li>\n<li>{@link #getLines lines} : sap.suite.ui.microchart.LineMicroChartLine[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.suite.ui.microchart.LineMicroChart","helpDescription":"Chart that displays the history of values as segmented lines along a threshold line. The scale is optional and showing the points is also optional. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.LineMicroChartEmphasizedPoint(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tx: ${0}, // float\n\t\ty: ${0}, // float\n\t\tcolor: ${sap.m.ValueCSSColor.Neutral}, // sap.m.ValueCSSColor\n\t\tshow: ${bShow} // boolean\n\t}\n)\n","static":"true","prefix":"LineMicroChartEmphasizedPoint","Experimental":false,"module":"sap/suite/ui/microchart/LineMicroChartEmphasizedPoint","description":"LineMicroChartEmphasizedPoint(sId?, mSettings?) : sap.suite.ui.microchart.LineMicroChartEmphasizedPoint","constructorDescription":"Constructor for a new LineMicroChartEmphasizedPoint.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getShow show} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.microchart.LineMicroChartPoint#constructor sap.suite.ui.microchart.LineMicroChartPoint}\ncan be used as well.","extends":"sap.suite.ui.microchart.LineMicroChartPoint","Deprecated":false,"name":"sap.suite.ui.microchart.LineMicroChartEmphasizedPoint","helpDescription":"Contains the emphasized point of the line micro chart.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.LineMicroChartLine(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tcolor: ${color}, // any\n\t\tshowPoints: ${bShowPoints}, // boolean\n\t\ttype: ${sap.suite.ui.microchart.LineType.Solid}, // sap.suite.ui.microchart.LineType\n\t\tpoints: [${points}] // sap.suite.ui.microchart.LineMicroChartPoint[]\n\t}\n)\n","static":"true","prefix":"LineMicroChartLine","Experimental":false,"module":"sap/suite/ui/microchart/LineMicroChartLine","description":"LineMicroChartLine(sId?, mSettings?) : sap.suite.ui.microchart.LineMicroChartLine","constructorDescription":"Constructor for a new LineMicroChartLine.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : any<\/li>\n<li>{@link #getShowPoints showPoints} : boolean<\/li>\n<li>{@link #getType type} : sap.suite.ui.microchart.LineType (default: Solid)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPoints points} : sap.suite.ui.microchart.LineMicroChartPoint[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.LineMicroChartLine","helpDescription":"The container containing all the points of the line.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.LineMicroChartPoint(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tx: ${0}, // float\n\t\ty: ${0} // float\n\t}\n)\n","static":"true","prefix":"LineMicroChartPoint","Experimental":false,"module":"sap/suite/ui/microchart/LineMicroChartPoint","description":"LineMicroChartPoint(sId?, mSettings?) : sap.suite.ui.microchart.LineMicroChartPoint","constructorDescription":"Constructor for a new LineMicroChartPoint.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getX x} : float (default: 0)<\/li>\n<li>{@link #getY y} : float (default: 0)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.LineMicroChartPoint","helpDescription":"Contains the point of the line micro chart.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.StackedBarMicroChart(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tmaxValue: ${maxValue}, // float\n\t\tprecision: ${1}, // int\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tshowLabels: ${bShowLabels}, // boolean\n\t\tbars: [${bars}], // sap.suite.ui.microchart.StackedBarMicroChartBar[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"StackedBarMicroChart","Experimental":false,"module":"sap/suite/ui/microchart/StackedBarMicroChart","description":"StackedBarMicroChart(sId?, mSettings?) : sap.suite.ui.microchart.StackedBarMicroChart","constructorDescription":"Constructor for a new StackedBarMicroChart control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getMaxValue maxValue} : float<\/li>\n<li>{@link #getPrecision precision} : int (default: 1)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getShowLabels showLabels} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBars bars} : sap.suite.ui.microchart.StackedBarMicroChartBar[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.suite.ui.microchart.StackedBarMicroChart","helpDescription":"Illustrates values as stacked and colored bar charts displaying numeric values (as absolute values or percentages) inside the bars. <br>Note: You can assign a custom tooltip for this microchart. The custom tooltip can be set using expression binding. When no custom tooltip is defined, the tooltip is generated automatically based on the logic described in {@link sap.ui.core.Element#getTooltip_AsString}. For a combination of a generated and a custom tooltip, use <code>((AltText))<\/code> inside of the tooltip string. The aggregated data of the microchart can also be customized.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.suite.ui.microchart.StackedBarMicroChartBar(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tvalue: ${\"0\"}, // float\n\t\tvalueColor: ${valueColor}, // sap.m.ValueCSSColor\n\t\tdisplayValue: \"${displayValue}\" // string\n\t}\n)\n","static":"true","prefix":"StackedBarMicroChartBar","Experimental":false,"module":"sap/suite/ui/microchart/StackedBarMicroChartBar","description":"StackedBarMicroChartBar(sId?, mSettings?) : sap.suite.ui.microchart.StackedBarMicroChartBar","constructorDescription":"Constructor for a new StackedBarMicroChartBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getValueColor valueColor} : sap.m.ValueCSSColor<\/li>\n<li>{@link #getDisplayValue displayValue} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.suite.ui.microchart.StackedBarMicroChartBar","helpDescription":"Contains the values of the stacked bar chart.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}}],"!version":"1.20.0"}