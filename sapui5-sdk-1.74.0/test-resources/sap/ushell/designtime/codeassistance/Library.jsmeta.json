{"!name":"sap.ushell","!version":"1.20.0","!define":{"sap.ushell.ui.tile.State":{"!description":"Denotes states for control parts and translates into standard SAP color codes","Neutral":{"!description":"Alias for \"None\"","!category":"enum","!type":"String"},"Warning":{"!description":"Indicates a state that is critical, e.g. marking an element that needs attention (Orange color)","!category":"enum","!type":"String"},"!module":"sap/ushell/library","Negative":{"!description":"Alias for \"Error\"","!category":"enum","!type":"String"},"Positive":{"!description":"Alias for \"Success\"","!category":"enum","!type":"String"},"Error":{"!description":"Indicates a state that is negative, e.g. marking an element that has to get attention urgently or indicates negative values (Red color)","!category":"enum","!type":"String"},"!category":"static class","Critical":{"!description":"Alias for \"Warning\"","!category":"enum","!type":"String"},"None":{"!description":"Indicates a state that is neutral, e.g. for standard display (Grey color)","!category":"enum","!type":"String"},"Success":{"!description":"Indicates a state that is positive, e.g. marking a task successfully executed or a state where all is good (Green color)","!category":"enum","!type":"String"}},"sap.ushell.ui.launchpad.GridContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.GridContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.launchpad.GridContainer"},"sap.ushell.components.factsheet.controls.PictureTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.CustomTile.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.components.factsheet.controls.PictureTile"},"sap.ushell.services.Personalization":{"!description":"The Unified Shell's personalization service, which provides a personalizer object that handles all personalization operations.","containsVariantSet":{"!description":"Checks if a specific variant set is contained in the container.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Boolean","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"delVariantSet":{"!description":"Deletes a variant set from the container. In case the variant set does not exist nothing happens.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String)","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!constructorDescription":"This method MUST be called by the Unified Shell's container only, others\rMUST call <code>sap.ushell.Container.getService(\"Personalization\")<\/code>.\rConstructs a new instance of the personalization service.","!module":"sap/ushell/services/Personalization","getVariantSet":{"!description":"Returns the variant set object from the container.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Object","parameters":{"sVariantSetKey":"type: string, description: variant set key The string length is restricted to 40 characters"}},"!helpDescription":"The Unified Shell's personalization service, which provides a personalizer object that handles all personalization operations.","addVariantSet":{"!description":"Creates a new variant set in the container. In case a variant set with this key is already existing an exception is thrown.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Object","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!proto":"sap.ui.base.Object","!category":"class","getVariantSetKeys":{"!description":"Returns an array with the keys of the variant sets in the container.","!static":false,"!category":"function","!type":"fn() -> Array"}},"sap.ushell.services.AppConfiguration_obj":{"!type":"fn()","prototype":"sap.ushell.services.AppConfiguration"},"sap.ushell.services.LaunchPage_obj":{"!type":"fn(oAdapter: Object, oContainerInterface: Object)","prototype":"sap.ushell.services.LaunchPage"},"sap.ushell.services.Personalization.ContextContainer":{"!description":"The container is the anchor object of the unified shell personalization in container mode.","getKey":{"!description":"return the container key as a string variable","!static":false,"!category":"function","!type":"fn() -> String"},"getUnmodifiableContainer":{"!description":"Return an instance unmodifiable container instance. There is one instance of this wrapper per container. It will permit all read accesses to the container, but block all modifying accesses.","!static":false,"!category":"function","!type":"fn() -> Object"},"_getInternalKeys":{"!description":"Returns an array with all internal keys of direct items in the container.","!static":false,"!category":"function","!type":"fn() -> Array"},"delItem":{"!description":"Deletes a direct item from the container. In case the item does not exist, nothing happens.","!static":false,"!category":"function","!type":"fn(sItemKey: String)","parameters":{"sItemKey":"type: string, description: item key"}},"setItemValue":{"!description":"Sets the value of a direct item in the container. In case the item is already existing its value is overwritten. In case it is not existing a new item with this key and value is created. The value is serialized during set","!static":false,"!category":"function","!type":"fn(sItemKey: String, sItemValue: Object)","parameters":{"sItemValue":"type: object, description: item value (JSON object)","sItemKey":"type: string, description: item key The string length is restricted to 40 characters"}},"!proto":"sap.ui.base.Object","clear":{"!description":"clears the local copy data of this container","!static":false,"!category":"function","!type":"fn()"},"containsItem":{"!description":"Checks if a specific direct item is contained in the container.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Boolean","parameters":{"sItemKey":"type: string, description: item key"}},"save":{"!description":"Attempts to save the current container data at the underlying storage asynchronously. The current state is serialized.","!static":false,"!category":"function","!type":"fn() -> Object"},"!category":"class","getValidity":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined only for testing!<br>return the validity of this container","!static":false,"!category":"function","!type":"fn()"},"getItemValue":{"!description":"Returns the value for a direct item from the container. (Value semantics, new copy is returned)","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Object","parameters":{"sItemKey":"type: string, description: item key"}},"!constructorDescription":"To be called by the personalization service getContainer method.","!module":"sap/ushell/services/_Personalization/ContextContainer","flush":{"!description":"flush all pending request; The result of the promise may reflect the last pending operation in the queue","!static":false,"!category":"function","!type":"fn() -> Object"},"load":{"!description":"(Re)loads the current container data from the underlying storage asynchronously. The current local data is discarded.\n\nReturns a promise for the load operation. If another save/load/delete operation is not completed, the operation may fail! (wait for the other promise).\n\nSynchronous read and write operations before the load is done have undefined effects.","!static":false,"!category":"function","!type":"fn() -> Object"},"!helpDescription":"The container is the anchor object of the unified shell personalization in container mode.","getItemKeys":{"!description":"Returns an array with the keys of direct items in the container.","!static":false,"!category":"function","!type":"fn() -> Array"},"saveDeferred":{"!description":"Save the current container data at the underlying storage asynchronously at the earlies nDelayInMilliseconds seconds before. The current state is serialized.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ushell.services.NavTargetResolution":{"!description":"The Unified Shell's internal navigation target resolution service\n\nMethods in this class deal with *internal* representations of the shell hash.\n\nconfigurations: <code>config : { allowTestUrlComponentConfig : true }<\/code> allow to redefine the Test-url, Test-local1, Test-local2 applications via url parameters (sap-ushell-test-local1-url= / sap-ushell-test-local1-additionalInformation= ... )","!constructorDescription":"This method MUST be called by the Unified Shell's container only, others MUST call\r<code>sap.ushell.Container.getService(\"NavTargetResolution\")<\/code>.\rConstructs a new instance of the navigation target resolution service.","!module":"sap/ushell/services/NavTargetResolution","!helpDescription":"The Unified Shell's internal navigation target resolution service\n\nMethods in this class deal with *internal* representations of the shell hash.\n\nconfigurations: <code>config : { allowTestUrlComponentConfig : true }<\/code> allow to redefine the Test-url, Test-local1, Test-local2 applications via url parameters (sap-ushell-test-local1-url= / sap-ushell-test-local1-additionalInformation= ... )","resolveHashFragment":{"!description":"Resolves the URL hash fragment.\n\nThis function should be used by a custom renderer in order to implement custom navigation. Do not use this function for developing Fiori applications.\n\nThis function gets the hash part of the URL and returns data of the target application.\n\nExample of the returned data: <pre>\r  {\r    \"additionalInformation\": \"SAPUI5.Component=sap.ushell.renderers.fiori2.search.container\",\r    \"applicationType\": \"URL\",\r    \"url\": \"/sap/bc/ui5_ui5/ui2/ushell/resources/sap/ushell/renderers/fiori2/search/container\",\r    \"navigationMode\": \"embedded\"\r  }\r  <\/pre>\n\nThis is an asynchronous operation.","!static":false,"!category":"function","!type":"fn(sHashFragment: String) -> Object","parameters":{"sHashFragment":"type: string, description: The formatted URL hash fragment in internal format (as obtained by the SAPUI5 hasher service) not as given in <code>location.hash<\/code>)! Example: <code>#SemanticObject-action?P1=V1&P2=A%20B%20C<\/code>"}},"!proto":"sap.ui.base.Object","resolveTarget":{"!description":"Resolves a navigation target taking into account the sap-system\n\nThis function should be used by the NWBC browser in order to get a resolved target corresponding to a certain configuration object describing the target. Do not use this function for developing Fiori applications.","!static":false,"!category":"function","!type":"fn(oArgs: Object) -> jQuery.Promise","parameters":{"oArgs":"type: object, description: <code> { target : { semanticObject : \"semantic object\", action : \"action\", }, params : { \"sap-system-src\": \"e.g. sid(UR5.120)\", \"sap-system\": { ... data related to the sap-system } } } <\/code>"}},"isNavigationSupported":{"!description":"Tells whether the given navigation intent(s) are supported for the given parameters Supported\" means that a valid navigation target is configured for the user for the given device form factor.\n\nThis is effectively a test function for {@link toExternal}/ {@link hrefForExternal}. It is functionally equivalent to {@link isIntentSupported} but accepts the same input as {@link toExternal}/ {@link hrefForExternal}.","!static":false,"!category":"function","!type":"fn(aIntents: [Object]) -> Object","parameters":{"aIntents":"type: object[], description: the intents (such as <code>[\"#AnObject-action?A=B&c=e\"]<\/code>) to be checked with object beeing instances the oArgs object of toExternal, hrefForExternal etc. e.g. <code> { target : { semanticObject : \"AnObject\", action: \"action\" }, params : { A : \"B\" } } <\/code> or e.g. <code> { target : { semanticObject : \"AnObject\", action: \"action\" }, params : { A : \"B\", c : \"e\" } } <\/code> or <code>{ target : { shellHash : \"AnObject-action?A=B&c=e\" } }<\/code>"}},"!category":"class","expandCompactHash":{"!description":"expands a URL hash fragment\n\nThis function gets the hash part of the URL and expands a sap-intent-param if present and retrievable\n\nThis is an asynchronous operation.","!static":false,"!category":"function","!type":"fn(sHashFragment: String) -> String","parameters":{"sHashFragment":"type: string, description: The formatted URL hash fragment in internal format (as obtained by the SAPUI5 hasher service, not as given in <code>location.hash<\/code>)"}}},"sap.ushell.services.Personalization.Variant_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.Variant"},"sap.ushell.services.CrossApplicationNavigation":{"toExternal":{"!description":"Navigate to an specified external target (e.g. different launchpad application). Invocation will trigger an hash change and subsequent invocation of the application.\n\nIf the navigation target opens in a new window the running application may be retained.","!static":false,"!category":"function","!type":"fn(oArgs: Object, oComponent?: Object)","parameters":{"oArgs":"type: Object, description: configuration object describing the target, e.g. <code> { target : { semanticObject : \"AnObject\", action: \"action\" }, params : { A : \"B\" } } <\/code> constructs sth. like <code>#AnObject-action?A=B&C=e&C=j<\/code>; or e.g. <code> { target : { semanticObject : \"AnObject\", action: \"action\", context : \"AB7F3C\" }, params : { A : \"B\", c : \"e\" } } <\/code> or <code>{ target : { shellHash : \"SO-36&jumper=postman\" } }<\/code> and navigate to it via changing the hash\n\nA proper way for an application to generate a link to return to the home page of the Fiori launchpad is: <code>hrefForExternal( { target : { shellHash : \"#\" }})<\/code>\n\nDo *not* use \"#Shell-home\" or \"Shell-home\" to navigate to a specific homepage!<br />\n\nThe actual navigation may occur deferred!<br />\n\nSince version 1.56 this API accepts a sap-xapp-state-data parameter that can be used to launch and application with certain data, for example: <pre>\n  {\n    target : { semanticObject : \"AnObject\", action: \"action\" },\n    params : { \"sap-xapp-state-data\" : JSON.stringify({ a: \"b\", c: \"d\" }) }\n  }\n  <\/pre>\n\nThe data specified via \"sap-xapp-state-data\" are passed to the target application in the sap-xapp-state parameter.<br />\n\nNote that the sap-xapp-state-data parameter itself is not passed to the target application.\n\nNote that the application parameter length (including SemanticObject/Action) shall not exceed 512 bytes when serialized as UTF-8","oComponent":"type: object, description: an optional SAP UI5 Component,"}},"getLinks":{"!description":"Resolves the given semantic object (or action) and business parameters to a list of links available to the user","!static":false,"!category":"function","!type":"fn(vArgs?: [Object | Object]) -> jQuery.Deferred.promise","parameters":{"vArgs":"type: object|object[], description: An object containing nominal arguments for the method, having the following structure: <pre>\n  {\n     semanticObject: \"Object\", // optional, matches any semantic objects if undefined\n     action: \"action\",         // optional, matches any actions if undefined\n     params: {                 // optional business parameters\n        A: \"B\",\n        C: [\"e\", \"j\"]\n     },\n     withAtLeastOneUsedParam: true, // optional, defaults to false.\n                                    // If true, returns only the links that use at least one (non sap-) parameter from 'params'.\n\n     sortResultsBy: \"intent\", // optional parameter that decides on how the returned results will be sorted.\n                              // Possible values are:\n                              //   - \"intent\" (default) lexicographical sort on returned 'intent' field\n                              //   - \"text\" lexicographical sort on returned 'text' field\n                              //   - \"priority\" exprimental - top intents are returned first\n\n     treatTechHintAsFilter : true, // optional, defaults to false\n                                   // if true, only apps that match\n                                   // exactly the supplied technology\n                                   // (e.g. sap-ui-tech-hint=WDA) will be considered\n\n     ui5Component: UI5Component, // mandatory, the UI5 component invoking the service, shall be a root component!\n\n     appStateKey: \"abc123...\",   // optional, application state key to add to the generated links, SAP internal usage only\n\n     compactIntents: true        // optional, whether intents should be returned in compact format.\n                                 // Defaults to false.\n\n     ignoreFormFactor: true,     // optional, defaults to false, deprecated, do not use, may have no effect in the future\n\n     tags: [\"tag-1\", \"tag-2\"]    // optional, if specified, only returns links that match inbound with certain tags.\n  }\n  <\/pre>\n\nStarting from UI5 version 1.52.0 the <code>params<\/code> argument can be specified in the extended format:\n\n<pre>\n  ...\n  params: {\n     P1: { value: \"v1\" },\n     P2: { value: [\"v2\", \"v3\"] }\n  }\n  <\/pre>\n\nWhen the parameter is expressed in this format, the caller can specify additional search options.\n\nBesides 'value', supported search options for the extended format are: <ul> <li> <b>required<\/b>: whether the parameter must be required (true) or not required (false) in the signature of the matching target (once the navigation occurs to the returned link). Please note that this option will be effective if the Fiori Launchpad is configured to resolve navigation targets via <code>sap.ushell.services.ClientSideTargetResolution<\/code> and therefore may not be supported in all platforms.<br />\n\nExample: <pre>\n        ...\n        params: {\n          P1: { value: \"v1\", required: true },\n          P2: { value: [\"v2\", \"v3\"] }\n        }\n        ...\n      <\/pre> <\/li> <\/ul>\n\n<p>This method supports a mass invocation interface to obtain multiple results with a single call, as shown in the following example:\n\n<pre>\n    oCrossApplicationService.getLinks([ // array, because multiple invocations are to be made\n       [                           // arguments for the first invocation\n         { semanticObject: \"SO\" }  // this method supports one parameter only in each call\n       ],\n       [                           // arguments for the second invocation\n         { action: \"someAction\" }\n       ]\n       // ... and so on\n    ]);\n  <\/pre>\n\n<p>Calling this method with no arguments will produce the same result as if the method was called with an empty object.<\/p>"}},"getDistinctSemanticObjects":{"!description":"Returns a list of semantic objects of the intents the current user can navigate to.","!static":false,"!category":"function","!type":"fn() -> jQuery.Deferred.promise"},"hrefForExternal":{"!description":"Returns a string which can be put into the DOM (e.g. in a link tag)","!static":false,"!category":"function","!type":"fn(oArgs: Object, oComponent?: Object, bAsync: Boolean) -> String","parameters":{"oArgs":"type: object, description: object encoding a semantic object and action, e.g. <pre>\n  {\n    target : { semanticObject : \"AnObject\", action: \"action\" },\n    params : { A : \"B\" }\n  }\n  <\/pre> or e.g. <pre>\n  {\n    target : {\n      semanticObject : \"AnObject\",\n      action: \"action\", context  : \"AB7F3C\"\n    },\n    params : {\n      A : \"B\",\n      c : \"e\"\n    }\n  }\n  <\/pre> or <pre>{ target : { shellHash : \"SO-36?jumper=postman\" } }<\/pre>","oComponent":"type: object, description: the root component of the application","bAsync":"type: boolean, description: if set to <code>true<\/code>, a promise will be returned instead of the direct argument. The promise will only succeed after all compaction requests have been sent"}},"!proto":"sap.ui.base.Object","isInitialNavigation":{"!description":"Checks whether the FLP has performed the first navigation. This method can be used to detect whether the current app was started directly, that is, without a previous navigation to another app, to the FLP home, or another target that adds an entry in the browser history.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"historyBack":{"!description":"performs window.history.go() with number of steps if provided and if supported by the underlying platform. May be a noop if the url is the first url in the browser. If no argument is provided it wil call window.history.go(-1)","!static":false,"!category":"function","!type":"fn(iSteps: Number)","parameters":{"iSteps":"type: number, description: positive integer representing the steps to go back in the history"}},"!category":"class","hrefForAppSpecificHash":{"!description":"Returns a string which can be put into the DOM (e.g. in a link tag) given an application specific hash suffix\n\nExample: <code>hrefForAppSpecificHash(\"View1/details/0/\")<\/code> returns <code>#SemanticObject-action&/View1/details/0/<\/code> if the current application runs in the shell and was started using \"SemanticObject-action\" as shell navigation hash","!static":false,"!category":"function","!type":"fn(sAppHash: String) -> String","parameters":{"sAppHash":"type: string, description: the app specific router, obtained e.g. via router.getURL(...). Note that sAppHash shall not exceed 512 bytes when serialized as UTF-8."}},"getSemanticObjectLinks":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 use getLinks<br>Resolves a given semantic object and business parameters to a list of links, taking into account the form factor of the current device.","!static":false,"!category":"function","!type":"fn(sSemanticObject: String, mParameters?: Object, bIgnoreFormFactor?: Boolean, oComponent?: Object, sAppStateKey?: String, bCompactIntents?: Boolean) -> Object","parameters":{"sAppStateKey":"type: string, description: application state key to add to the generated links, SAP internal usage only","bIgnoreFormFactor":"type: boolean, description: when set to <code>true<\/code> the form factor of the current device is ignored","oComponent":"type: Object, description: SAP UI5 Component invoking the service","sSemanticObject":"type: string, description: the semantic object such as <code>\"AnObject\"<\/code>","bCompactIntents":"type: boolean, description: whether the returned intents should be returned in compact format. Defaults to false.","mParameters":"type: object, description: the map of business parameters with values, for instance <pre>\n  {\n    A: \"B\",\n    c: \"e\"\n  }\n  <\/pre>"}},"!constructorDescription":"The Unified Shell's CrossApplicationNavigation service,\nwhich allows to navigate to external targets or create links to external targets\n\nThis method MUST be called by the Unified Shell's container only,\nothers MUST call <code>sap.ushell.Container.getService(\"CrossApplicationNavigation\")<\/code>.\nConstructs a new instance of the CrossApplicationNavigation service.\n\nCrossApplicationNavigation currently provides platform independent functionality.\n\nThis interface is for usage by applications or shell renderers/containers.\n\nUsage:\n  example: see demoapps/AppNavSample/MainXML.controller.js\n  <code>\n  var xnavservice =  sap.ushell && sap.ushell.Container && sap.ushell.Container.getService;\n     && sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n  var href = ( xnavservice && xnavservice.hrefForExternal({\n    target : { semanticObject : \"Product\", action : \"display\" },\n    params : { \"ProductID\" : \"102343333\" }\n  })) || \"\";\n  <\/code>\n\nParameter names and values are case sensitive.\n\nNote that the usage of multi-valued parameters (specifying an array with more than one member as parameter value,\n  e.g. <code>  params : { A : [\"a1\", \"a2\"] } <\/code> ) is possible with this API but <b>strongly discouraged<\/b>.\nEspecially the navigation target matching performed at the back-end is not supported for multi-value parameters.\nFurthermore, it is not guaranteed that additional parameter values specified\nin the back-end configuration are merged with parameter values passed in this method.\n\nNote that the application parameter length (including SemanticObject/Action) shall not exceed 512 bytes when serialized as UTF-8\n\nNote that when receiving the values as startup parameters (as part of the component data object)\nsingle values are represented as an array of size 1.\nAbove example is returned as <code> deepEqual(getComponentData().startupParameters ,  { \"ProductID\" : [ \"102343333\" ] } ) <\/code>\n\nMake sure not to store security critical data within an URL.\nURLs may appear in a server log, be persisted inside and outside the system.\n\nNote: When constructing large URLs, the URLs may be shortened and persisted on a database server for prolonged time,\nthe actual data is persisted under a key accessible to any User (guessing the key).\n\nThe same restrictions apply for the Application state.","!module":"sap/ushell/services/CrossApplicationNavigation","getPrimaryIntent":{"!description":"For a given semantic object, this method considers all actions associated with the semantic object and returns the one tagged as a \"primaryAction\". If no inbound tagged as \"primaryAction\" exists, then the intent of the first inbound (after sorting has been applied) matching the action \"displayFactSheet\".\n\nThe primary intent is determined by querying {@link CrossApplicationNavigation#getLinks} with the given semantic object and optional parameter. Then the resulting list is filtered to the outcome that a single item remains.","!static":false,"!category":"function","!type":"fn(sSemanticObject: String, mParameters?: Object) -> jQuery.Deferred","parameters":{"sSemanticObject":"type: string, description: Semantic object.","mParameters":"type: object, description: @see CrossApplicationNavigation#getSemanticObjectLinks for description."}},"isNavigationSupported":{"!description":"Tells whether the given navigation intent(s) are supported for the given parameters, form factor etc. \"Supported\" means that a valid navigation target is configured for the user for the given device.\n\nThis is effectively a test function for {@link toExternal}/ {@link hrefForExternal}. It is functionally equivalent to {@link isIntentSupported} but accepts the same interface as {@link toExternal}/ {@link hrefForExternal}.","!static":false,"!category":"function","!type":"fn(aIntents: [Object], oComponent?: Object) -> Object","parameters":{"aIntents":"type: object[], description: the intents to be checked with object being instances the oArgs object of toExternal, hrefForExternal etc. e.g. <code> { target: { semanticObject: \"AnObject\", action: \"action\" }, params: { A: \"B\" } } <\/code> or e.g. <code> { target: { semanticObject: \"AnObject\", action: \"action\" }, params: { A: \"B\", c: \"e\" } } <\/code> or <code>{ target: { shellHash: \"SO-36&jumper=postman\" } }<\/code>","oComponent":"type: object, description: the root component of the application"}},"backToPreviousApp":{"!description":"Attempts to use the browser history to navigate to the previous app.<p> A navigation to the Fiori Launchpad Home is performed in case this method is called on a first navigation. In all other cases, this function simply performs a browser back navigation. <\/p><p> Please note that the behavior of this method is subject to change and therefore it may not yield to the expected results especially on mobile devices where \"back\" is the previous inner app state iff these are put into the history!<\/p>","!static":false,"!category":"function","!type":"fn()"},"isIntentSupported":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined switch to isNavigationSupported. Note that this has a slightly different response format<br>Tells whether the given intent(s) are supported, taking into account the form factor of the current device. \"Supported\" means that navigation to the intent is possible. Note that the intents are assumed to be in internal format and expanded.","!static":false,"!category":"function","!type":"fn(aIntents: [String], oComponent?: Object) -> Object","parameters":{"aIntents":"type: string[], description: the intents (such as <code>[\"#AnObject-action?A=B&c=e\"]<\/code>) to be checked","oComponent":"type: object, description: the root component of the application"}},"expandCompactHash":{"!description":"if sHashFragment is a compacted hash (sap-intent-param is present), in a hash, this function replaces it into a long url with all parameters expanded","!static":false,"!category":"function","!type":"fn(sHashFragment: String) -> Object","parameters":{"sHashFragment":"type: string, description: an (internal format) shell hash"}}},"sap.ushell.services":{"Personalization":"sap.ushell.services.Personalization_obj","Configuration":"sap.ushell.services.Configuration_obj","Message":"sap.ushell.services.Message_obj","VariantSetAdapter":"sap.ushell.services.Personalization.VariantSetAdapter_obj","UserInfo":"sap.ushell.services.UserInfo_obj","!category":"namespace","ContentExtensionAdapterFactory":{"!description":"ContentExtensionAdapterFactory : String","!module":"sap/ushell/services/ContentExtensionAdapterFactory","!category":"enum","!type":"String"},"UsageAnalytics":"sap.ushell.services.UsageAnalytics_obj","SmartNavigation":"sap.ushell.services.SmartNavigation_obj","Container":"sap.ushell.services.Container_obj","logout":{"!description":"Logs out the current user from all relevant back-end systems, including the logon system itself. This member represents the default native implementation of logout. If SessionHandler was created, we register the alternate logout function using registerLogout function.","!category":"enum","!type":"String"},"AppConfiguration":"sap.ushell.services.AppConfiguration_obj","createAdapter":{"!description":"For the given remote system, creates a new adapter that corresponds to the service to which this container interface was passed at construction time.","!category":"enum","!type":"String"},"TransientPersonalizer":"sap.ushell.services.TransientPersonalizer_obj","NavTargetResolution":"sap.ushell.services.NavTargetResolution_obj","LaunchPage":"sap.ushell.services.LaunchPage_obj","PersonalizationContainer":"sap.ushell.services.PersonalizationContainer_obj","VariantSet":"sap.ushell.services.Personalization.VariantSet_obj","PersonalizationContainerVariantSet":"sap.ushell.services.PersonalizationContainerVariantSet_obj","Variant":"sap.ushell.services.Personalization.Variant_obj","ShellNavigation":"sap.ushell.services.ShellNavigation_obj","EndUserFeedback":"sap.ushell.services.EndUserFeedback_obj","ContextContainer":"sap.ushell.services.Personalization.ContextContainer_obj","Bookmark":"sap.ushell.services.Bookmark_obj","!module":"sap/ushell/services/Container","SupportTicket":"sap.ushell.services.SupportTicket_obj","ContainerInterface":"sap.ushell.services.ContainerInterface_obj","CrossApplicationNavigation":"sap.ushell.services.CrossApplicationNavigation_obj","AppLifeCycle":"sap.ushell.services.AppLifeCycle_obj","Notifications":"sap.ushell.services.Notifications_obj","URLParsing":"sap.ushell.services.URLParsing_obj","PersonalizationContainerVariant":"sap.ushell.services.PersonalizationContainerVariant_obj","delVariant":{"!description":"Deletes a variant from the variant set. In case the variant does not exist nothing happens.","!category":"enum","!type":"String"}},"sap.ushell.System":{"!description":"A representation of a system","!constructorDescription":"Constructs a new system object representing a system used in the Unified Shell.","!module":"sap/ushell/System","!helpDescription":"A representation of a system","!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.services.Notifications":{"init":{"!description":"Initializes the notification service\n\nInitialization is performed only if the following two conditions are fulfilled:<br> 1. Notification service is enabled<br> 2. Notification service hasn't been initialized yet<br>\n\nThe main initialization functionality is determining and setting the mode in which notifications are consumed.<br> The possible modes are:<br> PACKAGED_APP - Notifications are fetched when a callback is called by PackagedApp environment<br> FIORI_CLIENT - Notifications are fetched when a callback is called by FioriClient environment<br> WEB_SOCKET - Notifications are fetched on WebSocket \"ping\"<br> POLLING - Notifications are fetched using periodic polling mechanism<br>","!static":false,"!category":"function","!type":"fn()"},"getNotificationsGroupHeaders":{"!description":"Returns the group headers of the user notifications","!static":false,"!category":"function","!type":"fn() -> Promise"},"executeBulkAction":{"!description":"Launches a notification action oData call.<br> After launching the action, the function gets updated notification data in order to push the updated data to the consumers.","!static":false,"!category":"function","!type":"fn(sNotificationGroupId: Object, sActionId: Object) -> Promise","parameters":{"sNotificationGroupId":"type: object, description: The ID of the notification header/group whose action is being executed","sActionId":"type: object, description: The ID of the action that is being executed"}},"registerNotificationCountUpdateCallback":{"!description":"Gets a callback function that will be called when updated unseen notifications count is available.","!static":false,"!category":"function","!type":"fn(callback: Object)","parameters":{"callback":"type: object, description: The callback function that is registered and called on data update."}},"dismissNotification":{"!description":"Launches dismiss notification call.<br>","!static":false,"!category":"function","!type":"fn(sNotificationId: Object) -> Promise","parameters":{"sNotificationId":"type: object, description: The ID of the notification whose action is being executed"}},"!proto":"sap.ui.base.Object","!category":"class","isFirstDataLoaded":{"!static":false,"!category":"function","!type":"fn() -> Boolean"},"markRead":{"!description":"Launches mark as read notification call.<br> After launching the action, the function gets updated notification data in order to push the updated data to the consumers.","!static":false,"!category":"function","!type":"fn(sNotificationId: Object) -> Promise","parameters":{"sNotificationId":"type: object, description: The ID of the notification whose action is being executed"}},"getUnseenNotificationsCount":{"!description":"Returns the number of unseen notifications<br> e.g. Notifications that the user hasn't seen yet.","!static":false,"!category":"function","!type":"fn() -> Promise"},"!constructorDescription":"UShell service for fetching user notification data from the Notification center/service<br>\rand exposing them to the Unified Shell and Fiori applications UI controls.\r\rIn order to get user notifications, Unified Shell notification service issues OData requests<br>\rto the service defined by the configuration property <code>serviceUrl<\/code>,<br>\rfor example: \"/sap/opu/odata4/iwngw/notification/default/iwngw/notification_srv/0001\"<br>.\r\rUnified Shell Notification service has several working modes, depending on the environment and the available resources:<br>\r  PackagedApp mode: Fiori launchpad runs in the context of PackagedApp<br>\r  FioriClient mode: Fiori launchpad runs in the context of FioriLaunchpad<br>\r  WebSocket mode: Fiori launchpad runs in a browser, and WebSocket connection to the notifications provider is available<br>\r  Polling mode: Fiori launchpad in runs in a browser, and WebSocket connection to the notifications provider is not available<br>\r\rThe notification service exposes an API that includes:\r  - Service enabling and initialization<br>\r  - Registration of callback functions (by Shell/FLP controls) that will be called for every data update<br>.\r  - Retrieval of notification data (e.g. notifications, number of unseen notifications)\r  - Execution of a notification actions\r  - Marking user notifications as seen","!module":"sap/ushell/services/Notifications","getNotificationsCount":{"!description":"Returns the number of notifications<br> e.g. Notifications for user.","!static":false,"!category":"function","!type":"fn() -> Number"},"isEnabled":{"!description":"Indicates whether notification service is enabled.<br> Enabling is based on the <code>enable<\/code> service configuration flag.<br> The service configuration must also include serviceUrl attribute.<br>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"notificationsSeen":{"!description":"Mark all notifications as seen.<br> the main use-case is when the user navigated to the notification center and sees all the pending notifications.<br>","!static":false,"!category":"function","!type":"fn()"},"registerNotificationsUpdateCallback":{"!description":"Gets a callback function that will be called when updated notifications data is available.","!static":false,"!category":"function","!type":"fn(callback: Object)","parameters":{"callback":"type: object, description: The callback function that is registered and called on data update."}},"getNotificationsByTypeWithGroupHeaders":{"!description":"Returns the notifications of the user sorted by type include the group headers and the notifications","!static":false,"!category":"function","!type":"fn() -> Promise"}},"sap.ushell.services.Container_obj":{"!type":"fn()","prototype":"sap.ushell.services.Container"},"sap.ushell.services.Notifications_obj":{"!type":"fn(oContainerInterface: Object, sParameters: Object, oServiceConfiguration: Object)","prototype":"sap.ushell.services.Notifications"},"sap.ushell.services.TransientPersonalizer_obj":{"!type":"fn()","prototype":"sap.ushell.services.TransientPersonalizer"},"sap.ushell.services.Bookmark":{"!description":"The unified shell's bookmark service, which allows you to create shortcuts on the user's home page.","addCatalogTileToGroup":{"!description":"Adds the catalog tile with the given ID to given group. The catalog tile is looked up in the legacy SAP HANA catalog unless data to look up a remote catalog is provided.","!static":false,"!category":"function","!type":"fn(sCatalogTileId: String, sGroupId?: String, oCatalogData?: Object) -> Object","parameters":{"oCatalogData":"type: object, description: The data to identify the catalog containing the tile with the given ID","sCatalogTileId":"type: string, description: The ID of the tile within the catalog","sGroupId":"type: string, description: The id of the group. If not given, the tile is added to the default group"}},"addBookmark":{"!description":"Adds a bookmark tile to one of the user's home page groups.","!static":false,"!category":"function","!type":"fn(oParameters: Object, oGroup?: Object) -> Object","parameters":{"oGroup":"type: object, description: Optional reference to the group the bookmark tile should be added to. If not given, the default group is used.","oParameters":"type: object, description: bookmark parameters. In addition to title and URL, a bookmark might allow additional settings, such as an icon or a subtitle. Which settings are supported depends on the environment in which the application is running. Unsupported parameters will be ignored."}},"!constructorDescription":"This method MUST be called by the Unified Shell's container only, others MUST call\r<code>sap.ushell.Container.getService(\"Bookmark\")<\/code>.\rConstructs a new instance of the bookmark service.","updateBookmarks":{"!description":"Updates <b>all<\/b> bookmarks pointing to the given URL on all of the user's pages with the given new parameters. Parameters which are omitted are not changed in the existing bookmarks.","!static":false,"!category":"function","!type":"fn(sUrl: String, oParameters: Object) -> Object","parameters":{"sUrl":"type: string, description: The URL of the bookmarks to be updated, exactly as specified to {@link #addBookmark}. In case you need to update the URL itself, pass the old one here and the new one as <code>oParameters.url<\/code>!","oParameters":"type: object, description: The bookmark parameters as documented in {@link #addBookmark}."}},"!module":"sap/ushell/services/Bookmark","!helpDescription":"The unified shell's bookmark service, which allows you to create shortcuts on the user's home page.","!proto":"sap.ui.base.Object","!category":"class","countBookmarks":{"!description":"Counts <b>all<\/b> bookmarks pointing to the given URL from all of the user's pages. You can use this method to check if a bookmark already exists. <p> This is a potentially asynchronous operation in case the user's pages have not yet been loaded completely!","!static":false,"!category":"function","!type":"fn(sUrl: String) -> Object","parameters":{"sUrl":"type: string, description: The URL of the bookmarks to be counted, exactly as specified to {@link #addBookmark}."}},"deleteBookmarks":{"!description":"Deletes <b>all<\/b> bookmarks pointing to the given URL from all of the user's pages.","!static":false,"!category":"function","!type":"fn(sUrl: String) -> Object","parameters":{"sUrl":"type: string, description: The URL of the bookmarks to be deleted, exactly as specified to {@link #addBookmark}."}}},"sap.ushell.services.Personalization.VariantSet_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.VariantSet"},"sap.ushell.components.factsheet.controls.PictureViewerItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureViewerItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.components.factsheet.controls.PictureViewerItem"},"sap.ushell.components.factsheet.controls.PictureViewer":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ushell.components.factsheet.controls.PictureViewerItem) -> sap.ushell.components.factsheet.controls.PictureViewerItem","parameters":{"vItem":"type: int|string|sap.ushell.components.factsheet.controls.PictureViewerItem, description: The item to remove or its index or id"}},"getCurrentPictureIndex":{"!description":"Gets the current picture index.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.components.factsheet.controls.PictureViewer"},"!proto":"sap.m.TileContainer","deletePicture":{"!description":"Removes the picture at index <code>iIndex<\/code> from the <code>items<\/code> aggregation.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index of the picture collection to delete; if <code>iIndex<\/code> is out of range or empty, the current image will be deleted."}},"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.components.factsheet.controls.PictureViewer"},"!category":"class","selectPicture":{"!description":"Select the picture at index <code>iIndex<\/code> from the <code>items<\/code> aggregation.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index of the aggregation to select; for a negative value of <code>iIndex<\/code>, the picture at position 0 is selected; for a value greater than the current size of the aggregation, the selected picture at the last position is selected"}},"attachPictureDeleted":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:pictureDeleted pictureDeleted} event of this <code>sap.ushell.components.factsheet.controls.PictureViewer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.components.factsheet.controls.PictureViewer<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.components.factsheet.controls.PictureViewer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use aggregation \"tiles\"<br>Adds some item <code>oItem<\/code> to the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ushell.components.factsheet.controls.PictureViewerItem) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"oItem":"type: sap.ushell.components.factsheet.controls.PictureViewerItem, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> [sap.ushell.components.factsheet.controls.PictureViewerItem]"},"!constructorDescription":"Constructor for a new components/factsheet/controls/PictureViewer.\r\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTileScaling tileScaling} : float (default: 0.95)<\/li>\n<li>{@link #getRemovable removable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ushell.components.factsheet.controls.PictureViewerItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:pictureDeleted pictureDeleted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.TileContainer#constructor sap.m.TileContainer}\ncan be used as well.","indexOfItem":{"!description":"Checks for the provided <code>sap.ushell.components.factsheet.controls.PictureViewerItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ushell.components.factsheet.controls.PictureViewerItem) -> Number","parameters":{"oItem":"type: sap.ushell.components.factsheet.controls.PictureViewerItem, description: The item whose index is looked for"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 PictureViewer was replacing the Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Picture viewer control relying on the TileContainer control","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.components.factsheet.controls.PictureViewer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"firePictureDeleted":{"!description":"Fires event {@link #event:pictureDeleted pictureDeleted} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setTileScaling":{"!description":"Sets a new value for property {@link #getTileScaling tileScaling}.\n\nPercentage of the space occupied by the image in the picture viewer control. Please note that if the factor is too close to 1, the navigation arrows usually displayed in desktop mode will not be available\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0.95<\/code>.","!static":false,"!category":"function","!type":"fn(fTileScaling: Number) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"fTileScaling":"type: float, description: New value for property <code>tileScaling<\/code>"}},"getTileScaling":{"!description":"Gets current value of property {@link #getTileScaling tileScaling}.\n\nPercentage of the space occupied by the image in the picture viewer control. Please note that if the factor is too close to 1, the navigation arrows usually displayed in desktop mode will not be available\n\nDefault value is <code>0.95<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ushell.components.factsheet.controls.PictureViewerItem]"},"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureViewer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.TileContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ushell/components/factsheet/controls/PictureViewer","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 PictureViewer was replacing the Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Picture viewer control relying on the TileContainer control","detachPictureDeleted":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:pictureDeleted pictureDeleted} event of this <code>sap.ushell.components.factsheet.controls.PictureViewer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setRemovable":{"!description":"Sets a new value for property {@link #getRemovable removable}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRemovable: Boolean) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"bRemovable":"type: boolean, description: New value for property <code>removable<\/code>"}},"insertItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use aggregation \"tiles\"<br>Inserts a item into the aggregation named <code>items<\/code>. When adding a new item to the aggregation, a sap.ca.ui.PictureTile is actually created with its own ID and added to the internal TileContainer.","!static":false,"!category":"function","!type":"fn(oItem: sap.ushell.components.factsheet.controls.PictureViewerItem, iIndex: Number) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ushell.components.factsheet.controls.PictureViewerItem, description: the item to insert; if empty, nothing is inserted"}},"getRemovable":{"!description":"Gets current value of property {@link #getRemovable removable}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ushell.renderers.fiori2.Renderer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.renderers.fiori2.Renderer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.UIComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ushell.renderers.fiori2.Renderer"},"sap.ushell.services.Bookmark_obj":{"!type":"fn()","prototype":"sap.ushell.services.Bookmark"},"sap.ushell.services.Configuration_obj":{"!type":"fn()","prototype":"sap.ushell.services.Configuration"},"sap.ushell":{"ui5service":"sap.ushell.ui5service","components":"sap.ushell.components","Container":{"!description":"The Unified Shell container as a singleton object. This object will only be available after <code>sap.ushell.bootstrap()<\/code> has finished.","!category":"enum","!type":"sap.ushell.services.Container"},"adapters":"sap.ushell.adapters","ui":"sap.ushell.ui","!module":"sap/ushell/services/Container","renderers":"sap.ushell.renderers","!category":"namespace","services":"sap.ushell.services","bootstrap":{"!description":"Initializes the Unified Shell container for the given platform. This method must be called exactly once in the very beginning by platform-specific code in order to bootstrap the container. As soon as the returned promise has been resolved, the container will be available as a singleton object <code>sap.ushell.Container<\/code>.\n\nFor convenience, platform-specific bootstrap code is available and can be easily included (<b>before<\/b> the SAPUI5 bootstrap) by a corporate shell as follows: <pre>\n&lt;script src=\"/sap/public/bc/ui5_ui5/resources/sap/ushell_abap/bootstrap/abap.js\"&gt;&lt;/script&gt;\n&lt;script id=\"sap-ui-bootstrap\" src=\".../sap-ui-core.js\"&gt;&lt;/script&gt;\n<\/pre> This bootstrap code will automatically defer the initialization of SAPUI5 until the container is available. This is the preferred way of bootstrapping the Unified Shell.\n\nNote: For SAPUI5 application projects the recommended way is to add a dependency to the \"sap.ushell_abap\" library (<code>&lt;groupId&gt;com.sap.ushell&lt;/groupId&gt; &lt;artifactId&gt;ushell_abap&lt;/artifactId&gt;<\/code>) and load the bootstrap code via the application's resources folder: <pre>\n&lt;script src=\".../resources/sap/ushell_abap/bootstrap/abap.js\"&gt;&lt;/script&gt;\n&lt;script id=\"sap-ui-bootstrap\" src=\".../sap-ui-core.js\"&gt;&lt;/script&gt;\n<\/pre>\n\nSince 1.15.0 you can provide the function <code>window['sap.ushell.bootstrap.callback']<\/code> for calling back from this method asynchronously. SAPUI5's bootstrap is ongoing then. The same restrictions apply as for the function <code>window['sap-ui-config']['xx-bootTask']<\/code>) when the Unified Shell container has not yet finished its bootstrap. You cannot delay the bootstrap of SAPUI5 or the Unified Shell container; any errors are ignored. This callback is useful for sending asynchronous back-end requests at the earliest opportunity without delaying the core bootstrap of SAPUI5 and the Unified Shell container.","!static":"true","!category":"function","!type":"fn(sPlatform: String, mAdapterPackagesByPlatform?: Object.<string,string>) -> jQuery.Promise"},"System":"sap.ushell.System_obj"},"sap.ushell.services.UserInfo":{"!description":"The Unified Shell's user information service, which allows you to retrieve information about the logged-in user.","!constructorDescription":"This method MUST be called by the Unified Shell's container only, others MUST call\r<code>sap.ushell.Container.getService(\"UserInfo\")<\/code>.\rConstructs a new instance of the user information service.","!module":"sap/ushell/services/UserInfo","!helpDescription":"The Unified Shell's user information service, which allows you to retrieve information about the logged-in user.","!proto":"sap.ui.base.Object","!category":"class","getId":{"!description":"Returns the id of the user.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ushell.services.ShellNavigation":{"init":{"!description":"Initializes ShellNavigation\n\nThis function should be used by a custom renderer in order to implement custom navigation. Do not use this function for developing Fiori applications.\n\nThis method should be invoked by the Shell in order to: - Register the event listener - Register the container callback for the (currently single) ShellHash changes.\n\nSignature of the callback function sShellHashPart, // The hash part on the URL that is resolved and used for application loading sAppSpecificPart // Typically ignored sOldShellHashPart, // The old shell hash part, if exist sOldAppSpecificPart, // The old app hash part, if exist","!static":false,"!category":"function","!type":"fn(fnShellCallback: fn()) -> Object","parameters":{"fnShellCallback":"type: function, description: The callback method for hash changes"}},"!constructorDescription":"The Unified Shell's internal navigation service (platform independent)\rThis method MUST be called by the Unified Shell's container only, others MUST call\r<code>sap.ushell.Container.getService(\"ShellNavigation\")<\/code>.\rConstructs a new instance of the shell navigation service.\r\rNote that the shell instantiation mechanism has to assure exactly one instance is created (!)\r\rThis interface is for consumption by shell renderers/containers only\r\rIt is not for direct usage by applications, see\r  inner app navigation : UI5 interfaces (hashChanger, Router)\r  cross app navigation : @see CrossApplicationNavigation\r\rUsage:\r\rExample: see renders/fiorisandbox/Shell.controller.js\r\r  <pre>\r  sap.ui.define([\r     \"sap/ushell/services/ShellNavigation\"\r  ], function (ShellNavigation) {\r      Shell.onHashChange(shellHash,appHash) {  / *resolve url, load app and exchange root view* / }\r      Shell.init() {\r        this.privShellNavigator = new ShellNavigation();\r        this.privShellNavigator.init(jQuery.proxy(this.doHashChange, this));\r      }\r  });\r  <\/pre>\r\rNote: further app specific integration via the reference app reuse code (setting of app specific handler)\r\rNote: the ShellNavigation service replaces the UI5 core HashChanger which abstracts from the browser url modification.\r\rIt performs the following services:\r  - encoding of the actual browser url hash ( via hasher.js).\r  - expansion of \"shortened\" urls ( AppParameterParts) via invocation.\r  - splitting of shellHash and AppSpecific hash and abstraction w.r.t. Eventing\r\rThus it is crucial to use appropriate interfaces and not directly invoke window.location.hash.\r\r- internal construction methods for a \"current\" App specific and non-app specific hash\r  (invoked by CrossApplicationNavigation), not to be invoked directly!","!module":"sap/ushell/services/ShellNavigation","!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.renderers":{"!module":"sap/ushell/services/Container","fiori2":"sap.ushell.renderers.fiori2","!category":"namespace"},"sap.ushell.ui":{"appfinder":"sap.ushell.ui.appfinder","launchpad":"sap.ushell.ui.launchpad","shell":"sap.ushell.ui.shell","tile":"sap.ushell.ui.tile","footerbar":"sap.ushell.ui.footerbar","!category":"namespace"},"sap.ushell.services.ContainerInterface":{"!description":"This is a virtual type for the callback interface passed by {@link sap.ui.Container.getService} to any newly created service.","!module":"sap/ushell/services/Container","!helpDescription":"This is a virtual type for the callback interface passed by {@link sap.ui.Container.getService} to any newly created service.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.services.Personalization.Variant":{"!description":"The personalization variant contains personalization data. It is used in the personalization container mode.","delItem":{"!description":"Deletes an item from this variant. In case the item does not exist, nothing happens.","!static":false,"!category":"function","!type":"fn(sItemKey: String)","parameters":{"sItemKey":"type: string, description: item key"}},"setItemValue":{"!description":"Sets the value for an item in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String, item: Object)","parameters":{"item":"type: object, description: value (JSON object)","sItemKey":"type: string, description: item key"}},"!proto":"sap.ui.base.Object","containsItem":{"!description":"Checks if a specific item is contained in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Boolean","parameters":{"sItemKey":"type: string, description: item key"}},"setVariantName":{"!description":"Sets the name of the variant.\n\nIn case a variant with <code>sVariantName<\/code> is already existing in the corresponding variant set an exception is thrown.","!static":false,"!category":"function","!type":"fn(sVariantName: String)","parameters":{"sVariantName":"type: string, description: variant name"}},"!category":"class","getItemValue":{"!description":"Returns the value for an item in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Object","parameters":{"sItemKey":"type: string, description: item key"}},"!constructorDescription":"To be instantiated via Personalization.VariantSet  add / get Variant only","!module":"sap/ushell/services/_Personalization/Variant","!helpDescription":"The personalization variant contains personalization data. It is used in the personalization container mode.","getVariantKey":{"!description":"Returns the key of this variant.","!static":false,"!category":"function","!type":"fn() -> String"},"getItemKeys":{"!description":"Returns an array with the keys of all items in this variant.","!static":false,"!category":"function","!type":"fn() -> Array"},"getVariantName":{"!description":"Returns the name of this variant.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ushell.ui.launchpad.GridContainer":{"fireLayoutChange":{"!description":"Fires event {@link #event:layoutChange layoutChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getShowGroupHeader":{"!description":"Gets current value of property {@link #getShowGroupHeader showGroupHeader}.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getIsGroupSelected":{"!description":"Gets current value of property {@link #getIsGroupSelected isGroupSelected}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowEmptyLinksArea":{"!description":"Gets current value of property {@link #getShowEmptyLinksArea showEmptyLinksArea}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertFooterContent":{"!description":"Inserts a footerContent into the aggregation {@link #getFooterContent footerContent}.","!static":false,"!category":"function","!type":"fn(oFooterContent: sap.ui.core.Control, iIndex: Number) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oFooterContent":"type: sap.ui.core.Control, description: The footerContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the footerContent should be inserted at; for a negative value of <code>iIndex<\/code>, the footerContent is inserted at position 0; for a value greater than the current size of the aggregation, the footerContent is inserted at the last position"}},"indexOfBeforeContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getBeforeContent beforeContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oBeforeContent: sap.ui.core.Control) -> Number","parameters":{"oBeforeContent":"type: sap.ui.core.Control, description: The beforeContent whose index is looked for"}},"getEditMode":{"!description":"Gets current value of property {@link #getEditMode editMode}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfFooterContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getFooterContent footerContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFooterContent: sap.ui.core.Control) -> Number","parameters":{"oFooterContent":"type: sap.ui.core.Control, description: The footerContent whose index is looked for"}},"fireTileDragEnter":{"!description":"Fires event {@link #event:tileDragEnter tileDragEnter} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireTitleChange":{"!description":"Fires event {@link #event:titleChange titleChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeFooterContent":{"!description":"Removes a footerContent from the aggregation {@link #getFooterContent footerContent}.","!static":false,"!category":"function","!type":"fn(vFooterContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vFooterContent":"type: int|string|sap.ui.core.Control, description: The footerContent to remove or its index or id"}},"destroyAfterContent":{"!description":"Destroys all the afterContent in the aggregation {@link #getAfterContent afterContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.ui.launchpad.GridContainer"},"removeHeaderAction":{"!description":"Removes a headerAction from the aggregation {@link #getHeaderActions headerActions}.","!static":false,"!category":"function","!type":"fn(vHeaderAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vHeaderAction":"type: int|string|sap.ui.core.Control, description: The headerAction to remove or its index or id"}},"setHeaderText":{"!description":"Sets a new value for property {@link #getHeaderText headerText}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeaderText: String) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"sHeaderText":"type: string, description: New value for property <code>headerText<\/code>"}},"!description":"A container that arranges Tile and Card controls.","attachAfterRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterRendering afterRendering} event of this <code>sap.ushell.ui.launchpad.GridContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.GridContainer<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.GridContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addFooterContent":{"!description":"Adds some footerContent to the aggregation {@link #getFooterContent footerContent}.","!static":false,"!category":"function","!type":"fn(oFooterContent: sap.ui.core.Control) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oFooterContent":"type: sap.ui.core.Control, description: The footerContent to add; if empty, nothing is inserted"}},"setShowBackground":{"!description":"Sets a new value for property {@link #getShowBackground showBackground}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowBackground: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bShowBackground":"type: boolean, description: New value for property <code>showBackground<\/code>"}},"getHomePageGroupDisplay":{"!description":"Gets current value of property {@link #getHomePageGroupDisplay homePageGroupDisplay}.","!static":false,"!category":"function","!type":"fn() -> String"},"removeTile":{"!description":"Removes a tile from the aggregation {@link #getTiles tiles}.","!static":false,"!category":"function","!type":"fn(vTile: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vTile":"type: int|string|sap.ui.core.Control, description: The tile to remove or its index or id"}},"removeAllLinks":{"!description":"Removes all the controls from the aggregation {@link #getLinks links}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachTileDrop":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:tileDrop tileDrop} event of this <code>sap.ushell.ui.launchpad.GridContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.GridContainer<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.GridContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachTileDragEnter":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:tileDragEnter tileDragEnter} event of this <code>sap.ushell.ui.launchpad.GridContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.GridContainer<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.GridContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowIcon":{"!description":"Gets current value of property {@link #getShowIcon showIcon}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.GridContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachTileDragEnter":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:tileDragEnter tileDragEnter} event of this <code>sap.ushell.ui.launchpad.GridContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!module":"sap/ushell/ui/launchpad/GridContainer","getShowBackground":{"!description":"Gets current value of property {@link #getShowBackground showBackground}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTileSizeBehavior":{"!description":"Gets current value of property {@link #getTileSizeBehavior tileSizeBehavior}.\n\nDefault value is <code>TILE_SIZE_BEHAVIOR.RESPONSIVE<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setEditMode":{"!description":"Sets a new value for property {@link #getEditMode editMode}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEditMode: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bEditMode":"type: boolean, description: New value for property <code>editMode<\/code>"}},"getEnableHelp":{"!description":"Gets current value of property {@link #getEnableHelp enableHelp}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfAfterContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getAfterContent afterContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAfterContent: sap.ui.core.Control) -> Number","parameters":{"oAfterContent":"type: sap.ui.core.Control, description: The afterContent whose index is looked for"}},"destroyLinks":{"!description":"Destroys all the links in the aggregation {@link #getLinks links}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.ui.launchpad.GridContainer"},"removeAllBeforeContent":{"!description":"Removes all the controls from the aggregation {@link #getBeforeContent beforeContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getHeaderText":{"!description":"Gets current value of property {@link #getHeaderText headerText}.","!static":false,"!category":"function","!type":"fn() -> String"},"setEnableHelp":{"!description":"Sets a new value for property {@link #getEnableHelp enableHelp}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableHelp: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bEnableHelp":"type: boolean, description: New value for property <code>enableHelp<\/code>"}},"attachTileDragStart":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:tileDragStart tileDragStart} event of this <code>sap.ushell.ui.launchpad.GridContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.GridContainer<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.GridContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachTitleChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:titleChange titleChange} event of this <code>sap.ushell.ui.launchpad.GridContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.GridContainer<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.GridContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowEmptyLinksAreaPlaceHolder":{"!description":"Gets current value of property {@link #getShowEmptyLinksAreaPlaceHolder showEmptyLinksAreaPlaceHolder}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addTile":{"!description":"Adds some tile to the aggregation {@link #getTiles tiles}.","!static":false,"!category":"function","!type":"fn(oTile: sap.ui.core.Control) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oTile":"type: sap.ui.core.Control, description: The tile to add; if empty, nothing is inserted"}},"setDefaultGroup":{"!description":"Sets a new value for property {@link #getDefaultGroup defaultGroup}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDefaultGroup: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bDefaultGroup":"type: boolean, description: New value for property <code>defaultGroup<\/code>"}},"getSupportLinkPersonalization":{"!description":"Gets current value of property {@link #getSupportLinkPersonalization supportLinkPersonalization}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addBeforeContent":{"!description":"Adds some beforeContent to the aggregation {@link #getBeforeContent beforeContent}.","!static":false,"!category":"function","!type":"fn(oBeforeContent: sap.ui.core.Control) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oBeforeContent":"type: sap.ui.core.Control, description: The beforeContent to add; if empty, nothing is inserted"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefault value is <code>sap-icon://locked<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeBeforeContent":{"!description":"Removes a beforeContent from the aggregation {@link #getBeforeContent beforeContent}.","!static":false,"!category":"function","!type":"fn(vBeforeContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vBeforeContent":"type: int|string|sap.ui.core.Control, description: The beforeContent to remove or its index or id"}},"detachTileDragStart":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:tileDragStart tileDragStart} event of this <code>sap.ushell.ui.launchpad.GridContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertBeforeContent":{"!description":"Inserts a beforeContent into the aggregation {@link #getBeforeContent beforeContent}.","!static":false,"!category":"function","!type":"fn(oBeforeContent: sap.ui.core.Control, iIndex: Number) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oBeforeContent":"type: sap.ui.core.Control, description: The beforeContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the beforeContent should be inserted at; for a negative value of <code>iIndex<\/code>, the beforeContent is inserted at position 0; for a value greater than the current size of the aggregation, the beforeContent is inserted at the last position"}},"removeAfterContent":{"!description":"Removes a afterContent from the aggregation {@link #getAfterContent afterContent}.","!static":false,"!category":"function","!type":"fn(vAfterContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAfterContent":"type: int|string|sap.ui.core.Control, description: The afterContent to remove or its index or id"}},"removeAllFooterContent":{"!description":"Removes all the controls from the aggregation {@link #getFooterContent footerContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getIsGroupLocked":{"!description":"Gets current value of property {@link #getIsGroupLocked isGroupLocked}.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getGroupHeaderLevel":{"!description":"Gets current value of property {@link #getGroupHeaderLevel groupHeaderLevel}.\n\nDefault value is <code>H4<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.HeaderLevel"},"getTileActionModeActive":{"!description":"Gets current value of property {@link #getTileActionModeActive tileActionModeActive}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setGroupId":{"!description":"Sets a new value for property {@link #getGroupId groupId}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sGroupId: String) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"sGroupId":"type: string, description: New value for property <code>groupId<\/code>"}},"fireTileDrop":{"!description":"Fires event {@link #event:tileDrop tileDrop} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getIsLastGroup":{"!description":"Gets current value of property {@link #getIsLastGroup isLastGroup}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfLink":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getLinks links}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oLink: sap.ui.core.Control) -> Number","parameters":{"oLink":"type: sap.ui.core.Control, description: The link whose index is looked for"}},"detachTileDrop":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:tileDrop tileDrop} event of this <code>sap.ushell.ui.launchpad.GridContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setHeaderLevel":{"!description":"Sets a new value for property {@link #getHeaderLevel headerLevel}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>H2<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderLevel: sap.m.HeaderLevel) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"sHeaderLevel":"type: sap.m.HeaderLevel, description: New value for property <code>headerLevel<\/code>"}},"getGroupId":{"!description":"Gets current value of property {@link #getGroupId groupId}.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllTiles":{"!description":"Removes all the controls from the aggregation {@link #getTiles tiles}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllHeaderActions":{"!description":"Removes all the controls from the aggregation {@link #getHeaderActions headerActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getBeforeContent":{"!description":"Gets content of aggregation {@link #getBeforeContent beforeContent}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"insertTile":{"!description":"Inserts a tile into the aggregation {@link #getTiles tiles}.","!static":false,"!category":"function","!type":"fn(oTile: sap.ui.core.Control, iIndex: Number) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the tile should be inserted at; for a negative value of <code>iIndex<\/code>, the tile is inserted at position 0; for a value greater than the current size of the aggregation, the tile is inserted at the last position","oTile":"type: sap.ui.core.Control, description: The tile to insert; if empty, nothing is inserted"}},"setGroupHeaderLevel":{"!description":"Sets a new value for property {@link #getGroupHeaderLevel groupHeaderLevel}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>H4<\/code>.","!static":false,"!category":"function","!type":"fn(sGroupHeaderLevel: sap.m.HeaderLevel) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"sGroupHeaderLevel":"type: sap.m.HeaderLevel, description: New value for property <code>groupHeaderLevel<\/code>"}},"insertAfterContent":{"!description":"Inserts a afterContent into the aggregation {@link #getAfterContent afterContent}.","!static":false,"!category":"function","!type":"fn(oAfterContent: sap.ui.core.Control, iIndex: Number) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oAfterContent":"type: sap.ui.core.Control, description: The afterContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the afterContent should be inserted at; for a negative value of <code>iIndex<\/code>, the afterContent is inserted at position 0; for a value greater than the current size of the aggregation, the afterContent is inserted at the last position"}},"addAfterContent":{"!description":"Adds some afterContent to the aggregation {@link #getAfterContent afterContent}.","!static":false,"!category":"function","!type":"fn(oAfterContent: sap.ui.core.Control) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oAfterContent":"type: sap.ui.core.Control, description: The afterContent to add; if empty, nothing is inserted"}},"getHeaderLevel":{"!description":"Gets current value of property {@link #getHeaderLevel headerLevel}.\n\nDefault value is <code>H2<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.HeaderLevel"},"setIsLastGroup":{"!description":"Sets a new value for property {@link #getIsLastGroup isLastGroup}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsLastGroup: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bIsLastGroup":"type: boolean, description: New value for property <code>isLastGroup<\/code>"}},"setShowHeader":{"!description":"Sets a new value for property {@link #getShowHeader showHeader}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeader: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.launchpad.GridContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfHeaderAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getHeaderActions headerActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeaderAction: sap.ui.core.Control) -> Number","parameters":{"oHeaderAction":"type: sap.ui.core.Control, description: The headerAction whose index is looked for"}},"fireTileDragStart":{"!description":"Fires event {@link #event:tileDragStart tileDragStart} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setSupportLinkPersonalization":{"!description":"Sets a new value for property {@link #getSupportLinkPersonalization supportLinkPersonalization}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSupportLinkPersonalization: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bSupportLinkPersonalization":"type: boolean, description: New value for property <code>supportLinkPersonalization<\/code>"}},"getAfterContent":{"!description":"Gets content of aggregation {@link #getAfterContent afterContent}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getShowHeader":{"!description":"Gets current value of property {@link #getShowHeader showHeader}.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyTiles":{"!description":"Destroys all the tiles in the aggregation {@link #getTiles tiles}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.ui.launchpad.GridContainer"},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>sap-icon://locked<\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: String) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"setIsGroupLocked":{"!description":"Sets a new value for property {@link #getIsGroupLocked isGroupLocked}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bIsGroupLocked: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bIsGroupLocked":"type: boolean, description: New value for property <code>isGroupLocked<\/code>"}},"destroyHeaderActions":{"!description":"Destroys all the headerActions in the aggregation {@link #getHeaderActions headerActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.ui.launchpad.GridContainer"},"!helpDescription":"A container that arranges Tile and Card controls.","setIsGroupSelected":{"!description":"Sets a new value for property {@link #getIsGroupSelected isGroupSelected}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsGroupSelected: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bIsGroupSelected":"type: boolean, description: New value for property <code>isGroupSelected<\/code>"}},"fireAfterRendering":{"!description":"Fires event {@link #event:afterRendering afterRendering} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"addLink":{"!description":"Adds some link to the aggregation {@link #getLinks links}.","!static":false,"!category":"function","!type":"fn(oLink: sap.ui.core.Control) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oLink":"type: sap.ui.core.Control, description: The link to add; if empty, nothing is inserted"}},"getHeaderActions":{"!description":"Gets content of aggregation {@link #getHeaderActions headerActions}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setTileSizeBehavior":{"!description":"Sets a new value for property {@link #getTileSizeBehavior tileSizeBehavior}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>TILE_SIZE_BEHAVIOR.RESPONSIVE<\/code>.","!static":false,"!category":"function","!type":"fn(sTileSizeBehavior: String) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"sTileSizeBehavior":"type: string, description: New value for property <code>tileSizeBehavior<\/code>"}},"setShowGroupHeader":{"!description":"Sets a new value for property {@link #getShowGroupHeader showGroupHeader}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGroupHeader: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bShowGroupHeader":"type: boolean, description: New value for property <code>showGroupHeader<\/code>"}},"insertLink":{"!description":"Inserts a link into the aggregation {@link #getLinks links}.","!static":false,"!category":"function","!type":"fn(oLink: sap.ui.core.Control, iIndex: Number) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oLink":"type: sap.ui.core.Control, description: The link to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the link should be inserted at; for a negative value of <code>iIndex<\/code>, the link is inserted at position 0; for a value greater than the current size of the aggregation, the link is inserted at the last position"}},"addHeaderAction":{"!description":"Adds some headerAction to the aggregation {@link #getHeaderActions headerActions}.","!static":false,"!category":"function","!type":"fn(oHeaderAction: sap.ui.core.Control) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oHeaderAction":"type: sap.ui.core.Control, description: The headerAction to add; if empty, nothing is inserted"}},"getLinks":{"!description":"Gets content of aggregation {@link #getLinks links}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"insertHeaderAction":{"!description":"Inserts a headerAction into the aggregation {@link #getHeaderActions headerActions}.","!static":false,"!category":"function","!type":"fn(oHeaderAction: sap.ui.core.Control, iIndex: Number) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oHeaderAction":"type: sap.ui.core.Control, description: The headerAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the headerAction should be inserted at; for a negative value of <code>iIndex<\/code>, the headerAction is inserted at position 0; for a value greater than the current size of the aggregation, the headerAction is inserted at the last position"}},"setShowIcon":{"!description":"Sets a new value for property {@link #getShowIcon showIcon}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowIcon: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bShowIcon":"type: boolean, description: New value for property <code>showIcon<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","setHomePageGroupDisplay":{"!description":"Sets a new value for property {@link #getHomePageGroupDisplay homePageGroupDisplay}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHomePageGroupDisplay: String) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"sHomePageGroupDisplay":"type: string, description: New value for property <code>homePageGroupDisplay<\/code>"}},"detachLayoutChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:layoutChange layoutChange} event of this <code>sap.ushell.ui.launchpad.GridContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroyBeforeContent":{"!description":"Destroys all the beforeContent in the aggregation {@link #getBeforeContent beforeContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.ui.launchpad.GridContainer"},"!constructorDescription":"Constructor for a new sap/ushell/ui/launchpad/GridContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGroupId groupId} : string<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getDefaultGroup defaultGroup} : boolean (default: false)<\/li>\n<li>{@link #getIsLastGroup isLastGroup} : boolean (default: false)<\/li>\n<li>{@link #getHeaderText headerText} : string<\/li>\n<li>{@link #getHeaderLevel headerLevel} : sap.m.HeaderLevel (default: H2)<\/li>\n<li>{@link #getGroupHeaderLevel groupHeaderLevel} : sap.m.HeaderLevel (default: H4)<\/li>\n<li>{@link #getShowGroupHeader showGroupHeader} : boolean (default: true)<\/li>\n<li>{@link #getHomePageGroupDisplay homePageGroupDisplay} : string<\/li>\n<li>{@link #getIsGroupLocked isGroupLocked} : boolean<\/li>\n<li>{@link #getIsGroupSelected isGroupSelected} : boolean (default: false)<\/li>\n<li>{@link #getEditMode editMode} : boolean (default: false)<\/li>\n<li>{@link #getShowBackground showBackground} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : string (default: sap-icon://locked)<\/li>\n<li>{@link #getShowIcon showIcon} : boolean (default: false)<\/li>\n<li>{@link #getEnableHelp enableHelp} : boolean (default: false)<\/li>\n<li>{@link #getTileActionModeActive tileActionModeActive} : boolean (default: false)<\/li>\n<li>{@link #getIeHtml5DnD ieHtml5DnD} : boolean (default: false)<\/li>\n<li>{@link #getShowEmptyLinksArea showEmptyLinksArea} : boolean (default: false)<\/li>\n<li>{@link #getShowEmptyLinksAreaPlaceHolder showEmptyLinksAreaPlaceHolder} : boolean (default: false)<\/li>\n<li>{@link #getSupportLinkPersonalization supportLinkPersonalization} : boolean (default: false)<\/li>\n<li>{@link #getTileSizeBehavior tileSizeBehavior} : string (default: TILE_SIZE_BEHAVIOR.RESPONSIVE)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTiles tiles} : sap.ui.core.Control[]<\/li>\n<li>{@link #getLinks links} : sap.ui.core.Control[]<\/li>\n<li>{@link #getBeforeContent beforeContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getAfterContent afterContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getFooterContent footerContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getHeaderActions headerActions} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:titleChange titleChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tileDragStart tileDragStart} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tileDragEnter tileDragEnter} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tileDrop tileDrop} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:layoutChange layoutChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setIeHtml5DnD":{"!description":"Sets a new value for property {@link #getIeHtml5DnD ieHtml5DnD}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIeHtml5DnD: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bIeHtml5DnD":"type: boolean, description: New value for property <code>ieHtml5DnD<\/code>"}},"destroyFooterContent":{"!description":"Destroys all the footerContent in the aggregation {@link #getFooterContent footerContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.ui.launchpad.GridContainer"},"setTileActionModeActive":{"!description":"Sets a new value for property {@link #getTileActionModeActive tileActionModeActive}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bTileActionModeActive: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bTileActionModeActive":"type: boolean, description: New value for property <code>tileActionModeActive<\/code>"}},"setShowEmptyLinksAreaPlaceHolder":{"!description":"Sets a new value for property {@link #getShowEmptyLinksAreaPlaceHolder showEmptyLinksAreaPlaceHolder}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowEmptyLinksAreaPlaceHolder: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bShowEmptyLinksAreaPlaceHolder":"type: boolean, description: New value for property <code>showEmptyLinksAreaPlaceHolder<\/code>"}},"attachLayoutChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:layoutChange layoutChange} event of this <code>sap.ushell.ui.launchpad.GridContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.GridContainer<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.GridContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachTitleChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:titleChange titleChange} event of this <code>sap.ushell.ui.launchpad.GridContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getDefaultGroup":{"!description":"Gets current value of property {@link #getDefaultGroup defaultGroup}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFooterContent":{"!description":"Gets content of aggregation {@link #getFooterContent footerContent}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeLink":{"!description":"Removes a link from the aggregation {@link #getLinks links}.","!static":false,"!category":"function","!type":"fn(vLink: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vLink":"type: int|string|sap.ui.core.Control, description: The link to remove or its index or id"}},"setShowEmptyLinksArea":{"!description":"Sets a new value for property {@link #getShowEmptyLinksArea showEmptyLinksArea}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowEmptyLinksArea: Boolean) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"bShowEmptyLinksArea":"type: boolean, description: New value for property <code>showEmptyLinksArea<\/code>"}},"getIeHtml5DnD":{"!description":"Gets current value of property {@link #getIeHtml5DnD ieHtml5DnD}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfTile":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getTiles tiles}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTile: sap.ui.core.Control) -> Number","parameters":{"oTile":"type: sap.ui.core.Control, description: The tile whose index is looked for"}},"removeAllAfterContent":{"!description":"Removes all the controls from the aggregation {@link #getAfterContent afterContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"detachAfterRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterRendering afterRendering} event of this <code>sap.ushell.ui.launchpad.GridContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.launchpad.GridContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getTiles":{"!description":"Gets content of aggregation {@link #getTiles tiles}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"}},"sap.ushell.services.EndUserFeedback":{"!description":"The Unified Shell's end user feedback service","!constructorDescription":"This method MUST be called by the Unified Shell's container only, others MUST call <code>sap.ushell.Container.getService(\"EndUserFeedback\")<\/code>.\rConstructs a new instance of the end user feedback service.","!module":"sap/ushell/services/EndUserFeedback","getLegalText":{"!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"The Unified Shell's end user feedback service","isEnabled":{"!description":"Checks if the service is enabled.<p> The service enablement depends on the configuration in the back-end system and the bootstrap configuration.","!static":false,"!category":"function","!type":"fn() -> Object"},"!proto":"sap.ui.base.Object","!category":"class","sendFeedback":{"!description":"Sends a feedback. Forwards the given data (JSON object) to the associated adapter.","!static":false,"!category":"function","!type":"fn(JSON: JSON)","parameters":{"JSON":"type: JSON, description: object containing the input fields required for the end user feedback."}}},"sap.ushell.services.PersonalizationContainer_obj":{"!type":"fn()","prototype":"sap.ushell.services.PersonalizationContainer"},"sap.ushell.services.PersonalizationContainerVariantSet":{"!description":"The personalization variant set contains variants of personalization data. It is used in the personalization container mode.","getVariantKeys":{"!description":"Returns an array with the keys of the variants in the variant set.","!static":false,"!category":"function","!type":"fn() -> Array"},"!constructorDescription":"To be called by the personalization container.","!module":"sap/ushell/services/_Personalization/PersonalizationContainerVariantSet","!helpDescription":"The personalization variant set contains variants of personalization data. It is used in the personalization container mode.","getCurrentVariantKey":{"!description":"Returns the current variant key.","!static":false,"!category":"function","!type":"fn() -> String"},"getVariant":{"!description":"Returns a variant object.","!static":false,"!category":"function","!type":"fn(sVariantKey: String) -> Object","parameters":{"sVariantKey":"type: string, description: variant key"}},"!proto":"sap.ui.base.Object","!category":"class","getVariantKeyByName":{"!description":"Returns the variant key corresponding to a variant name.","!static":false,"!category":"function","!type":"fn(sVariantName: String) -> Object","parameters":{"sVariantName":"type: string, description: variant name"}},"containsVariant":{"!description":"Checks if a specific variant is contained in the variant set.","!static":false,"!category":"function","!type":"fn(sVariantKey: String) -> Boolean","parameters":{"sVariantKey":"type: string, description: variant key"}},"setCurrentVariantKey":{"!description":"Sets the current variant key.","!static":false,"!category":"function","!type":"fn(sVariantKey: String)","parameters":{"sVariantKey":"type: string, description: There is no validity check for the variant key."}}},"sap.ushell.services.AppLifeCycle_obj":{"!type":"fn(oAdapter: Object, oContainerInterface: Object, sParameter: String, oConfig: Object)","prototype":"sap.ushell.services.AppLifeCycle"},"sap.ushell.renderers.fiori2.Renderer":{"hideHeaderItem":{"!description":"Hide the given sap.ushell.ui.shell.ShellHeadItem from Fiori Launchpad, in the given launchpad states. The removed control will not be destroyed.<br><br> This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: String[], description: the Ids of the sap.ushell.ui.shell.ShellHeadItem to remove.","aStates":"type: String[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control. (Only valid if bCurrentState is set to false)"}},"showHeaderItem":{"!description":"Creates and displays one or more HeaderItem controls according to the given control IDs and Shell states<br> (see sap.ushell.renderers.fiori2.renderer.LaunchpadState).<br><br> The HeaderItem controls will be displayed on the left side of the Fiori Launchpad shell header according to the given display parameters.<br> There can be up to three header items. If the number of existing header items plus the given ones exceeds 3, then the operation fails and no new header items are created.<br>\n\n<b>Example:<\/b> <pre>\nvar button1 = new sap.ushell.ui.shell.ShellHeadItem();\nvar button2 = new sap.ushell.ui.shell.ShellHeadItem();\nvar renderer = sap.ushell.Container.getRenderer(\"fiori2\");\nrenderer.showHeaderItem ([button1.getId(), button2.getId()], false, [\"home\", \"app\"]);\n<\/pre>","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the new created controls are added to the current rendered shell state.<br> When the user navigates to another application (including the Home page) then the controls will be removed.<br> If <code>false<\/code> then the controls are added to the LaunchPadState itself.<br>","aIds":"type: String[], description: IDs Array of headerItem controls that should be added to the shell header<br>","aStates":"type: String[], description: (Valid only if bCurrentState is <code>false<\/code>)<br> A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the controls are added.<br> If no launchpad state is provided the controls are added in all states."}},"showHeaderEndItem":{"!description":"Displays HeaderItems on the right side of the Fiori launchpad shell header, in the given launchpad states (see sap.ushell.renderers.fiori2.renderer.LaunchpadState).<\/br> If no launchpad state is provided the content is displayed in all states.<\/br> The shell header can display the user HeaderItem, and just one more HeaderItem.<\/br> If this method is called when the right side of the header is full, this method will not do anything.<\/br>\n\n<b>Example:<\/b> <pre>\nvar button1 = new sap.ushell.ui.shell.ShellHeadItem();\nvar renderer = sap.ushell.Container.getRenderer(\"fiori2\");\nrenderer.showHeaderEndItem ([button1.getId()], false, [\"home\", \"app\"]);\n<\/pre>","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, add the current HeaderItems only to the current instance of the rendering of the shell. if false, add the HeaderItems to the LaunchPadState itself.","aIds":"type: String[], description: List of ID elements to add to the shell header.","aStates":"type: String[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.renderer.LaunchpadState in which to add the aIds."}},"addEndUserFeedbackCustomUI":{"!description":"Adds the given sap.ui.core.Control to the EndUserFeedback dialog.<\/br> The EndUserFeedback dialog is opened via the user actions menu in the Fiori Launchpad shell header.","!static":false,"!category":"function","!type":"fn(oCustomUIContent: Object, bShowCustomUIContent: Boolean)","parameters":{"oCustomUIContent":"type: object, description: The control to be added to the EndUserFeedback dialog.","bShowCustomUIContent":"type: boolean, description: Specify whether to display the control."}},"!proto":"sap.ui.core.UIComponent","getCurrentViewportState":{"!description":"This method returns the current state of the Viewport Container control.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","addHeaderItem":{"!description":"Creates and displays an item in the header of Fiori launchpad, in the given launchpad states.<br> The new header item will be displayed on the left-hand side of the Fiori Launchpad shell header, according to the given display parameters.<br> The new header item will be added to the right of any existing header items. The header can contain a maximum of three header items.<br><br>\n\n<b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\noRenderer.addHeaderItem(\"sap.ushell.ui.shell.ShellHeadItem\", {id: \"testBtn\"}, true, true);\n<\/pre>","!static":false,"!category":"function","!type":"fn(controlType?: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the new created control is added to the current rendered shell state.<br> When the user navigates to a different state including a different application then the control will be removed.<br> If <code>false<\/code> then add the control to the LaunchPadState itself.<br>","controlType":"type: string, description: The (class) name of the control type to create. For example: <code>\"sap.m.Button\"<\/code><br> <b>Deprecated<\/b>: Since version 1.38. This property is no longer supported.","bIsVisible":"type: boolean, description: Specifies whether the header item control is displayed after being created.<br> If <code>true<\/code> then the control is displayed according to parameters bCurrentState and aStates.<br> If <code>false<\/code> then the control is created but not displayed.<br>","oControlProperties":"type: object, description: The properties that will be passed to the created control. For example: <code>{id: \"testButton\"}<\/code><br>","aStates":"type: String[], description: (Valid only if bCurrentState is <code>false<\/code>)<br> A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the control is added.<br> If no launchpad state is provided the control is added in all states."}},"removeToolAreaItem":{"!description":"Remove the given Tool Area Item from Fiori Launchpad, in the given launchpad states. This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(vIds: [String | String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code>, remove the items from the currently rendered shell. If <code>false<\/code>, remove the items from the LaunchPadState itself, causing the items to be removed everytime the given states are active.","vIds":"type: string|String[], description: A single ID or an array of IDs to remove from the Tool Area.","aStates":"type: String[], description: (only valid if bCurrentState is set to <code>false<\/code>) - An array of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) from which the controls are removed. If no launchpad state is provided the items are removed from all states."}},"addSidePaneContent":{"!description":"Creates the Left Pane content in Fiori launchpad, in the given launchpad states.<\/br>\n\n<b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\"),\n    oLeftPaneContentProperties = {\n        controlType : \"sap.m.Button\",\n        oControlProperties : {\n            id: \"testBtn\",\n            text: \"Test Button\"\n        },\n        bIsVisible: true,\n        bCurrentState: true\n    };\n\noRenderer.addSidePaneContent(oLeftPaneContentProperties);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oParameters: Object) -> Object","parameters":{"oParameters":"type: object, description: Contains the parameters that are required for creating and showing the new control object:<br> Properties:<br> - {string} controlType<br> The (class) name of the control type to create.<br> - {object} oControlProperties<br> The properties that will be passed to the created control.<br> - {boolean} bIsVisible<br> Specify whether to display the control.<br> - {boolean} bCurrentState<br> If true, add the current control only to the current rendered shell state.<br> Once the user navigates to another app or back to the Home page, this control will be removed.<br> - {String[]} aStates<br> (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control.<br>"}},"addShellSubHeader":{"!description":"Creates and displays a sub header control in Fiori launchpad, in the given launchpad states.<br> The new control is displayed in FLP UI according to the given display parameters.<br> If a sub header already exists, the new created one will replace the existing one.<br><br> <b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\"),\n    oAddSubHeaderProperties = {\n        controlType : \"sap.m.Bar\",\n        oControlProperties : {\n            id: \"testBar\",\n            contentLeft: [new sap.m.Button({\n                text: \"Test SubHeader Button\",\n                press: function () {\n                    sap.m.MessageToast.show(\"Pressed\");\n                }\n            })\n        },\n        bIsVisible: true,\n        bCurrentState: true\n    };\n\noRenderer.addShellSubHeader(oAddSubHeaderProperties);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oParameters: Object) -> Object","parameters":{"oParameters":"type: object, description: Contains the required parameters for creating and showing the new control object:<br> Properties:<br> - {string} controlType<br> The (class) name of the control type to create.<br> - {object} oControlProperties<br> The properties that will be passed to the created control.<br> - {boolean} bIsVisible<br> Specify whether to display the control.<br> - {boolean} bCurrentState<br> If true, add the current control only to the current rendered shell state.<br> Once the user navigates to another app or back to the Home page, this control will be removed.<br> - {String[]} aStates<br> (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control.<br>"}},"showFloatingActionButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.52 undefined<br>Displays FloatingActionButton on the bottom right corner of the Fiori launchpad, in the given launchpad states. The FloatingActionButton is rendered in the bottom right corner of the shell.<\/br> (see sap.ushell.renderers.fiori2.renderer.LaunchpadState).<\/br> If no launchpad state is provided the content is displayed in all states.<\/br>\n\n<b>Example:<\/b> <pre>\nvar button1 = new sap.ushell.ui.shell.ShellFloatingAction();\nvar renderer = sap.ushell.Container.getRenderer(\"fiori2\");\nrenderer.showFloatingActionButton([button1.getId()], true);\n<\/pre>","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, add the current Buttons only to the current instance of the rendering of the shell. if false, add the Buttons to the LaunchPadState itself.","aIds":"type: String[], description: List of ID elements to add to the user actions menu.","aStates":"type: String[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.renderer.LaunchpadState in which to add the aIds."}},"hideLeftPaneContent":{"!description":"Hide the given control from Fiori Launchpad, in the given launchpad states. The removed control will not be destroyed.<br><br> This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: String[], description: the Ids of the controls to remove.","aStates":"type: String[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control. (Only valid if bCurrentState is set to false)"}},"!constructorDescription":"This method MUST be called by the Unified Shell's container only, others MUST call <code>sap.ushell.Container.createRenderer(\"fiori2\")<\/code>.","addUserAction":{"!description":"Creates an Action Button in Fiori launchpad, in the given launchpad states. <\/br> The button will be displayed in the user actions menu, that is opened from the user button in the shell header.<\/br> <b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\"),\n    oAddActionButtonProperties = {\n        controlType : \"sap.m.Button\",\n        oControlProperties : {\n            id: \"exampleButton\",\n            text: \"Example Button\",\n            icon: \"sap-icon://refresh\",\n            press: function () {\n                alert(\"Example Button was pressed!\");\n            }\n        },\n        bIsVisible: true,\n        bCurrentState: true\n    };\noRenderer.addUserAction(oAddActionButtonProperties);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oParameters: Object) -> Object","parameters":{"oParameters":"type: object, description: Contains the required parameters for creating and showing the new control object:<br> Properties:<br> - {string} controlType<br> The (class) name of the control type to create.<br> - {object} oControlProperties<br> The properties that will be passed to the created control.<br> - {boolean} bIsVisible<br> Specify whether to display the control.<br> - {boolean} bCurrentState<br> If true, add the current control only to the current rendered shell state.<br> Once the user navigates to another app or back to the Home page, this control will be removed.<br> - {String[]} aStates<br> (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control.<br>"}},"removeFooter":{"!description":"If exists, this method will remove the footer from the Fiori Launchpad.<br><br> This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn()"},"setFooterControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 (as a result of XMLHttpRequest spec prohibiting the sending of synchronous requests). Use <code>setShellFooter<code> instead<br>Creates and displays an SAPUI5 control as the footer of the Fiori launchpad shell.<br> The footer will be displayed in all states. <br> Previously created footer will be removed. <br>\n\n<b>For example, using the sap.m.Bar control:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\noRenderer.setFooterControl(\"sap.m.Bar\", {id: \"testBar\", contentLeft: [new sap.m.Button({text: \"Test Footer Button\",\n  press: function () {\n    sap.m.MessageToast.show(\"Pressed\");\n  }})\n]});\n<\/pre>\n\nThis function is marked for deprecation as of version 1.48.<br> It will continue to work as expected as long as one of the following conditions apply:<br> 1. The control instance is already created and its ID is included in the input parameter oControlProperties<br> 2. The control type resource is already loaded<br> 3. Synchronous XHR requests are supported by the browser<br>","!static":false,"!category":"function","!type":"fn(controlType: String, oControlProperties: Object) -> Object","parameters":{"controlType":"type: string, description: The (class) name of the control type to create.<br> For example: <code>\"sap.m.Bar\"<\/code><br>","oControlProperties":"type: object, description: The properties that will be passed to the created control.<br> For example: <code>{id: \"testBar\"}<\/code><br>"}},"setHeaderVisibility":{"!description":"Sets the header visibility accrding to the given value and shell states. (see sap.ushell.renderers.fiori2.renderer.LaunchpadState).\n\n<b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\noRenderer.setHeaderVisibility(false, false, [\"home\", \"app\"]);\n<\/pre>","!static":false,"!category":"function","!type":"fn(bVisible: Boolean, bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the visibility is set only to the current rendered shell state.<br> When the user navigates to another application (including the Home page) then the visibility flag is reset.<br> If <code>false<\/code> then set the visibility according to the states provided in the aState parameter.<br>","aStates":"type: String[], description: (Valid only if bCurrentState is <code>false<\/code>)<br> A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the header visibility flag should be set.<br> If no launchpad state is provided the visibility flag is set for all states.","bVisible":"type: boolean, description: The visibility of the header<br>"}},"setShellFooter":{"!description":"Creates and displays an SAPUI5 control as the footer of the Fiori launchpad shell.<br> The footer will be displayed in all states. <br> Previously created footer will be removed. <br>\n\n<b>For example, using the sap.m.Bar control:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\"),\n  oFooterControlProperties = {\n    controlType : \"sap.m.Bar\",\n    oControlProperties : {\n      id: \"testBar\",\n      contentLeft: [new sap.m.Button({\n        text: \"Test Footer Button\",\n        press: function () {\n          sap.m.MessageToast.show(\"Pressed\");\n        }\n      })]\n    }\n  };\noRenderer.setShellFooter(oFooterControlProperties);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oParameters: Object) -> Object","parameters":{"oParameters":"type: object, description: Contains the required parameters for creating and showing the new control object:<br> Properties:<br> - {string} controlType<br> The (class) name of the control type to create, for example: <code>\"sap.m.Bar\"<\/code><br> - {object} oControlProperties<br> The properties that will be passed to the created control, for example: <code>{id: \"testBar\"}<\/code><br>"}},"showSubHeader":{"!description":"Displays one or more sub header controls according to the given control IDs and shell states.<br> (see sap.ushell.renderers.fiori2.renderer.LaunchpadState).<br><br> A sub header is placed in a container, located directly below the main Fiori launchpad shell header.<br>\n\n<b>Example:<\/b> <pre>\nvar bar = new sap.m.Bar({id: \"testBar\", contentLeft: [new sap.m.Button({text: \"Test SubHeader Button\",\n  press: function () {\n    sap.m.MessageToast.show(\"Pressed\");\n  }})\n]});\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\noRenderer.showSubHeader([bar.getId()], false, [\"home\", \"app\"]);\n<\/pre>","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the new created controls are added only to the current rendered shell state.<br> When the user navigates to another application (including the Home page) then the controls will be removed.<br> If <code>false<\/code> then add the control to the LaunchPadState itself.<br>","aIds":"type: String[], description: Array of sub header control IDs to be added<br>","aStates":"type: String[], description: (Valid only if bCurrentState is <code>false<\/code>)<br> A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the controls are added.<br> If no launchpad state is provided the controls are added in all states."}},"addToolAreaItem":{"!description":"Creates a ToolAreaItem in Fiori Launchpad and adds it to the Tool Area, in the given launchpad states. Once the item is added, the Tool Area is rendered on the left side on the Fiori Launchpad shell.\n\n<b>Example:<\/b> <pre>\nsap.ushell.Container.getRenderer(\"fiori2\").addToolAreaItem({\n  id: \"testButton\",\n  icon: \"sap-icon://documents\",\n  expandable: true,\n  press: function (evt) {\n    window.alert(\"Press\" );\n  },\n  expand: function (evt) {\n    // This function will be called on the press event of the \"expand\" button. The result of \"expand\" event in the UI must be determined by the developer\n    window.alert(\"Expand\" );\n  }\n}, true, false, [\"home\"]);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code>, add the item to the currently rendered shell. If <code>false<\/code>, add the item to the given LaunchPadStates This causes the items to be rendered everytime the given states are active.","bIsVisible":"type: boolean, description: Specify whether to display the control.","oControlProperties":"type: object, description: The properties object that will be passed to the constructor of sap.ushell.ui.shell.ToolAreaItem control.","aStates":"type: String[], description: (only valid if bCurrentState is set to <code>false<\/code>) - An array of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the controls are added. If no launchpad state is provided the items are added in all states."}},"showActionButton":{"!description":"Displays action buttons in the User Actions Menu in the SAP Fiori launchpad, in the given launchpad states (LaunchpadState). (see sap.ushell.renderers.fiori2.renderer.LaunchpadState).<\/br> If no launchpad state is provided the content is displayed in all states.<\/br> The user actions menu is opened via the button on the right hand side of the shell header.<\/br>\n\n<b>Example:<\/b> <pre>\nvar button1 = new sap.m.Button();\nvar renderer = sap.ushell.Container.getRenderer(\"fiori2\");\nrenderer.showActionButton([button1.getId()], false, [\"home\", \"app\"]);\n<\/pre>","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If true, add the created control to the current rendered shell state. When the user navigates to a different state, or to a different application, then the control is removed. If false, the control is added to the LaunchpadState.","aIds":"type: String[], description: List of ID elements to that should be added to the User Actions Menu options bar.","aStates":"type: String[], description: List of the launchpad states (sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which to add the aIds. Valid only if bCurrentState is set to false."}},"hideHeaderEndItem":{"!description":"Hide the given sap.ushell.ui.shell.ShellHeadItem from Fiori Launchpad, in the given launchpad states. The removed control will not be destroyed.<br><br> This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: String[], description: the Ids of the sap.ushell.ui.shell.ShellHeadItem to remove.","aStates":"type: String[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control. (Only valid if bCurrentState is set to false)"}},"!description":"The SAPUI5 component of SAP Fiori Launchpad renderer for the Unified Shell.","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.renderers.fiori2.Renderer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"addLeftPaneContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 (as a result of XMLHttpRequest spec prohibiting the sending of synchronous requests). Use <code>addSidePaneContent<code> instead<br>Creates the Left Pane content in Fiori launchpad, in the given launchpad states.<\/br>\n\n<b>Example:<\/b> <pre>\nsap.ushell.Container.getRenderer(\"fiori2\").addLeftPaneContent(\"sap.m.Button\", {id: \"testBtn\", text: \"Test Button\"}, true, true);\n<\/pre>\n\nThis function is marked for deprecation as of version 1.48.<br> It will continue to work as expected as long as one of the following conditions apply:<br> 1. The control instance is already created and its ID is included in the input parameter oControlProperties<br> 2. The control type resource is already loaded<br> 3. Synchronous XHR requests are supported by the browser<br>","!static":false,"!category":"function","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","parameters":{"bCurrentState":"type: boolean, description: If true, add the current control only to the current rendered shell state. Once the user navigates to another app or back to the Home page, this control will be removed.","controlType":"type: string, description: The (class) name of the control type to create.","bIsVisible":"type: boolean, description: Specify whether to display the control.","oControlProperties":"type: object, description: The properties that will be passed to the created control.","aStates":"type: String[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control."}},"addSubHeader":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 (as a result of XMLHttpRequest spec prohibiting the sending of synchronous requests). Use <code>addShellSubHeader<code> instead<br>Creates and displays a sub header control in Fiori launchpad, in the given launchpad states.<br> The new control is displayed in FLP UI according to the given display parameters.<br> If a sub header already exists, the new created one will replace the existing one.<br><br>\n\n<b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\noRenderer.addSubHeader(\"sap.m.Bar\", {id: \"testBar\", contentLeft: [new sap.m.Button({text: \"Test SubHeader Button\",\n  press: function () {\n    sap.m.MessageToast.show(\"Pressed\");\n  }})\n]}, true, true);\n<\/pre>\n\nThis function is marked for deprecation as of version 1.48.<br> It will continue to work as expected as long as one of the following conditions apply:<br> 1. The control instance is already created and its ID is included in the input parameter oControlProperties<br> 2. The control type resource is already loaded<br> 3. Synchronous XHR requests are supported by the browser<br>","!static":false,"!category":"function","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the new created control is added to the current rendered shell state.<br> When the user navigates to another application (including the Home page) then the control will be removed.<br> If <code>false<\/code> then add the control to the LaunchPadState itself.<br>","controlType":"type: string, description: The (class) name of the control type to create.<br> For example: <code>\"sap.m.Bar\"<\/code><br>","bIsVisible":"type: boolean, description: Specifies whether the sub header control is displayed after being created.<br> If <code>true<\/code> then the control is displayed according to parameters bCurrentState and aStates,<br> if <code>false<\/code> then the control is created but not displayed.<br>","oControlProperties":"type: object, description: The properties that will be passed to the created control.<br> For example: <code>{id: \"testBar\"}<\/code><br>","aStates":"type: String[], description: (Valid only if bCurrentState is <code>false<\/code>)<br> A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the control is added.<br> If no launchpad state is provided the control is added in all states."}},"setLeftPaneVisibility":{"!description":"Sets the visibility of the left pane in the Fiori Launchpad shell, in the given launchpad state @see LaunchpadState","!static":false,"!category":"function","!type":"fn(sLaunchpadState: String, bVisible: Boolean)","parameters":{"sLaunchpadState":"type: string, description: LaunchpadState in which to show/hide the left pane","bVisible":"type: boolean, description: specif whether to display the left pane or not"}},"showToolArea":{"!description":"Sets the ToolArea visibility","!static":false,"!category":"function","!type":"fn(sLaunchpadState?: String, bVisible?: Boolean)","parameters":{"sLaunchpadState":"type: String, description: LaunchpadState in which to show/hide the ToolArea @see LaunchpadState","bVisible":"type: boolean, description: specifies whether to display the ToolArea or not"}},"addFloatingActionButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 (as a result of XMLHttpRequest spec prohibiting the sending of synchronous requests). Use <code>addFloatingButton<code> instead<br>Creates a FloatingActionButton in Fiori launchpad, in the given launchpad states.<\/br> The FloatingActionButton is rendered in the bottom right corner of the shell.<\/br>\n\n<b>Example:<\/b> <pre>\nsap.ushell.Container.getRenderer(\"fiori2\").addFloatingActionButton(\"sap.ushell.ui.shell.ShellFloatingAction\", {id: \"testBtn\"}, true, true);\n<\/pre>\n\nThis function is marked for deprecation as of version 1.48.<br> It will continue to work as expected as long as one of the following conditions apply:<br> 1. The control instance is already created and its ID is included in the input parameter oControlProperties<br> 2. The control type resource is already loaded<br> 3. Synchronous XHR requests are supported by the browser<br>","!static":false,"!category":"function","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","parameters":{"bCurrentState":"type: boolean, description: If true, add the current control only to the current rendered shell state. Once the user navigates to another app or back to the Home page, this control will be removed.","controlType":"type: string, description: The (class) name of the control type to create.","bIsVisible":"type: boolean, description: Specify whether to display the control.","oControlProperties":"type: object, description: The properties that will be passed to the created control.","aStates":"type: String[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control."}},"extend":{"!description":"Creates a new subclass of class sap.ushell.renderers.fiori2.Renderer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.UIComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addUserPreferencesEntry":{"!description":"Adds an entry to the User Preferences dialog box including the UI control that appears when the user clicks the new entry, and handling of User Preferences actions such as SAVE and CANCEL.\n\n<b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\nvar oEntry = {\n  title: \"title\",\n  value: function() {\n      return jQuery.Deferred().resolve(\"entryTitleToBeDisplayed\");\n  },\n  content: function() {\n      return jQuery.Deferred().resolve(new sap.m.Button(\"userPrefEntryButton\", {text: \"Button\"}));\n  },\n  onSave: function() {\n      return jQuery.Deferred().resolve();\n  }\n  };\noRenderer.addUserPreferencesEntry(oEntry);\n<\/pre>","!static":false,"!category":"function","!type":"fn(entryObject: Object)","parameters":{"entryObject":"type: object, description: The data of the new added User Preference entry Including: <ul> <li>{String} entryHelpID (Optional) - The ID of the object.<br> <li>{String} title - The title of the entry to be presented in the list in the User Preferences dialog box.<br> We recommend using a string from the translation bundle.<br> <li>{String}/{Function} value - A string to be presented as the value of the entry<br> OR a function to be called which returns a {jQuery.Deferred.promise} object.<br> <li>{Function} content - A function to be called that returns a {jQuery.Deferred.promise} object<br> which consists of a {sap.ui.core.Control} to be displayed in a follow-on dialog box. A SAPUI5 view instance can also be returned. The functions is called on each time the user opens the User Preferences dialog box. <li>{Function} onSave - A function to be called which returns a {jQuery.Deferred.promise} object when the user clicks Save in the User Preferences dialog box.<br> If an error occurs, pass the error message via the {jQuery.Deferred.promise} object. Errors are displayed in the log.<br> <li>{Function} onCancel - A function to be called that closes the User Preferences dialog box without saving any changes. <br> <\/ul>"}},"addHeaderEndItem":{"!description":"Creates and displays one or more HeaderItem controls in Fiori launchpad, in the given launchpad states.<\/br> The HeaderItem will be displayed in the right side of the Fiori Launchpad shell header.<\/br>\n\n<b>Example:<\/b> <pre>\nsap.ushell.Container.getRenderer(\"fiori2\").addHeaderEndItem(\"sap.ushell.ui.shell.ShellHeadItem\", {id: \"testBtn\"}, true, true);\n<\/pre>","!static":false,"!category":"function","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","parameters":{"bCurrentState":"type: boolean, description: If true, add the current control only to the current rendered shell state. Once the user navigates to another app or back to the Home page, this control will be removed.","controlType":"type: string, description: The (class) name of the control type to create. Currently only \"sap.ushell.ui.shell.ShellHeadItem\" control type is supported.","bIsVisible":"type: boolean, description: Specify whether to display the control.","oControlProperties":"type: object, description: The properties that will be passed to the created control.","aStates":"type: String[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control."}},"addFloatingButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.52 undefined<br>Creates a FloatingActionButton in Fiori launchpad, in the given launchpad states.<\/br> The FloatingActionButton is rendered in the bottom right corner of the shell.<\/br>\n\n<b>Example:<\/b> <pre>\nsap.ushell.Container.getRenderer(\"fiori2\").addFloatingActionButton(\"sap.ushell.ui.shell.ShellFloatingAction\", {id: \"testBtn\"}, true, true);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oParameters: Object) -> Object","parameters":{"oParameters":"type: object, description: Contains the required parameters for creating and showing the new control object:<br> Properties:<br> - {string} controlType<br> The (class) name of the control type to create.<br> - {object} oControlProperties<br> The properties that will be passed to the created control.<br> - {boolean} bIsVisible<br> Specify whether to display the control.<br> - {boolean} bCurrentState<br> If true, add the current control only to the current rendered shell state.<br> Once the user navigates to another app or back to the Home page, this control will be removed.<br> - {String[]} aStates<br> (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control.<br>"}},"!module":"sap/ushell/renderers/fiori2/Renderer","!helpDescription":"The SAPUI5 component of SAP Fiori Launchpad renderer for the Unified Shell.","hideFloatingActionButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.52 undefined<br>Hide the given sap.ushell.ui.shell.ShellFloatingAction from Fiori Launchpad, in the given launchpad states. The removed control will not be destroyed.<br><br> This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: String[], description: the Ids of the sap.ushell.ui.shell.ShellFloatingAction to remove.","aStates":"type: String[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control. (Only valid if bCurrentState is set to false)"}},"setFooter":{"!description":"Displays the given sap.m.Bar as the footer of the Fiori launchpad shell.<\/br> The footer will be displayed in all states. <\/br>\n\n<b>Example:<\/b> <pre>\nvar bar = new sap.m.Bar({contentLeft: [new sap.m.Button({text: \"Test Footer Button\",\n  press: function () {\n    sap.m.MessageToast.show(\"Pressed\");\n  }})\n]});\nvar renderer = sap.ushell.Container.getRenderer(\"fiori2\");\nrenderer.setFooter(bar);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oFooter: Object)","parameters":{"oFooter":"type: Object, description: sap.m.Bar, the control to be added as the footer of the Fiori Launchpad"}},"hideSubHeader":{"!description":"Hide the given control from the Fiori Launchpad sub header, in the given launchpad states. The removed control will not be destroyed.<br><br> This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: String[], description: the Ids of the controls to remove.","aStates":"type: String[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control. (Only valid if bCurrentState is set to false)"}},"showToolAreaItem":{"!description":"Displays ToolAreaItems on the left side of the Fiori Launchpad shell, in the given launchpad states.\n\n<b>Example:<\/b> <pre>\nvar renderer = sap.ushell.Container.getRenderer(\"fiori2\"),\n    button1 = new sap.ushell.ui.shell.ToolAreaItem({ icon: \"sap-icon://wrench\" });\nrenderer.showToolAreaItem(button1.getId(), false, [\"home\", \"app\"]);\n<\/pre>","!static":false,"!category":"function","!type":"fn(vIds: [String | String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code>, add the items to the currently rendered shell. If <code>false<\/code>, add the items to the LaunchPadState itself, causing the items to be rendered everytime the given states are active.","vIds":"type: string|String[], description: A single ID or an array of IDs to add to the Tool Area.","aStates":"type: String[], description: (only valid if bCurrentState is set to <code>false<\/code>) - An array of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the controls are added. If no launchpad state is provided the items are added in all states."}},"addActionButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 (as a result of XMLHttpRequest spec prohibiting the sending of synchronous requests). Use <code>addUserAction<code> instead<br>Creates an action button in the User Actions Menu in the SAP Fiori launchpad, in the given launchpad states (LaunchpadState).<\/br>\n\n<b>Example:<\/b> <pre>\nsap.ushell.Container.getRenderer(\"fiori2\").addActionButton(\"sap.m.Button\", {id: \"testBtn2\", text: \"test button\"}, true, true);\n<\/pre>\n\nThis function is marked for deprecation as of version 1.48.<br> It will continue to work as expected as long as one of the following conditions apply:<br> 1. The control instance is already created and its ID is included in the input parameter oControlProperties<br> 2. The control type resource is already loaded<br> 3. Synchronous XHR requests are supported by the browser<br>","!static":false,"!category":"function","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","parameters":{"bCurrentState":"type: boolean, description: If true, add the current control only to the current rendered shell state. Once the user navigates to another app or back to the home page, this control will be removed.","controlType":"type: string, description: The (class) name of the control type to create.","bIsVisible":"type: boolean, description: Specify whether to display the control. If true, the control is displayed (calls the showActionButton method) according to the bCurrentState and aStates parameters. If false, the control is created but not displayed (you can use showActionButton to display the control when needed).","oControlProperties":"type: object, description: The properties that will be passed to the created control.","aStates":"type: String[], description: List of the launchpad states (sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which to add the control. Valid only if bCurrentState is set to false."}},"setHeaderTitle":{"!description":"Sets the title in the Fiori Launchpad shell header.","!static":false,"!category":"function","!type":"fn(sTitle: String)","parameters":{"sTitle":"type: string, description: The title to be displayed in the Fiori Launchpad shell header"}},"hideActionButton":{"!description":"Hides an action button from the User Actions Menu in the SAP Fiori launchpad, in the given launchpad states (LaunchpadState). The removed button will not be destroyed.<br><br> This API is meant to be used for custom elements in the SAP Fiori launchpad. We do not recommend using it on standard launchpad elements, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If true, removes the current control only from the current rendered shell state.","aIds":"type: String[], description: IDs of the button controls that should hidden.","aStates":"type: String[], description: A list of the launchpad states in which to hide the control. Valid only if bCurrentState is set to false."}}},"sap.ushell.components.factsheet.controls.PictureTile":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 PictureTile is used in PictureViewer control and is not meant to be consumed outside of PictureViewer usage. PictureViewer was replacing the sap.m.Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Tile control embedding an image and allowing custom sizing","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.components.factsheet.controls.PictureTile.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.m.CustomTile","setTileContent":{"!description":"Reference to one PictureViewerItem coming from the PictureViewer.","!static":false,"!category":"function","!type":"fn(vTileContent: String | sap.ushell.components.factsheet.controls.PictureViewerItem) -> sap.ushell.components.factsheet.controls.PictureTile","parameters":{"vTileContent":"type: string|sap.ushell.components.factsheet.controls.PictureViewerItem, description: Id of an element which becomes the new target of this <code>tileContent<\/code> association. Alternatively, an element instance may be given."}},"getTileContent":{"!description":"ID of the element which is the current target of the association {@link #getTileContent tileContent}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"!category":"class","attachPictureDelete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:pictureDelete pictureDelete} event of this <code>sap.ushell.components.factsheet.controls.PictureTile<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.components.factsheet.controls.PictureTile<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.components.factsheet.controls.PictureTile","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.components.factsheet.controls.PictureTile<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefault value is <code>32px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>32px<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ushell.components.factsheet.controls.PictureTile","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>32px<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ushell.components.factsheet.controls.PictureTile","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.CustomTile.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefault value is <code>32px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new components/factsheet/controls/PictureTile.\r\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 32px)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 32px)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getTileContent tileContent} : (sap.ui.core.ID | sap.ushell.components.factsheet.controls.PictureViewerItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:pictureDelete pictureDelete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.CustomTile#constructor sap.m.CustomTile}\ncan be used as well.","!module":"sap/ushell/components/factsheet/controls/PictureTile","detachPictureDelete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:pictureDelete pictureDelete} event of this <code>sap.ushell.components.factsheet.controls.PictureTile<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ushell.components.factsheet.controls.PictureTile","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 PictureTile is used in PictureViewer control and is not meant to be consumed outside of PictureViewer usage. PictureViewer was replacing the sap.m.Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Tile control embedding an image and allowing custom sizing","firePictureDelete":{"!description":"Fires event {@link #event:pictureDelete pictureDelete} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.components.factsheet.controls.PictureTile","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}}},"sap.ushell.ui.appfinder":{"AppBox":"sap.ushell.ui.appfinder.AppBox_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"icon":{"!description":"icon : String","!category":"enum","!type":"String"},"!category":"namespace","title":{"!description":"title : String","!category":"enum","!type":"String"},"url":{"!description":"url : String","!category":"enum","!type":"String"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"subtitle":{"!description":"subtitle : String","!category":"enum","!type":"String"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"navigationMode":{"!description":"navigationMode : String","!category":"enum","!type":"String"}},"sap.ushell.ui5service":{"ShellUIService":"sap.ushell.ui5service.ShellUIService_obj","!category":"namespace","UserStatus":"sap.ushell.ui5service.UserStatus"},"sap.ushell.services.AppLifeCycle":{"detachAppLoaded":{"!description":"Detaches an event handler from the EventProvider.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object)","parameters":{"oListener":"type: object, description: The object that wanted to be notified when the event occurred","fnFunction":"type: function, description: The handler function that has to be detached from the EventProvider."}},"getCurrentApplication":{"!description":"Get information about the currently running application. The function returns an object with following parameters: <ul> <li> applicationType: \u201cUI5|WDA|NWBC|URL|TR\u201d <\/li> <li> componentInstance: reference to component (only for type SAPUI5) <\/li> <li> homePage: true is Shell-home is currently displayed <\/li> <li> getTechnicalParameter: returns the value of a technical parameter for the given application. This method is for SAP internal usage only. <\/li> <li> getintent: returns a Promise that resolves with the current shell hash as an Object. See sap.ushell.services.URLParsing#parseShellHash for details. This property is for SAP internal usage only. <\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> Object"},"attachAppLoaded":{"!description":"Attaches an event handler for the appLoaded event. This event handler will be triggered each time an application has been loaded.","!static":false,"!category":"function","!type":"fn(oData: Object, fnFunction: fn(), oListener: Object)","parameters":{"oListener":"type: object, description: The object that wants to be notified when the event occurs (this context within the handler function).","fnFunction":"type: function, description: The handler function to call when the event occurs.","oData":"type: object, description: An object that will be passed to the handler along with the event object when the event is fired."}},"!constructorDescription":"The Unified Shell's AppLifeCycle service\nThis method MUST be called by the Unified Shell's container only, others\nMUST call <code>sap.ushell.Container.getService(\"AppLifeCycle\")<\/code>.\nConstructs a new instance of the AppLifeCycle service.","!module":"sap/ushell/services/AppLifeCycle","!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.services.PersonalizationContainerVariant_obj":{"!type":"fn()","prototype":"sap.ushell.services.PersonalizationContainerVariant"},"sap.ushell.ui.appfinder.AppBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.appfinder.AppBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.appfinder.AppBox"},"sap.ushell.services.CrossApplicationNavigation_obj":{"!type":"fn()","prototype":"sap.ushell.services.CrossApplicationNavigation"},"sap.ushell.services.Personalization.VariantSetAdapter_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.VariantSetAdapter"},"sap.ushell.services.TransientPersonalizer":{"!description":"The transient personalizer shall be used in container mode for table personalization.","getValue":{"!description":"Synchronously gets a personalization data value.","!static":false,"!category":"function","!type":"fn() -> Object"},"!constructorDescription":"To be called by the personalization service getTransientPersonalizer method.","!module":"sap/ushell/services/_Personalization/TransientPersonalizer","delPersData":{"!description":"Deletes a personalization data value.","!static":false,"!category":"function","!type":"fn() -> Object"},"!helpDescription":"The transient personalizer shall be used in container mode for table personalization.","getPersData":{"!description":"Gets a personalization data value.","!static":false,"!category":"function","!type":"fn() -> Object"},"setValue":{"!description":"Synchronously sets a personalization data value.","!static":false,"!category":"function","!type":"fn(oValue: Object)","parameters":{"oValue":"type: object, description: JSON object containing the personalization value."}},"!proto":"sap.ui.base.Object","!category":"class","setPersData":{"!description":"Sets a personalization data value.","!static":false,"!category":"function","!type":"fn(oValue: Object) -> Object","parameters":{"oValue":"type: object, description: JSON object containing the personalization value."}}},"sap.ushell.services.SmartNavigation_obj":{"!type":"fn()","prototype":"sap.ushell.services.SmartNavigation"},"sap.ushell.components.factsheet":{"controls":"sap.ushell.components.factsheet.controls","!category":"namespace"},"sap.ushell.ui5service.ShellUIService_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui5service.ShellUIService with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link Service.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oCallerContext: Object)","prototype":"sap.ushell.ui5service.ShellUIService"},"sap.ushell.ui.launchpad.ShortcutsHelpContainer":{"!description":"A container that arranges the helper for shortcuts (open by ctrl+f1).","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.launchpad.ShortcutsHelpContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Element<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Element) -> Number","parameters":{"oContent":"type: sap.ui.core.Element, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Element]"},"!proto":"sap.ui.core.Control","removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Element]"},"!category":"class","addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Element) -> sap.ushell.ui.launchpad.ShortcutsHelpContainer","parameters":{"oContent":"type: sap.ui.core.Element, description: The content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Element) -> sap.ui.core.Element","parameters":{"vContent":"type: int|string|sap.ui.core.Element, description: The content to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.ShortcutsHelpContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ui/launchpad/ShortcutsHelpContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Element[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ushell/ui/launchpad/ShortcutsHelpContainer","!helpDescription":"A container that arranges the helper for shortcuts (open by ctrl+f1).","insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Element, iIndex: Number) -> sap.ushell.ui.launchpad.ShortcutsHelpContainer","parameters":{"oContent":"type: sap.ui.core.Element, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.ui.launchpad.ShortcutsHelpContainer"}},"sap.ushell.services.NavTargetResolution_obj":{"!type":"fn(oServiceConfiguration: oServiceConfiguration)","prototype":"sap.ushell.services.NavTargetResolution"},"sap.ushell.services.Configuration":{"!constructorDescription":"This method MUST be called by the Unified Shell's container only, others MUST call\r<code>sap.ushell.Container.getService(\"Configuration\")<\/code>.\rConstructs a new Configuration service.","!module":"sap/ushell/services/Configuration","!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.services.ContainerInterface_obj":{"!type":"fn()","prototype":"sap.ushell.services.ContainerInterface"},"sap.ushell.services.Personalization_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.VariantSetAdapter"},"sap.ushell.ui.launchpad":{"headerText":{"!description":"headerText : String","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"groupId":{"!description":"groupId : String","!category":"enum","!type":"String"},"icon":{"!description":"icon : String","!category":"enum","!type":"String"},"!category":"namespace","supportLinkPersonalization":{"!description":"supportLinkPersonalization : Boolean","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"defaultGroup":{"!description":"defaultGroup : Boolean","!category":"enum","!type":"Boolean"},"isLastGroup":{"!description":"isLastGroup : Boolean","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"showBackground":{"!description":"showBackground : Boolean","!category":"enum","!type":"Boolean"},"GridContainer":"sap.ushell.ui.launchpad.GridContainer_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"showIcon":{"!description":"showIcon : Boolean","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"showHeader":{"!description":"showHeader : Boolean","!category":"enum","!type":"Boolean"},"isGroupLocked":{"!description":"isGroupLocked : Boolean","!category":"enum","!type":"Boolean"},"tileSizeBehavior":{"!description":"tileSizeBehavior : String","!category":"enum","!type":"String"},"showEmptyLinksAreaPlaceHolder":{"!description":"showEmptyLinksAreaPlaceHolder : Boolean","!category":"enum","!type":"Boolean"},"isGroupSelected":{"!description":"isGroupSelected : Boolean","!category":"enum","!type":"Boolean"},"groupHeaderLevel":{"!description":"groupHeaderLevel : sap.m.HeaderLevel","!category":"enum","!type":"sap.m.HeaderLevel"},"headerLevel":{"!description":"headerLevel : sap.m.HeaderLevel","!category":"enum","!type":"sap.m.HeaderLevel"},"homePageGroupDisplay":{"!description":"homePageGroupDisplay : String","!category":"enum","!type":"String"},"showGroupHeader":{"!description":"showGroupHeader : Boolean","!category":"enum","!type":"Boolean"},"enableHelp":{"!description":"enableHelp : Boolean","!category":"enum","!type":"Boolean"},"editMode":{"!description":"editMode : Boolean","!category":"enum","!type":"Boolean"},"tileActionModeActive":{"!description":"tileActionModeActive : Boolean","!category":"enum","!type":"Boolean"},"showEmptyLinksArea":{"!description":"showEmptyLinksArea : Boolean","!category":"enum","!type":"Boolean"},"ShortcutsHelpContainer":"sap.ushell.ui.launchpad.ShortcutsHelpContainer_obj","ieHtml5DnD":{"!description":"ieHtml5DnD : Boolean","!category":"enum","!type":"Boolean"}},"sap.ushell.ui.launchpad.ShortcutsHelpContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.ShortcutsHelpContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.launchpad.ShortcutsHelpContainer"},"sap.ushell.components.factsheet.controls":{"PictureTile":"sap.ushell.components.factsheet.controls.PictureTile_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"src":{"!description":"src : String","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"editable":{"!description":"Determines whether the TileContainer is editable so you can move, delete or add tiles.","!category":"enum","!type":"Boolean"},"allowAdd":{"!description":"Determines whether the user is allowed to add Tiles in Edit mode (editable = true).","!category":"enum","!type":"Boolean"},"!category":"namespace","tileScaling":{"!description":"Percentage of the space occupied by the image in the picture viewer control. Please note that if the factor is too close to 1, the navigation arrows usually displayed in desktop mode will not be available","!category":"enum","!type":"Number"},"PictureViewer":"sap.ushell.components.factsheet.controls.PictureViewer_obj","PictureViewerItem":"sap.ushell.components.factsheet.controls.PictureViewerItem_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"removable":{"!description":"removable : Boolean","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"width":{"!description":"Defines the width of the TileContainer in px.","!category":"enum","!type":"sap.ui.core.CSSSize"},"height":{"!description":"Defines the height of the TileContainer in px.","!category":"enum","!type":"sap.ui.core.CSSSize"}},"sap.ushell.components":{"factsheet":"sap.ushell.components.factsheet","!category":"namespace"},"sap.ushell.services.Message":{"!constructorDescription":"Message service.","!module":"sap/ushell/services/Message","!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.ui.shell.ToolAreaItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.shell.ToolAreaItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.shell.ToolAreaItem"},"sap.ushell.services.Personalization.ContextContainer_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.ContextContainer"},"sap.ushell.services.Personalization.VariantSetAdapter":{"!description":"The Unified Shell's personalization service, which provides a personalizer object that handles all personalization operations.","containsVariantSet":{"!description":"Checks if a specific variant set is contained in the container.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Boolean","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"delVariantSet":{"!description":"Deletes a variant set from the container. In case the variant set does not exist nothing happens.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String)","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!constructorDescription":"This method MUST be called by the Unified Shell's container only, others\rMUST call <code>sap.ushell.Container.getService(\"Personalization\")<\/code>.\rConstructs a new instance of the personalization service.","!module":"sap/ushell/services/Personalization","getVariantSet":{"!description":"Returns the variant set object from the container.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Object","parameters":{"sVariantSetKey":"type: string, description: variant set key The string length is restricted to 40 characters"}},"!helpDescription":"The Unified Shell's personalization service, which provides a personalizer object that handles all personalization operations.","addVariantSet":{"!description":"Creates a new variant set in the container. In case a variant set with this key is already existing an exception is thrown.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Object","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!proto":"sap.ui.base.Object","!category":"class","getVariantSetKeys":{"!description":"Returns an array with the keys of the variant sets in the container.","!static":false,"!category":"function","!type":"fn() -> Array"}},"sap.ushell.services.ShellNavigation_obj":{"!type":"fn(oContainerInterface: Object, sParameters: String, oServiceConfiguration: Object)","prototype":"sap.ushell.services.ShellNavigation"},"sap.ushell.ui.footerbar.AddBookmarkButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.footerbar.AddBookmarkButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.footerbar.AddBookmarkButton"},"sap.ushell.ui.shell":{"visible":{"!description":"Defines whether to display the control","!category":"enum","!type":"Boolean"},"expandable":{"!description":"Defines whether the control will have an expand functionality containing sub-items or actions. If the property is set to true, a small \"expand\" icon appears in the lower corner of the control. The \"expand\" event is fired when the \"expand\" icon is pressed.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"ToolAreaItem":"sap.ushell.ui.shell.ToolAreaItem_obj","icon":{"!description":"Icon that is displayed in the item.","!category":"enum","!type":"sap.ui.core.URI"},"!category":"namespace","ariaLabel":{"!description":"Text which will be read by screenreader.","!category":"enum","!type":"String"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"text":{"!description":"text : String","!category":"enum","!type":"String"},"selected":{"!description":"Defines whether to mark the control as selected","!category":"enum","!type":"Boolean"}},"An enumeration for the application work protect mode state.":{"":"An enumeration for the application work protect mode state.","!module":"sap/ushell/services/Container","!category":"namespace"},"sap.ushell.services.AppConfiguration":{"!description":"The unified shell's AppConfiguration service.","setApplicationFullWidth":{"!description":"Sets the application screen size to full width","!static":false,"!category":"function","!type":"fn(bValue: Boolean)","parameters":{"bValue":"type: boolean, description: A Boolean value indicating if the application fills the full width of the screen"}},"!constructorDescription":"The Unified Shell App configuration service as a singleton object.","!module":"sap/ushell/services/AppConfiguration","!helpDescription":"The unified shell's AppConfiguration service.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.services.Container":{"!description":"The Unified Shell's container which manages renderers, services, and adapters.","deregisterDirtyStateProvider":{"!description":"Deregister the work protection dirty callback function. See registerDirtyStateProvider for more information. Only the last registered function will be deregistered (in case it was registered multiple times).","!static":false,"!category":"function","!type":"fn(fnDirty: fn())","parameters":{"fnDirty":"type: function, description: function for determining the state of the application"}},"createRenderer":{"!description":"Creates a new renderer instance for the given renderer name.\n\nNames without a dot are interpreted as package names within the default naming convention and will be expanded to <code>\"sap.ushell.renderers.\" + sRendererName + \".Renderer\"<\/code>. Names containing a dot are used \"as is\".\n\nThe resulting name must point to a SAPUI5 object which is first required and then created (constructor call without arguments). The object must be either a control (i.e. extend <code>sap.ui.core.Control<\/code>) or a UI component (i.e. extend <code>sap.ui.core.UIComponent<\/code>), which is then automatically wrapped into a <code>sap.ui.core.ComponentContainer<\/code> control by this method. This <code>sap.ui.core.ComponentContainer<\/code> is created with <code>height<\/code> and <code>width<\/code> set to \"100%\" to accommodate the complete available space.\n\nThe returned renderer is supposed to be added to a direct child (for example <code>DIV<\/code>) of the <code>BODY<\/code> of the page and there should be no other parts of the page consuming space outside the renderer. Use CSS class <code>sapUShellFullHeight<\/code> at <code>HTML<\/code>, <code>BODY<\/code> and at the element to which the renderer is added to allow the renderer to use 100% height.","!static":false,"!category":"function","!type":"fn(sRendererName?: String, bAsync?: Boolean) -> sap.ui.core.Control | Promise","parameters":{"sRendererName":"type: string, description: The renderer name, such as \"standard\" or \"acme.foo.bar.MyRenderer\"; it is taken from the configuration property <code>defaultRenderer<\/code> if not given here.","bAsync":"type: boolean, description: If true, the renderer is created asynchronously and a Promise is returned."}},"registerDirtyStateProvider":{"!description":"Register the work protection dirty callback function. In the work protect mechanism, each platform can register their own method in order to check if data was changed during the session, and notify the container about the change. Multiple registerings of the same function are allowed.\n\nUse <code>Function.prototype.bind()<\/code> to determine the callback's <code>this<\/code> or some of its arguments.","!static":false,"!category":"function","!type":"fn(fnDirty: fn())","parameters":{"fnDirty":"type: function, description: function for determining the state of the application"}},"setDirtyFlag":{"!description":"Setter for the isDirty flag value.\n\nDefault value is false","!static":false,"!category":"function","!type":"fn(bIsDirty?: Boolean)","parameters":{"bIsDirty":"type: boolean, description: The value of the dirty flag."}},"!proto":"sap.ui.base.Object","setLogonFrameProvider":{"!description":"Determines the current logon frame provider for the entire Unified Shell. Initially, a rudimentary default provider is active and should be replaced as soon as possible by the current renderer.\n\nA logon frame provider is used to facilitate user authentication even for requests sent via <code>XMLHttpRequest<\/code>. It is called back in order to create a hidden <code>IFRAME<\/code>, to show it to the user, then to hide and destroy it. The frame must be treated as a black box by the provider; especially with respect to the source of the frame which is managed by the Unified Shell framework. Showing the frame might require user interaction and some decoration around the frame. The frame should be destroyed, not reused, to be on the safe side. Note that in typical cases with SAML2, authentication happens automatically and the frame can stay hidden.\n\nThe following order of method calls is guaranteed: <ol> <li> The <code>create<\/code> method is called first. <li> The <code>show<\/code> method may be called next (if there is HTML code to display). <li> The <code>destroy<\/code> method is called last. <li> A new cycle may start for a new logon process. <\/ol>","!static":false,"!category":"function","!type":"fn(oLogonFrameProvider: Object)","parameters":{"oLogonFrameProvider":"type: object, description: The new logon frame provider which needs to implement at least the methods documented here."}},"!category":"class","cancelLogon":{"!description":"Cancels the logon procedure in the current frame, if any. This MUST be used by the logon frame provider in case the user wants to close the logon frame for good. It will report \"Authentication cancelled\" and let all pending requests for the current realm fail. As a side-effect, it also calls <code>destroy<\/code> on the logon frame provider.","!static":false,"!category":"function","!type":"fn()"},"detachRendererCreatedEvent":{"!description":"Detaches a listener from the rendererCreated event.","!static":false,"!category":"function","!type":"fn(fnFunction: fn())","parameters":{"fnFunction":"type: function, description: Event handler to be detached."}},"getService":{"!description":"Returns a service with the given name, creating it if necessary. Services are singleton objects identified by their (resulting) name.\n\nNames without a dot are interpreted as service names within the default naming convention and will be expanded to <code>\"sap.ushell.services.\" + sServiceName<\/code>. Names containing a dot are not yet supported. This name may be overridden via configuration. See example 2 below.\n\nThe resulting name must point to a constructor function which is first required as a SAPUI5 module and then called to create a service instance. The service will be passed to a corresponding service adapter for the current logon system, as well as a callback interface (of virtual type <code>sap.ushell.services.ContainerInterface<\/code>) to the container providing a method <code>createAdapter(oSystem)<\/code> to create further adapters for the same service but connected to remote systems. The third parameter will be <code>sParameter<\/code> as passed to this function. The fourth parameter will be an object with the property <code>config<\/code> supplied by the configuration. See example 2 below.\n\nThe adapter for the logon system will be created before the service. Its constructor gets three parameters. The first parameter is the logon system, the second parameter is <code>sParameter<\/code> and the third parameter is an object with the property <code>config<\/code> supplied by the configuration.\n\nThe service may declare itself adapterless by setting the property <code>hasNoAdapter = true<\/code> at the constructor function. In this case no adapter will be created and passed to the constructor and all other parameters will be shifted.\n\n<b>Example 1:<\/b> The service <code>sap.ushell.services.UserInfo<\/code> is parameterless. It indicates this by setting <code>sap.ushell.services.UserInfo.hasNoAdapter = true;<\/code>.\n\n<b>Example 2:<\/b> (Configuration) <pre>\n  window[\"sap-ushell-config\"] = {\n    services: {\n      Foo: {\n        module: \"my.own.Foo\"\n        config: {header: \"hidden\"},\n        adapter: {\n          module: \"my.own.FooAdapter\",\n          config: {foo: \"bar\"}\n        }\n      }\n    }\n  }\n  oService = sap.ushell.Container.getService(\"Foo\", \"runtimeConfig\");\n  <\/pre> Now <code>oService<\/code> is an instance of <code>my.own.Foo<\/code>. The third parameter of the constructor will be \"runtimeConfig\", the fourth parameter <code>{config: {header: \"hidden\"}}<\/code>. Its adapter is an instance of <code>my.own.FooAdapter<\/code> constructed with the parameters logon system, \"runtimeConfig\" and <code>{config: {foo: \"bar\"}}<\/code>.\n\nPlease note that the api will throw a runtime error (or reject for async mode) if the service name does not reflect a service available.","!static":false,"!category":"function","!type":"fn(sServiceName: String, sParameter?: String, bAsync?: Boolean) -> Object | Promise","parameters":{"sParameter":"type: string, description: A parameter which is passed to the service constructor and every adapter constructor. (since 1.15.0)","sServiceName":"type: string, description: The service name, such as \"Menu\"","bAsync":"type: boolean, description: if true, the adapter is loaded asynchronously and a Promise is returned. (experimental, since 1.55.0)"}},"getDirtyFlag":{"!description":"Returns the isDirty flag value.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addRemoteSystem":{"!description":"Adds a system to the list of remote systems currently in use. On logout this list is processed and performs a logout for each system via the ContainerAdapter specific for its platform.","!static":false,"!category":"function","!type":"fn(oRemoteSystem: sap.ushell.System)","parameters":{"oRemoteSystem":"type: sap.ushell.System, description: Remote system to be added."}},"!constructorDescription":"Constructs a new Unified Shell container for the given container adapter.","attachLogoutEvent":{"!description":"Attaches a listener to the logout event.","!static":false,"!category":"function","!type":"fn(fnFunction: fn())","parameters":{"fnFunction":"type: function, description: Event handler to be attached."}},"!module":"sap/ushell/services/Container","!helpDescription":"The Unified Shell's container which manages renderers, services, and adapters.","getGlobalDirty":{"!description":"Returns the global dirty state.\n\nAll open UShell browser windows for the same origin are asked about their global dirty state.","!static":false,"!category":"function","!type":"fn() -> jQuery.Deferred"},"attachRendererCreatedEvent":{"!description":"Attaches a listener to the rendererCreated event.","!static":false,"!category":"function","!type":"fn(fnFunction: fn())","parameters":{"fnFunction":"type: function, description: Event handler to be attached. If a renderer is created, this function is called with a parameter of instance <code>sap.ui.base.Event<\/code>. The event object provides the instance of the created renderer as parameter &quot;renderer&quot;. If the renderer is a SAPUI5 UI component (i.e. extend <code>sap.ui.core.UIComponent<\/code>), the event parameter returns the component instance, i.e. it unwraps the renderer component from its component container."}},"detachLogoutEvent":{"!description":"Detaches a listener from the logout event.","!static":false,"!category":"function","!type":"fn(fnFunction: fn())","parameters":{"fnFunction":"type: function, description: Event handler to be detached."}},"getServiceAsync":{"!description":"Returns a Promise that resolves a service with the given name, creating it if necessary. Services are singleton objects identified by their (resulting) name.\n\nNames without a dot are interpreted as service names within the default naming convention and will be expanded to <code>\"sap.ushell.services.\" + sServiceName<\/code>. Names containing a dot are not yet supported. This name may be overridden via configuration. See example 2 below.\n\nThe resulting name must point to a constructor function which is first required as a SAPUI5 module and then called to create a service instance. The service will be passed to a corresponding service adapter for the current logon system, as well as a callback interface (of virtual type <code>sap.ushell.services.ContainerInterface<\/code>) to the container providing a method <code>createAdapter(oSystem)<\/code> to create further adapters for the same service but connected to remote systems. The third parameter will be <code>sParameter<\/code> as passed to this function. The fourth parameter will be an object with the property <code>config<\/code> supplied by the configuration. See example 2 below.\n\nThe adapter for the logon system will be created before the service. Its constructor gets three parameters. The first parameter is the logon system, the second parameter is <code>sParameter<\/code> and the third parameter is an object with the property <code>config<\/code> supplied by the configuration.\n\nThe service may declare itself adapterless by setting the property <code>hasNoAdapter = true<\/code> at the constructor function. In this case no adapter will be created and passed to the constructor and all other parameters will be shifted.\n\n<b>Example 1:<\/b> The service <code>sap.ushell.services.UserInfo<\/code> is parameterless. It indicates this by setting <code>sap.ushell.services.UserInfo.hasNoAdapter = true;<\/code>.\n\n<b>Example 2:<\/b> (Configuration) <pre>\n  window[\"sap-ushell-config\"] = {\n    services: {\n      Foo: {\n        module: \"my.own.Foo\"\n        config: {header: \"hidden\"},\n        adapter: {\n          module: \"my.own.FooAdapter\",\n          config: {foo: \"bar\"}\n        }\n      }\n    }\n  }\n  oService = sap.ushell.Container.getService(\"Foo\", \"runtimeConfig\");\n  <\/pre> Now <code>oService<\/code> is an instance of <code>my.own.Foo<\/code>. The third parameter of the constructor will be \"runtimeConfig\", the fourth parameter <code>{config: {header: \"hidden\"}}<\/code>. Its adapter is an instance of <code>my.own.FooAdapter<\/code> constructed with the parameters logon system, \"runtimeConfig\" and <code>{config: {foo: \"bar\"}}<\/code>.","!static":false,"!category":"function","!type":"fn(sServiceName: String, sParameter?: String) -> Promise","parameters":{"sParameter":"type: string, description: A parameter which is passed to the service constructor and every adapter constructor.","sServiceName":"type: string, description: The service name, such as \"Menu\""}}},"sap.ushell.ui.footerbar":{"keywords":{"!description":"keywords : String","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"icon":{"!description":"Defines the icon to be displayed as graphical element within the <code>Button<\/code>. It can be an image or an icon from the icon font.","!category":"enum","!type":"sap.ui.core.URI"},"serviceUrl":{"!description":"serviceUrl : Object","!category":"enum","!type":"Object"},"!category":"namespace","type":{"!description":"Defines the <code>Button<\/code> type.","!category":"enum","!type":"sap.m.ButtonType"},"title":{"!description":"title : String","!category":"enum","!type":"String"},"iconFirst":{"!description":"Determines whether the icon is displayed before the text.","!category":"enum","!type":"Boolean"},"numberUnit":{"!description":"numberUnit : String","!category":"enum","!type":"String"},"AddBookmarkButton":"sap.ushell.ui.footerbar.AddBookmarkButton_obj","enabled":{"!description":"Determines whether the <code>Button<\/code> is enabled (default is set to <code>true<\/code>). A disabled <code>Button<\/code> has different colors depending on the {@link sap.m.ButtonType ButtonType}.","!category":"enum","!type":"Boolean"},"appData":{"!description":"appData : Object","!category":"enum","!type":"Object"},"activeIcon":{"!description":"The source property of an alternative icon for the active (depressed) state of the button. Both active and default icon properties should be defined and have the same type: image or icon font. If the <code>icon<\/code> property is not set or has a different type, the active icon is not displayed.","!category":"enum","!type":"sap.ui.core.URI"},"textDirection":{"!description":"This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.","!category":"enum","!type":"sap.ui.core.TextDirection"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"showGroupSelection":{"!description":"showGroupSelection : Boolean","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"serviceRefreshInterval":{"!description":"serviceRefreshInterval : String","!category":"enum","!type":"String"},"text":{"!description":"Determines the text of the <code>Button<\/code>.","!category":"enum","!type":"String"},"info":{"!description":"info : String","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"customUrl":{"!description":"customUrl : Object","!category":"enum","!type":"Object"},"tileIcon":{"!description":"tileIcon : String","!category":"enum","!type":"String"},"beforePressHandler":{"!description":"beforePressHandler : Object","!category":"enum","!type":"Object"},"subtitle":{"!description":"subtitle : String","!category":"enum","!type":"String"},"width":{"!description":"Defines the <code>Button<\/code> width.","!category":"enum","!type":"sap.ui.core.CSSSize"},"afterPressHandler":{"!description":"afterPressHandler : Object","!category":"enum","!type":"Object"},"iconDensityAware":{"!description":"By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image.","!category":"enum","!type":"Boolean"}},"sap.ushell.ui.tile.StateArrow":{"!description":"The state of an arrow as trend direction indicator, pointing either up or down","Down":{"!description":"The trend direction indicator points down","!category":"enum","!type":"String"},"!module":"sap/ushell/library","!category":"static class","Up":{"!description":"The trend direction indicator points up","!category":"enum","!type":"String"},"None":{"!description":"The trend direction indicator is invisible","!category":"enum","!type":"String"}},"sap.ushell.services.UsageAnalytics":{"!description":"A UShell service for tracking business flows and user actions.","!constructorDescription":"The UsageAnalytics service exposes API for logging custom events and setting custom field values in the logged events.<br>\rThe data is sent via http and recorded on a server, whose URL is defined by the <code>baseUrl<\/code> service configuration property.<br>\rThe service configuration must also include the site ID from the <code>pubToken<\/code> attribute.<br>\rYou can find the pubToken in the code snippet provided in the WARP when creating a new site.\r\rEach tracked event is represented by a table entry on the server database.<br>\rThe administrator can produce reports based on the the recorded data.\r\rTwo types of events can be logged:<br>\r  - Automatic events: Click or pageLoad are predefined events, logged by the base tracking library.<br>\r    You can disable these events in the service configuration.<br>\r  - Custom events: You can use the service API to log an event with custom data using the function logCustomEvent<br>\r\rEach tracked event (either automatic or custom) is represented by a database row, that includes 10 custom attributes named custom1...custom10.<br>\rSome of these values can be set using UsageAnalytics service API.<br>","!module":"sap/ushell/services/UsageAnalytics","!helpDescription":"A UShell service for tracking business flows and user actions.","setCustomAttributes":{"!description":"Sets up to 6 customer attributes of logged events according to the given object attributes.<br> A customer attribute can be set only once during a session.<br> Currently these attributes correspond to database columns custom5...custom10.","!static":false,"!category":"function","!type":"fn(oCustomFieldValues: Object)","parameters":{"oCustomFieldValues":"type: object, description: An json object that includes attribute1...attribute6 (or subset)<br> with values of type string/number/boolean or a function that returns any of these types.<br> For example:<br> {<br> attribute1: \"value3\",<br> attribute2: function () {return \"value4\"},<br> attribute3: 55<br> }<br> in this example the custom field \"custom5\" gets the string \"value3\"<br> the custom field custom6 gets the function that returns the string \"value4\",<br> the custom field custom7 gets a string \"55\".<br> Any property of oCustomFieldValues which is not in the range of attribute1...attribute6 is ignored."}},"userEnabled":{"!description":"Indicates whether the user has specified to track activities.<br><br>\n\nReturns <code>true<\/code> if the following conditions exist, and <code>false<\/code> otherwise:<br> a) The function <code>system enabled<\/code> returns <code>true<\/code><br> b) The user property <code>trackUsageAnalytics<\/code> is set to <code>true<\/code><br>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.base.Object","!category":"class","setLegalText":{"!description":"Enables the renderer to set the content of the legal message..","!static":false,"!category":"function","!type":"fn()"},"systemEnabled":{"!description":"Indicates whether the service is available.<br><br>\n\nReturns <code>true<\/code> if the following conditions exist, and <code>false<\/code> otherwise:<br> a) Service configuration property <code>enable<\/code> is set to <code>true<\/code><br> b) Service configuration property <code>pubToken<\/code> is not empty<br> c) Agreement text exists or <code>setUsageAnalyticsPermitted<\/code> is set to <code>false<\/code><br>","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ushell.ui5service.UserStatus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.70 undefined<br>undefined","extend":{"!description":"Creates a new subclass of class sap.ushell.ui5service.UserStatus with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.service.Service.extend}.","!static":"true","!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui5service.UserStatus.","!static":"true","!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!module":"sap/ushell/ui5service/UserStatus","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.70 undefined<br>undefined","!category":"namespace"},"sap.ushell.adapters":{"!module":"sap/ushell/services/Container","!category":"namespace"},"sap.ushell.services.Personalization.VariantSet":{"!description":"The personalization variant set contains variants of personalization data. It is used in the personalization container mode.","getVariantKeys":{"!description":"Returns an array with the keys of the variants in the variant set.","!static":false,"!category":"function","!type":"fn() -> Array"},"getVariant":{"!description":"Returns a variant object.","!static":false,"!category":"function","!type":"fn(sVariantKey: String) -> Object","parameters":{"sVariantKey":"type: string, description: variant key"}},"!proto":"sap.ui.base.Object","!category":"class","getVariantKeyByName":{"!description":"Returns the variant key corresponding to a variant name.","!static":false,"!category":"function","!type":"fn(sVariantName: String) -> String","parameters":{"sVariantName":"type: string, description: variant name"}},"setCurrentVariantKey":{"!description":"Sets the current variant key.","!static":false,"!category":"function","!type":"fn(sVariantKey: String)","parameters":{"sVariantKey":"type: string, description: There is no validity check for the variant key."}},"!constructorDescription":"A VariantSet is a class representing a collection of\nVariants (identified by a key and name)\nand a member variable indicating the\n\"current variable\"\n\nWhen manipulating the underlying data, additional constraints are enforced.\n\nTo be called by the personalization container.","!module":"sap/ushell/services/_Personalization/VariantSet","!helpDescription":"The personalization variant set contains variants of personalization data. It is used in the personalization container mode.","getCurrentVariantKey":{"!description":"Returns the current variant key.","!static":false,"!category":"function","!type":"fn() -> String"},"containsVariant":{"!description":"Checks if a specific variant is contained in the variant set.","!static":false,"!category":"function","!type":"fn(sVariantKey: String) -> Boolean","parameters":{"sVariantKey":"type: string, description: variant key"}},"addVariant":{"!description":"Creates a new variant in the variant set. In case a variant with this name is already existing an exception is thrown.","!static":false,"!category":"function","!type":"fn(sVariantSetName: String) -> Object","parameters":{"sVariantSetName":"type: string, description: variant set name"}},"delVariant":{"!description":"Deletes a variant from the variant set. In case the variant does not exist nothing happens.","!static":false,"!category":"function","!type":"fn(sVariantKey: String)","parameters":{"sVariantKey":"type: string, description: variant key"}}},"sap.ushell.services.LaunchPage":{"getTileTitle":{"!description":"Returns the tile's title.","!static":false,"!category":"function","!type":"fn(oTile: Object) -> String","parameters":{"oTile":"type: object, description: The tile"}},"getTileTarget":{"!description":"Returns the tile's navigation target.\n\nThe navigation target string is used (when assigned to <code>location.hash<\/code>) for performing a navigation action that eventually opens the application represented by the tile.","!static":false,"!category":"function","!type":"fn(oTile: Object) -> String","parameters":{"oTile":"type: object, description: the tile"}},"isGroupFeatured":{"!description":"Checks if a group was marked as featured (meaning the group is a Fiori 3 featured group).\n\nReturns <code>true<\/code> if the group is featured and <code>false<\/code> if not.","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> Boolean","parameters":{"oGroup":"type: object, description: The group to be checked"}},"getLinkTiles":{"!description":"Returns an array of link tiles for a group. The order of the array is the order in which the links will be displayed to the user.","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> Array","parameters":{"oGroup":"type: object, description: The group whose link tiles are returned"}},"addGroupAt":{"!description":"Adds a new group at a specific location.\n\nIn case of success, the <code>done<\/code> function gets the new added group object. Intention: the page builder adds this group to the specific location on the home screen.\n\nIn case of failure, the <code>fail<\/code> function returns the consistent (i.e. persisted) backend state of all groups.","!static":false,"!category":"function","!type":"fn(sTitle: String, iIndex: Number) -> Object","parameters":{"sTitle":"type: string, description: The title of the new group","iIndex":"type: int, description: the location of the new group"}},"getCatalogTiles":{"!description":"Returns the tiles of a catalog. In case of success, the <code>done<\/code> function of the returned promise object gets an array of 'anonymous' tiles of the catalog.","!static":false,"!category":"function","!type":"fn(oCatalog: Object) -> Object","parameters":{"oCatalog":"type: object, description: The catalog"}},"getGroupId":{"!description":"Returns the unique identifier of the given group","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> String","parameters":{"oGroup":"type: object, description: The group whose id is returned"}},"registerTileActionsProvider":{"!description":"Register an external tile actions provider callback function.\n\nThe callback has to return an array of actions of the given tile. The callback is triggered when @see sap.ushell.services.LaunchPage.getTileActions is called.\n\nTile actions are additional operations that can be executed on a tile, and can be provided by external providers.\n\nA tile action is an object with the following properties: text, icon and targetURL or a press handler.\n\nTile actions should be returned immediately without any additional server access in order to avoid delays in rendering the action list in the browser.","!static":false,"!category":"function","!type":"fn(fnProvider: Object)","parameters":{"fnProvider":"type: Object, description: A callback which returns an array of action objects."}},"getTileSize":{"!description":"Returns the tile size in the format of 1x1 or 1x2 string","!static":false,"!category":"function","!type":"fn(oTile: Object) -> String","parameters":{"oTile":"type: object, description: The tile"}},"getCatalogTileTargetURL":{"!description":"Returns the navigation target URL of a catalog tile. If the catalog tile does not exist, this function implicitly instantiates it using {@link #getCatalogTileView(oCatalogTile)}.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> String","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"getGroupTitle":{"!description":"Returns the title of the given group.","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> String","parameters":{"oGroup":"type: object, description: The group whose title is returned"}},"getGroups":{"!description":"Returns the groups of the user. In case of success, the <code>done<\/code> function gets an array of 'anonymous' groups. The order of the array is the order in which the groups will be displayed to the user.","!static":false,"!category":"function","!type":"fn() -> Promise.<object>"},"setTileVisible":{"!description":"Sets the tile's visibility state and notifies the tile about the change.","!static":false,"!category":"function","!type":"fn(oTile: Object, bNewVisible: Boolean)","parameters":{"bNewVisible":"type: boolean, description: The tile's required visibility state.","oTile":"type: object, description: The tile"}},"!description":"A service for handling groups, tiles and catalogs.\n\nThe functions that return the main objects are getGroups, getGroupTitle, getCatalogs and getCatalogTiles. Since the implementation (i.e. adapter) is platform specific, do not call or access properties and functions of returned objects. Instead, use other functions of the LaunchPage service with the relevant object as the input parameter.\n\nWhen using the content extension factory, any extended content needs to refer to the correct adapter with the field \"contentProvider\".","getCatalogTileViewControl":{"!description":"Returns the UI5 view or control of a catalog tile","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> Object","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"isGroupLocked":{"!description":"Checks if a group was marked as locked (meaning the group and its tiles will lack several capabilities such as Rename, Drag&Drop...).\n\nReturns <code>true<\/code> if the group is locked and <code>false<\/code> if not.","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> Boolean","parameters":{"oGroup":"type: object, description: The group to be checked"}},"isGroupRemovable":{"!description":"Checks if a group can be removed.\n\nReturns <code>true<\/code> if the group can be removed (i.e. if the given group was created by the user) and <code>false<\/code> if the group can only be reset.","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> Boolean","parameters":{"oGroup":"type: object, description: The group to be checked"}},"removeTile":{"!description":"Removes a tile from a group.\n\nIn case of success, the <code>done<\/code> function returns the new tile. Intention: the page builder has already 'hidden' (or removed) the tile.\n\nIn case of failure, the <code>fail<\/code> function should return the consistent (i.e. persisted) backend state of the group.","!static":false,"!category":"function","!type":"fn(oGroup: Object, oTile: Object, iIndex: Number) -> Object","parameters":{"oGroup":"type: object, description: The group from which to remove the tile instance","iIndex":"type: int, description: The tile index","oTile":"type: object, description: The tile instance to remove"}},"getTileType":{"!description":"Returns the tile's type.","!static":false,"!category":"function","!type":"fn(oTile: Object) -> String","parameters":{"oTile":"type: object, description: The tile"}},"setGroupTitle":{"!description":"Sets the title of an existing group.\n\nIn case of success, the <code>done<\/code> function returns nothing. Intention: the page builder knows the new title, and if successful nothing needs to be done, as the title is already visible to the user. In case of failure, the <code>fail<\/code> function returns the consistent (i.e. persisted) backend state of the group title, in most cases the old title.","!static":false,"!category":"function","!type":"fn(oGroup: Object, sTitle: String) -> Object","parameters":{"oGroup":"type: object, description: The group whose title is set","sTitle":"type: string, description: The new title of the group"}},"getAppBoxPressHandler":{"!description":"Returns the press handler for clicking on a tile.","!static":false,"!category":"function","!type":"fn(oTile: Object) -> fn()","parameters":{"oTile":"type: object, description: The tile"}},"getGroupTiles":{"!description":"Returns an array of 'anonymous' tiles of a group. The order of the array is the order of tiles that will be displayed to the user.","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> Array","parameters":{"oGroup":"type: object, description: The group whose tiles are returned"}},"resetGroup":{"!description":"Resets a group.\n\nThe reset action is relevant for a group that was assigned to the user by an administrator. The reset action means that the group is set back to the state defined by the administrator, and changes made by the end user (e.g. adding tiles) are removed. A group can be reset multiple times.\n\nIn case of success, the <code>done<\/code> function gets the reset group object.\n\nIn case of failure, or when the given group was created by the user (i.e. can't be reset)- <code>fail<\/code> handler is called, returning the consistent (i.e. persisted) backend state of all groups. The returned group object is the same as the one returned by @see sap.ushell.services.LaunchPage.getGroups","!static":false,"!category":"function","!type":"fn(oGroup: Object, iIndex: Number) -> Object","parameters":{"oGroup":"type: object, description: The group to be reset","iIndex":"type: int, description: The index of the group to be reset"}},"!module":"sap/ushell/services/LaunchPage","!helpDescription":"A service for handling groups, tiles and catalogs.\n\nThe functions that return the main objects are getGroups, getGroupTitle, getCatalogs and getCatalogTiles. Since the implementation (i.e. adapter) is platform specific, do not call or access properties and functions of returned objects. Instead, use other functions of the LaunchPage service with the relevant object as the input parameter.\n\nWhen using the content extension factory, any extended content needs to refer to the correct adapter with the field \"contentProvider\".","getTileView":{"!description":"Returns UI5 view or control of the tile. In case of success the <code>done<\/code> function should return UI5 view or control of the tile. In case of failure the <code>fail<\/code> function should return nothing.","!static":false,"!category":"function","!type":"fn(oTile: Object) -> Object","parameters":{"oTile":"type: object, description: The tile"}},"getCatalogTilePreviewTitle":{"!description":"Returns preview title for a catalog tile.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> String","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"!proto":"sap.ui.base.Object","getCatalogTileTags":{"!description":"Returns the tags associated with a catalog tile which can be used to find the catalog tile in a tag filter.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> [String]","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"!category":"class","getCatalogTilePreviewSubtitle":{"!description":"Returns preview subtitle for a catalog tile.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> String","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"getCatalogTileView":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 (as a result of XMLHttpRequest spec prohibiting the sending of synchronous requests). Use <code>getCatalogTileViewControl<\/code> instead<br>Returns the UI5 view or control of a catalog tile","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> Object","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"!constructorDescription":"This method MUST be called by the Unified Shell's container only, others MUST call <code>sap.ushell.Container.getService(\"LaunchPage\")<\/code>.\rConstructs a new instance of the page builder service.","getCatalogs":{"!description":"Returns the catalogs of the user. <p> Only severe failures make the overall operation fail. If loading of a remote catalog fails, this is handled gracefully by providing a \"dummy\" empty catalog (with ID instead of title). Use {@link getCatalogError} to check if a (remote) catalog could not be loaded from the backend. <p> Progress notifications are sent for each single catalog, i.e. attaching a <code>progress<\/code> handler gives you the same possibilities as attaching a <code>done<\/code> handler, but with the advantage of improved responsiveness.","!static":false,"!category":"function","!type":"fn() -> Object"},"moveTile":{"!description":"Moves a tile within a group or between different groups.\n\nIn case of success, the <code>done<\/code> function returns nothing. Intention: the page builder already moved the tile.\n\nIn case of failure, the <code>fail<\/code> function returns the consistent (i.e. persisted) backend state of the source group and the target group. The result is in the following format {source:[{},{}], target:[{},{}]}.\n\nThe source and the target groups tiles are in the form of the @see sap.ushell.services.LaunchPage.getGroupTiles","!static":false,"!category":"function","!type":"fn(oTile: Object, iSourceIndex: Number, iTargetIndex: Number, oSourceGroup: Object, oTargetGroup?: Object, sNewTileType?: String) -> Object","parameters":{"oTargetGroup":"type: object, description: The same object type as the one returned by <code>sap.ushell.services.LaunchPage.getGroups<\/code> the target group the tile will be placed in, in case this parameter is not supplied we assume the move tile is within the source group","oSourceGroup":"type: object, description: the source group the tile came from","iTargetIndex":"type: int, description: the target group index, in case this parameter is not supplied we assume the move tile is within the source group using iSourceIndex","iSourceIndex":"type: int, description: the index in the source group","sNewTileType":"type: string, description: (added with 1.46) The new type of the tile","oTile":"type: object, description: a tile instance to be moved. The same object type as the one returned by <code>sap.ushell.services.LaunchPage.getGroupTiles<\/code>"}},"getCatalogTitle":{"!description":"Returns the catalog's title","!static":false,"!category":"function","!type":"fn(oCatalog: Object) -> String","parameters":{"oCatalog":"type: object, description: The catalog"}},"getTileId":{"!description":"Returns the tile's unique identifier","!static":false,"!category":"function","!type":"fn(oTile: Object) -> String","parameters":{"oTile":"type: object, description: The tile"}},"addGroup":{"!description":"Adds a new group.\n\nIn case of success, the <code>done<\/code> function gets the new added group object. Intention: the page builder adds this group to the end of the home screen.\n\nIn case of failure, the <code>fail<\/code> function returns the consistent (i.e. persisted) backend state of all groups.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> Object","parameters":{"sTitle":"type: string, description: The title of the new group"}},"getCatalogTileKeywords":{"!description":"Returns the keywords associated with a catalog tile which can be used to find the catalog tile in a search. Note: getCatalogTileView <b>must<\/b> be called <b>before<\/b> this method. Otherwise the keywords may be incomplete.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> [String]","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"isCatalogsValid":{"!description":"Returns whether the catalogs collection previously returned by <code>getCatalogs()<\/code> is still valid.\n\nInitially the result is <code>false<\/code> until <code>getCatalogs()<\/code> has been called. Later, the result might be <code>false<\/code> again in case one of the catalogs has been invalidated, e.g. due to adding a tile to a catalog (\"Add to catalog\" scenario).","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addTile":{"!description":"Adds a tile to a group.\n\nIf no group is provided then the tile is added to the default group.\n\nIn case of success, the <code>done<\/code> function returns the new tile. Intention: the page builder by default puts this tile at the end of the default group. In case of failure, the <code>fail<\/code> function should return the consistent (i.e. persisted) backend state of the default group.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object, oGroup?: Object) -> Object","parameters":{"oGroup":"type: object, description: The target group","oCatalogTile":"type: object, description: An 'anonymous' tile from the tile catalog"}},"refreshTile":{"!description":"Triggers a refresh action of a tile. Typically this action is related to the value presented in dynamic tiles","!static":false,"!category":"function","!type":"fn(oTile: Object)","parameters":{"oTile":"type: object, description: The tile"}},"getCatalogTileId":{"!description":"Returns catalog tile's unique identifier. This function may be called for a catalog tile or (since 1.21.0) for a group tile. In the latter case, the function returns the unique identifier of the catalog tile on which the group tile is based.","!static":false,"!category":"function","!type":"fn(oTile: Object) -> String","parameters":{"oTile":"type: object, description: The tile or the catalog tile"}},"getDefaultGroup":{"!description":"Returns the default group of the user. In case of success, the <code>done<\/code> function gets an 'anonymous' object representing the default group.","!static":false,"!category":"function","!type":"fn() -> Object"},"getCatalogData":{"!description":"Returns catalog's technical data.","!static":false,"!category":"function","!type":"fn(oCatalog: Object) -> Object","parameters":{"oCatalog":"type: object, description: the catalog"}},"getCatalogId":{"!description":"Returns the catalog's unique identifier","!static":false,"!category":"function","!type":"fn(oCatalog: Object) -> String","parameters":{"oCatalog":"type: object, description: The catalog"}},"getCatalogTileTitle":{"!description":"Returns the catalog tile info","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> String","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"getCatalogTileSize":{"!description":"Returns the size of a catalog tile as a string. For example: \"1x1\", \"1x2\"","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> String","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"moveGroup":{"!description":"Moves a group to a new index (i.e. location).\n\nIn case of success, the <code>done<\/code> function is called without any value. Intention: the page builder already moved the page (visible to the user) and if successful - nothing needs to be done. In case of failure, the <code>fail<\/code> function returns the consistent (i.e. persisted) backend state of all groups.","!static":false,"!category":"function","!type":"fn(oGroup: Object, iNewIndex: Number) -> Object","parameters":{"iNewIndex":"type: int, description: The new index for the group","oGroup":"type: object, description: The group to be moved"}},"getCatalogTilePreviewIcon":{"!description":"Returns preview icon for a catalog tile.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> String","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"removeGroup":{"!description":"Removes a group.\n\nIn case of success, the <code>done<\/code> function is called without any value (i.e. input data). Intention: the page builder already removed the page (or hid it from the user) and if successful - nothing needs to be done.\n\nIn case of failure, the <code>fail<\/code> function returns the consistent (i.e. persisted) backend state of all groups.","!static":false,"!category":"function","!type":"fn(oGroup: Object, iIndex: Number) -> Object","parameters":{"oGroup":"type: object, description: The group to be removed","iIndex":"type: int, description: The index of the group to be removed"}},"getCatalogError":{"!description":"Returns the catalog's technical error message in case it could not be loaded from the backend. <p> <b>Beware:<\/b> The technical error message is not translated!","!static":false,"!category":"function","!type":"fn(oCatalog: Object) -> String","parameters":{"oCatalog":"type: object, description: the catalog"}}},"sap.ushell.renderers.fiori2":{"Shell":{"!description":"Shell : String","!module":"sap/ushell/renderers/fiori2/Shell.controller","!category":"enum","!type":"String"},"LaunchpadState":{"!description":"The launchpad states that can be passed as a parameter.<\/br>\n\n<b>Values:<b> App - launchpad state when running a Fiori app<\/br> Home - launchpad state when the home page is open<\/br>","!category":"enum","!type":"String"},"Renderer":"sap.ushell.renderers.fiori2.Renderer_obj","!category":"namespace"},"sap.ushell.services.URLParsing":{"addSystemToServiceUrl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined please use <code>sap.ui.model.odata.ODataUtils.setOrigin(sServiceUrl, { alias : sSystem });<\/code> The system alias can be extracted from the Component via <code>getComponentData().startupParameters[\"sap-system\"][0]<\/code><br>Note: deprecated, please use <code>sap.ui.model.odata.ODataUtils.setOrigin(sServiceUrl, { alias : sSystem });<\/code> Makes the given server-relative SAP OData service URL point to the system given explicitly as parameter <code>vComponentOrSystem<\/code>. If this parameter is not provided, it makes the server-relative URL point to the system of the current application. <em>Server-relative URL<\/em> means a URL starting with exactly one &quot;/&quot; (also known as absolute-path URL). The <em>system of the current application<\/em> is taken from the parameter &quot;sap-system&quot; of the last navigation target resolution result. <p> If either a multiple-origin parameter <code>;mo/<\/code> or an origin parameter with qualified system (<code>;o=sid(SYS.123)<\/code> or <code>o=SYSALIAS<\/code>) is already present, the <code>sServiceUrl<\/code> is returned unchanged. <p> The framework invokes this function for SAPUI5 applications that have been built using declarative model instantiation with the application descriptor (data source) mechanism or using an sap.ca framework. For these applications, you do not need to invoke this function explicitly in the application code. If the application does not use any of these mechanisms, but explicitly constructs additional OData models or performs OData requests, the application code shall invoke this function. It shall pass its root component instance as <code>vComponentOrSystem<\/code> - the function will then determine the system from the navigation start-up parameter &quot;sap-system&quot; (<code>getComponentData().startupParameters[&quot;sap-system&quot;][0]). Applications may call this API with parameter <code>vComponentOrSystem<\/code> and a non-empty string value if application-specific logic is used to determine the target system for service calls. <p> With service URLs converted using this API, administrators can redirect service calls to servers other than the default SAP Gateway and back-end server either via reverse proxy (e.g. SAP Web Dispatcher) configuration or using the system alias functionality of the SAP Gateway server. <p> The system is added to the last URL segment of the service URL with the segment parameter <code>;o=<\/code>. You can also make this function put the system to a different URL path segment of the service URL by specifying the empty segment parameter <code>;o=<\/code>, e.g. <code>/sap/opu/odata/MyService;o=/MyEntities/$count?p1=v1<\/code>. If both <code>vComponentOrSystem<\/code> is empty and the current application has no system, no system is added and the empty segment parameter <code>;o<\/code> is removed.<br/>\n\n<b>Example 1:<\/b> <code>/sap/opu/odata/MyService/?p1=v1<\/code> is converted to <code>/sap/opu/odata/MyService;o=SYS/?p1=v1<\/code> if the target system is &quot;SYS&quot;. However it remains unchanged if both the current application's system <em>and<\/em> the parameter <code>vComponentOrSystem<\/code> are empty.<br/>\n\n<b>Example 2:<\/b> <code>/sap/opu/odata/MyService;o=/MyEntities/$count?p1=v1<\/code> is converted to <code>/sap/opu/odata/MyService;o=sid(SYS.123)/MyEntities/$count?p1=v1<\/code> if parameter <code>vComponentOrSystem<\/code> is set to &quot;sid(SYS.123)&quot;<\/code>. <p> The URL is in no way normalized.","!static":false,"!category":"function","!type":"fn(sServiceUrl: String, vComponentOrSystem?: String | sap.ui.core.Component) -> String","parameters":{"vComponentOrSystem":"type: string|sap.ui.core.Component, description: the root component of the FLP application ( <code>getComponentData().startupParameters[&quot;sap-system&quot;][0]<\/code> is used as system alias if present) or a string valued system specification like &quot;SYS&quot; or &quot;sid(SYS.123)&quot; if undefined or falsy the system of the current application is used","sServiceUrl":"type: string, description: a server-relative URL without system alias information"}},"getHash":{"!description":"Extract a hash part from an URL, including an app-specific part","!static":false,"!category":"function","!type":"fn(sURL: String) -> String","parameters":{"sURL":"type: String, description: any value"}},"!proto":"sap.ui.base.Object","isIntentUrl":{"!description":"Check if a URL has an intent based navigation part which can be parsed into a semantic object and action part. Accepts only a relative URL (must contain #) or fully qualified Urls for which origin and filename must correspond to the running launchpad.\n\nGiven actual url <code>http://www.mycorp.com/sap/fiori/FioriLaunchpad.html?sap-language=DE#SO-action?P1=value1<\/code>, the following parts <code>http://www.mycorp.com/sap/fiori/FioriLaunchpad.html<code> must match.\n\nThe actual test is synchronous and *only* tests whether the hash part can be parsed and contains a semantic object and action. It does not test whether the intent or it's parameters is valid for a given user","!static":false,"!category":"function","!type":"fn(sUrl: String) -> Boolean","parameters":{"sUrl":"type: String, description: the URL to test. Note: this url must be in internal format."}},"!category":"class","parseParameters":{"!description":"parse parameters from a URI query string (starting with ?) into a parameter object","!static":false,"!category":"function","!type":"fn(sParams: String) -> Object","parameters":{"sParams":"type: String, description: Parameter string, e.g. <code>?ABC=1&ABC=1%202DEF=4<\/code>"}},"getShellHash":{"!description":"Extract the Shell hash# part from an URL The application specific route part is removed","!static":false,"!category":"function","!type":"fn(sShellHashString: String) -> Object","parameters":{"sShellHashString":"type: string, description: a valid (Shell) url, e.g. <br/> <code>http://xx.b.c#Object-name~AFE2==?PV1=PV2&PV4=V5&/display/detail/7?UU=HH<\/code>"}},"!constructorDescription":"The Unified Shell's internal URL parsing service (platform independent)\rThis method MUST be called by the Unified Shell's container only, others MUST call\r<code>sap.ushell.Container.getService(\"URLParsing\")<\/code>.\rConstructs a new instance of the URL parsing service.\r\rMethods in this class allow to break down a shell compliant hash into it's respective parts\r(SemanticObject,Action,Context, Parameters, appSpecificHash) or (ShellPart,appSpecificHash) respectively\ror construct a hash from its constituents.\r\rAll methods deal with the *internal* shellHash format.\r\rMost of the parse methods are robust w.r.t. a leading \"#\".\r\rNote: The functions were designed with a \"truthy\" behaviour for not present values,\rThus a client should not rely on the difference between null, \"undefined\", \"\" when testing for the result of a parse action.\r\rThe parsing functions are deliberately restrictive and fragile, only shell compliant hashes are parsed correctly,\rbehaviour for non-compliant hashes is undefined and subject to change,\rnotably we do not aim do \"degrade\" nicefully or support partial parsing of corrupted urls.","!module":"sap/ushell/services/URLParsing","parseShellHash":{"!description":"Decompose a shell hash into the respective parts","!static":false,"!category":"function","!type":"fn(sHash: String) -> Object","parameters":{"sHash":"type: String, description: Hash part of a shell compliant URL <code>#SO-Action~Context?P1=a&P2=x&/route?RPV=1<\/code> the hash part of an URL, <br/> e.g. <code>\"#Object-name~AFE2==?PV1=PV2&PV4=V5&/display/detail/7?UU=HH<\/code>"}},"paramsToString":{"!description":"combine members of a javascript object into a parameter string, note that parameters are ordered in an arbitrary manner which is subject to change","!static":false,"!category":"function","!type":"fn(oParams: Object) -> String","parameters":{"oParams":"type: Object, description: any value { ABC : [1,\"1 2\"], DEF : [\"4\"]}"}},"constructShellHash":{"!description":"compose a shell Hash from it's respective parts Note that it also may append an app specific route !","!static":false,"!category":"function","!type":"fn(oShellHash: Object) -> String","parameters":{"oShellHash":"type: object, description: The action must be a valid action, it may not contain \"?\" or directly a parameter string <code>undefined<\/code> if not a parseable hash <code> { target: { semanticObject: string, action: string, contextRaw: string }, params: MapObject<String,Array[String]>, appStateKey: string appSpecificRoute: string } <\/code> xor <code>{ target: { shellHash } }<\/code> Note: in general it is preferred to add an appStateKey directly to the params object"}},"splitHash":{"!description":"split a Unified Shell compliant hash into an Object containing a shell specific part and an app specific parts<\/br> for non compliant hash strings, the empty object {} is returned. an optional leading # is stripped","!static":false,"!category":"function","!type":"fn(sHash: String) -> Object","parameters":{"sHash":"type: String, description: Hash part of a shell conformant URL <code>#SO-Action~Context?P1=a&P2=x&/route?RPV=1<code> the hash part of an URL, e.g. <code>\"#Object-name~AFE2==?PV1=PV2&PV4=V5&/display/detail/7?UU=HH<code>"}}},"sap.ushell.ui.shell.ToolAreaItem":{"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nDefines whether to mark the control as selected\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"getAriaLabel":{"!description":"Gets current value of property {@link #getAriaLabel ariaLabel}.\n\nText which will be read by screenreader.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","!category":"class","fireExpand":{"!description":"Fires event {@link #event:expand expand} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new ToolAreaItem.\r\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getAriaLabel ariaLabel} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:expand expand} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getExpandable":{"!description":"Gets current value of property {@link #getExpandable expandable}.\n\nDefines whether the control will have an expand functionality containing sub-items or actions. If the property is set to true, a small \"expand\" icon appears in the lower corner of the control. The \"expand\" event is fired when the \"expand\" icon is pressed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ushell.ui.shell.ToolAreaItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.shell.ToolAreaItem<\/code> itself.\n\nEvent is fired when the user presses the item.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.shell.ToolAreaItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"A control to be placed in the tool area","setExpandable":{"!description":"Sets a new value for property {@link #getExpandable expandable}.\n\nDefines whether the control will have an expand functionality containing sub-items or actions. If the property is set to true, a small \"expand\" icon appears in the lower corner of the control. The \"expand\" event is fired when the \"expand\" icon is pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bExpandable: Boolean) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"bExpandable":"type: boolean, description: New value for property <code>expandable<\/code>"}},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nDefines whether to display the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.shell.ToolAreaItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nDefines whether to display the control\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getText":{"!description":"Gets current value of property {@link #getText text}.","!static":false,"!category":"function","!type":"fn() -> String"},"attachExpand":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:expand expand} event of this <code>sap.ushell.ui.shell.ToolAreaItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.shell.ToolAreaItem<\/code> itself.\n\nEvent is fired when the user presses the Expand icon.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.shell.ToolAreaItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon that is displayed in the item.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setAriaLabel":{"!description":"Sets a new value for property {@link #getAriaLabel ariaLabel}.\n\nText which will be read by screenreader.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAriaLabel: String) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"sAriaLabel":"type: string, description: New value for property <code>ariaLabel<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.shell.ToolAreaItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon that is displayed in the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ushell.ui.shell.ToolAreaItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nDefines whether to mark the control as selected\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachExpand":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:expand expand} event of this <code>sap.ushell.ui.shell.ToolAreaItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!module":"sap/ushell/ui/shell/ToolAreaItem","!helpDescription":"A control to be placed in the tool area","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ushell.System_obj":{"!type":"fn(oData: Object)","prototype":"sap.ushell.System"},"sap.ushell.components.factsheet.controls.PictureViewerItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 PictureViewerItem is used in PictureViewer control and is not meant to be consumed outside of PictureViewer usage. PictureViewer was replacing the Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Picture viewer control relying on the TileContainer control","setSrc":{"!description":"Setter for property <code>src<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!static":false,"!category":"function","!type":"fn(sSrc: String) -> sap.ushell.components.factsheet.controls.PictureViewerItem","parameters":{"sSrc":"type: string, description: new value for property <code>src<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.components.factsheet.controls.PictureViewerItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getSrc":{"!description":"Gets current value of property {@link #getSrc src}.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","!category":"class","destroyImage":{"!description":"Destroys the image in the aggregation {@link #getImage image}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.components.factsheet.controls.PictureViewerItem"},"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureViewerItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new components/factsheet/controls/PictureViewerItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getImage image} : sap.m.Image<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ushell/components/factsheet/controls/PictureViewerItem","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 PictureViewerItem is used in PictureViewer control and is not meant to be consumed outside of PictureViewer usage. PictureViewer was replacing the Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Picture viewer control relying on the TileContainer control","getImage":{"!description":"Gets content of aggregation {@link #getImage image}.","!static":false,"!category":"function","!type":"fn() -> sap.m.Image"},"setImage":{"!description":"Sets the aggregated {@link #getImage image}.","!static":false,"!category":"function","!type":"fn(oImage: sap.m.Image) -> sap.ushell.components.factsheet.controls.PictureViewerItem","parameters":{"oImage":"type: sap.m.Image, description: The image to set"}}},"sap.ushell.ui5service.ShellUIService":{"!description":"The Unified Shell's ShellUIService service.\n\nThis service allows apps to interact with the Fiori Launchpad UI. The service is injected in the app components by the FLP renderer before the corresponding apps start. To consume the service, app components should declare it in their manifest.json as follows:\n\n<pre>\r{\r   ...\r   \"sap.ui5\": {\r      \"services\" : {\r         \"ShellUIService\": {\r             \"factoryName\": \"sap.ushell.ui5service.ShellUIService\"\r         }\r      }\r   }\r   ...\r}\r<\/pre>\n\nThe service can be then retrieved and consumed from the app root component as in the following example: <pre>\r// Component.js (the app root component)\r...\rthis.getService(\"ShellUIService\").then( // promise is returned\r   function (oService) {\r      oService.setTitle(\"Application Title\");\r   },\r   function (oError) {\r      jQuery.sap.log.error(\"Cannot get ShellUIService\", oError, \"my.app.Component\");\r   }\r);\r...\r<\/pre>\n\nThe ShellUIService can work together with the routing defined in a UI5 app to set title and hierarchy automatically, as the navigation within the app occurs. This can be achieved by enabling the ShellUIService to load instantly and configuring one or both <code>setTitle<\/code> and <code>setHierarchy<\/code> options to <code>auto<\/code> in the app manifest, as shown in the example below:\n\n<pre>\r{\r   \"sap.ui5\": {\r      \"services\" : {\r         \"ShellUIService\": {\r             \"lazy\": false,\r             \"factoryName\": \"sap.ushell.ui5service.ShellUIService\",\r             \"settings\": {\r                 \"setHierarchy\": \"auto\", // configuration under discussion currently\r                 \"setTitle\": \"auto\" // configuration under discussion currently\r             }\r         }\r      }\r   }\r}\r<\/pre>\n\nPlease note that the <code>setHierarchy<\/code> or <code>setTitle<\/code> methods should not be actively called by the application when title and hierarchy are set automatically.","extend":{"!description":"Creates a new subclass of class sap.ushell.ui5service.ShellUIService with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link Service.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setHierarchy":{"!description":"Displays the given hierarchy in the shell header.","!static":false,"!category":"function","!type":"fn(aHierarchyLevels?: [Object])","parameters":{"aHierarchyLevels":"type: object[], description: An array representing hierarchies of the currently displayed app. The array should specify title, icon, and navigation intent as shown in the following example:\n\n<pre>\r[\r    {\r        title: \"Main View\",\r        icon: \"sap-icon://documents\",\r        intent: \"#Action-sameApp\"\r    },\r    {\r        title: \"View 2\",\r        subtitle: \"Application view number 2\",\r        intent: \"#Action-sameApp&/View2/\"\r    },\r    {\r        title: \"View 3\",\r        subtitle: \"Application view number 3\",\r        intent: \"#Action-sameApp&/View3/\"\r    }\r]\r<\/pre>\n\nThe default app hierarchy is applied if no parameter is given."}},"setRelatedApps":{"!description":"Used by apps to set related apps. This setting is propagated towards the Shell Header via corresponding events.","!static":false,"!category":"function","!type":"fn(aRelatedApps?: [Object])","parameters":{"aRelatedApps":"type: object[], description: an array of related apps, for example like:\n\n<pre>\r[\r      {\r          title: \"App 1\",\r          icon: \"sap-icon://folder\",\r          subtitle: \"go to app 1\",\r          intent: \"#Action-toapp1\"\r      },\r      {\r          title: \"App 2\",\r          icon: \"sap-icon://folder\",\r          subtitle: \"go to app 2\",\r          intent: \"#Action-toapp2\"\r      },\r      {\r          title: \"App 3\",\r          icon: \"sap-icon://folder\",\r          subtitle: \"go to app 3\",\r          intent: \"#Action-toapp3\"\r      }\r]\r<\/pre>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui5service.ShellUIService.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Returns an instance of the ShellUIService. This constructor must only be\rcalled internally by the Fiori Launchpad renderer and never by\rapplications.\r\rInstead, this service should be consumed by app components as described\rin the overview section of this class.","getTitle":{"!description":"Returns the title that was last set via {@link setTitle}.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ushell/ui5service/_ShellUIService/shelluiservice.class.factory","!helpDescription":"The Unified Shell's ShellUIService service.\n\nThis service allows apps to interact with the Fiori Launchpad UI. The service is injected in the app components by the FLP renderer before the corresponding apps start. To consume the service, app components should declare it in their manifest.json as follows:\n\n<pre>\r{\r   ...\r   \"sap.ui5\": {\r      \"services\" : {\r         \"ShellUIService\": {\r             \"factoryName\": \"sap.ushell.ui5service.ShellUIService\"\r         }\r      }\r   }\r   ...\r}\r<\/pre>\n\nThe service can be then retrieved and consumed from the app root component as in the following example: <pre>\r// Component.js (the app root component)\r...\rthis.getService(\"ShellUIService\").then( // promise is returned\r   function (oService) {\r      oService.setTitle(\"Application Title\");\r   },\r   function (oError) {\r      jQuery.sap.log.error(\"Cannot get ShellUIService\", oError, \"my.app.Component\");\r   }\r);\r...\r<\/pre>\n\nThe ShellUIService can work together with the routing defined in a UI5 app to set title and hierarchy automatically, as the navigation within the app occurs. This can be achieved by enabling the ShellUIService to load instantly and configuring one or both <code>setTitle<\/code> and <code>setHierarchy<\/code> options to <code>auto<\/code> in the app manifest, as shown in the example below:\n\n<pre>\r{\r   \"sap.ui5\": {\r      \"services\" : {\r         \"ShellUIService\": {\r             \"lazy\": false,\r             \"factoryName\": \"sap.ushell.ui5service.ShellUIService\",\r             \"settings\": {\r                 \"setHierarchy\": \"auto\", // configuration under discussion currently\r                 \"setTitle\": \"auto\" // configuration under discussion currently\r             }\r         }\r      }\r   }\r}\r<\/pre>\n\nPlease note that the <code>setHierarchy<\/code> or <code>setTitle<\/code> methods should not be actively called by the application when title and hierarchy are set automatically.","!proto":"Service","setTitle":{"!description":"Displays the given title in the shell header. This method should not be called if the app calling the method is not currently displayed in the Fiori Launchpad.","!static":false,"!category":"function","!type":"fn(sTitle?: String)","parameters":{"sTitle":"type: string, description: The new title. The default title is set if this argument is not given."}},"!category":"class"},"sap.ushell.components.factsheet.controls.PictureViewer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureViewer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.TileContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.components.factsheet.controls.PictureViewer"},"sap":{"sap":"sap","ushell":"sap.ushell","!category":"namespace"},"sap.ushell.services.EndUserFeedback_obj":{"!type":"fn(oAdapter: Object, oContainerInterface: Object, sParameters: String, oServiceConfiguration: Object)","prototype":"sap.ushell.services.EndUserFeedback"},"sap.ushell.services.URLParsing_obj":{"!type":"fn()","prototype":"sap.ushell.services.URLParsing"},"sap.ushell.services.UsageAnalytics_obj":{"!type":"fn(oContainerInterface: Object, sParameter: Object, oServiceProperties: Object)","prototype":"sap.ushell.services.UsageAnalytics"},"sap.ushell.services.SmartNavigation":{"toExternal":{"!description":"Usage of this method in place of {@link sap.ushell.services.CrossApplicationNavigation#toExternal} drives the smartness of the results returned by {@link sap.ushell.services.SmartNavigation#getLinks}.","!static":false,"!category":"function","!type":"fn()"},"!constructorDescription":"Constructs an instance of SmartNavigation.\n\n<p>\nThe constructed service provides an enhancement on {@link CrossApplicationNavigation#getLinks} and\n{@link CrossApplicationNavigation#toExternal}. In order for an application to leverage this enhancement,\nit is pertinent that the application uses {@link SmartNavigation#toExternal} for naviagtion.\nHence the caller can subsequently use {@link SmartNavigation#getLinks} with the outcome that it sorts the\nresulting list in the order of frequency of <i>Attempted<\/i> navigation from the application to respective links.\n<p>\n<i>Attempted<\/i> in the previous paragraph is emphasized due to the fact that a click on the link\nwill cause an increment of the frequency count, regardless of wether the navigation was successful or not.\n<p>\nNote that an instance of this service should be obtained with <code>sap.ushell.services.Container#getService( \"SmartNavigation\" )<\/code>","getLinks":{"!description":"Resolves the given semantic object (or action) and business parameters to a list of links available to the user, sorted according their relevance to the calling application.\n\nThe relevance of link is defined by the frequency with which a navigation activity from the calling application to that link occurs.\n\nInternally, this method delegates to {@link sap.ushell.services.CrossApplicationNavigation#getLinks} and then sorts the resulting list accordingly.","!static":false,"!category":"function","!type":"fn() -> jQuery.Deferred.promise"},"!module":"sap/ushell/services/SmartNavigation","getPrimaryIntent":{"!description":"Completely delegates to {@link sap.ushell.services.CrossApplicationNavigation#getPrimaryIntent}, and either may be used in place of the other with exactly the same outcome.","!static":false,"!category":"function","!type":"fn()"},"hrefForExternal":{"!description":"Completely delegates to {@link sap.ushell.services.CrossApplicationNavigation#hrefFoExternal}, and either may be used in place of the other with exactly the same outcome.","!static":false,"!category":"function","!type":"fn()"},"!proto":"sap.ui.base.Object","trackNavigation":{"!description":"Tracks a navigation to a valid intent if provided via arguments but does not perform the navigation itself. If no valid intent was provided tracking will be prevented. The intent has to consist of SemanticObject and Action. It may be passed as complete shellHash (presidence) or as individual parts Additional parameters will not be part of the tracking and ignored This Method can be used to track a click if the actual navigation was triggered via clicking a link on the UI.","!static":false,"!category":"function","!type":"fn(oArguments: Object) -> Object","parameters":{"oArguments":"type: object, description: The navigation target as object, for example: <code>{ target: { shellHash: 'SaleOrder-display' } }<\/code> or <code> { target: { semanticObject: 'SalesOrder', action: 'action' } } <\/code>"}},"!category":"class"},"sap.ushell.services.UserInfo_obj":{"!type":"fn()","prototype":"sap.ushell.services.UserInfo"},"sap.ushell.ui.appfinder.AppBox":{"getSubtitle":{"!description":"Gets current value of property {@link #getSubtitle subtitle}.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","!category":"class","getNavigationMode":{"!description":"Gets current value of property {@link #getNavigationMode navigationMode}.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new ui/appfinder/AppBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSubtitle subtitle} : string<\/li>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getUrl url} : string<\/li>\n<li>{@link #getNavigationMode navigationMode} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPinButton pinButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.","!static":false,"!category":"function","!type":"fn() -> String"},"setSubtitle":{"!description":"Sets a new value for property {@link #getSubtitle subtitle}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSubtitle: String) -> sap.ushell.ui.appfinder.AppBox","parameters":{"sSubtitle":"type: string, description: New value for property <code>subtitle<\/code>"}},"getPinButton":{"!description":"Gets content of aggregation {@link #getPinButton pinButton}.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ushell.ui.appfinder.AppBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.appfinder.AppBox<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.appfinder.AppBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.appfinder.AppBox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Add your documentation for the newui/appfinder/AppBox","attachAfterRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterRendering afterRendering} event of this <code>sap.ushell.ui.appfinder.AppBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.appfinder.AppBox<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.appfinder.AppBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.appfinder.AppBox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.appfinder.AppBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setNavigationMode":{"!description":"Sets a new value for property {@link #getNavigationMode navigationMode}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNavigationMode: String) -> sap.ushell.ui.appfinder.AppBox","parameters":{"sNavigationMode":"type: string, description: New value for property <code>navigationMode<\/code>"}},"setPinButton":{"!description":"Sets the aggregated {@link #getPinButton pinButton}.","!static":false,"!category":"function","!type":"fn(oPinButton: sap.m.Button) -> sap.ushell.ui.appfinder.AppBox","parameters":{"oPinButton":"type: sap.m.Button, description: The pinButton to set"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ushell.ui.appfinder.AppBox","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn() -> String"},"setUrl":{"!description":"Sets a new value for property {@link #getUrl url}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUrl: String) -> sap.ushell.ui.appfinder.AppBox","parameters":{"sUrl":"type: string, description: New value for property <code>url<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.appfinder.AppBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: String) -> sap.ushell.ui.appfinder.AppBox","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ushell.ui.appfinder.AppBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.appfinder.AppBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.appfinder.AppBox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getUrl":{"!description":"Gets current value of property {@link #getUrl url}.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ushell/ui/appfinder/AppBox","!helpDescription":"Add your documentation for the newui/appfinder/AppBox","destroyPinButton":{"!description":"Destroys the pinButton in the aggregation {@link #getPinButton pinButton}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.ui.appfinder.AppBox"},"fireAfterRendering":{"!description":"Fires event {@link #event:afterRendering afterRendering} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.appfinder.AppBox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachAfterRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterRendering afterRendering} event of this <code>sap.ushell.ui.appfinder.AppBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ushell.ui.appfinder.AppBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.ushell.services.PersonalizationContainer":{"!description":"The personalization container is the anchor object of the unified shell personalization in container mode.","containsVariantSet":{"!description":"Checks if a specific variant set is contained in the container.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Boolean","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"delItem":{"!description":"Deletes a direct item from the container. In case the item does not exist, nothing happens.","!static":false,"!category":"function","!type":"fn(sItemKey: String)","parameters":{"sItemKey":"type: string, description: item key"}},"addVariantSet":{"!description":"Creates a new variant set in the container. In case a variant set with this key is already existing an exception is thrown.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Object","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"setItemValue":{"!description":"Sets the value of a direct item in the container. In case the item is already existing its value is overwritten. In case it is not existing a new item with this key and value is created.","!static":false,"!category":"function","!type":"fn(sItemKey: String, oItemValue: Object)","parameters":{"sItemKey":"type: string, description: item key","oItemValue":"type: object, description: item value (JSON object)"}},"!proto":"sap.ui.base.Object","containsItem":{"!description":"Checks if a specific direct item is contained in the container.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Boolean","parameters":{"sItemKey":"type: string, description: item key"}},"save":{"!description":"Attempts to save the current container data at the underlying storage asynchronously. The current state is serialized.","!static":false,"!category":"function","!type":"fn() -> Object"},"!category":"class","getVariantSetKeys":{"!description":"Returns an array with the keys of the variant sets in the container.","!static":false,"!category":"function","!type":"fn() -> Array"},"getItemValue":{"!description":"Returns the value for a direct item from the container.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Object","parameters":{"sItemKey":"type: string, description: item key"}},"delVariantSet":{"!description":"Deletes a variant set from the container. In case the variant set does not exist nothing happens.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String)","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!constructorDescription":"To be called by the personalization service getPersonalizationContainer method.","!module":"sap/ushell/services/_Personalization/PersonalizationContainer","load":{"!description":"(Re)loads the current container data from the underlying storage asynchronously. The current local data is discarded.\n\nReturns a promise for the load operation. If another save/load/delete operation is not completed, the operation may fail! (wait for the other promise).\n\nSynchronous read and write operations before the load is done have undefined effects.","!static":false,"!category":"function","!type":"fn() -> Object"},"!helpDescription":"The personalization container is the anchor object of the unified shell personalization in container mode.","getItemKeys":{"!description":"Returns an array with the keys of direct items in the container.","!static":false,"!category":"function","!type":"fn() -> Array"}},"sap.ushell.ui.tile":{"StateArrow":"sap.ushell.ui.tile.StateArrow","State":"sap.ushell.ui.tile.State","!category":"namespace"},"sap.ushell.services.SupportTicket":{"!description":"The Unified Shell's Support Ticket service","!constructorDescription":"This method MUST be called by the Unified Shell's container only, others\rMUST call <code>sap.ushell.Container.getService(\"SupportTicket\")<\/code>.\rConstructs a new instance of the support ticket service.","!module":"sap/ushell/services/SupportTicket","!helpDescription":"The Unified Shell's Support Ticket service","createTicket":{"!description":"Creates a Support Ticket. Forwards the given data (JSON object) to the associated adapter.","!static":false,"!category":"function","!type":"fn(oSupportTicketData: JSON) -> Object","parameters":{"oSupportTicketData":"type: JSON, description: JSON object containing the input fields required for the support ticket."}},"isEnabled":{"!description":"Checks if the service is enabled. <p> The service enablement depends on the configuration in the back-end system and the bootstrap configuration.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.services.PersonalizationContainerVariantSet_obj":{"!type":"fn()","prototype":"sap.ushell.services.PersonalizationContainerVariantSet"},"sap.ushell.ui.footerbar.AddBookmarkButton":{"getNumberUnit":{"!description":"Gets current value of property {@link #getNumberUnit numberUnit}.","!static":false,"!category":"function","!type":"fn() -> String"},"getServiceUrl":{"!description":"Gets current value of property {@link #getServiceUrl serviceUrl}.","!static":false,"!category":"function","!type":"fn() -> Object"},"getAppData":{"!description":"Gets current value of property {@link #getAppData appData}.","!static":false,"!category":"function","!type":"fn() -> Object"},"getSubtitle":{"!description":"Gets current value of property {@link #getSubtitle subtitle}.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.m.Button","setAfterPressHandler":{"!description":"Sets a new value for property {@link #getAfterPressHandler afterPressHandler}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oAfterPressHandler: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"oAfterPressHandler":"type: any, description: New value for property <code>afterPressHandler<\/code>"}},"!category":"class","setAppData":{"!description":"Sets a new value for property {@link #getAppData appData}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oAppData: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"oAppData":"type: object, description: New value for property <code>appData<\/code>"}},"setTileIcon":{"!description":"Sets a new value for property {@link #getTileIcon tileIcon}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTileIcon: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sTileIcon":"type: string, description: New value for property <code>tileIcon<\/code>"}},"!constructorDescription":"Constructor for a new ui/footerbar/AddBookmarkButton.\r\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBeforePressHandler beforePressHandler} : any<\/li>\n<li>{@link #getAfterPressHandler afterPressHandler} : any<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSubtitle subtitle} : string<\/li>\n<li>{@link #getInfo info} : string<\/li>\n<li>{@link #getTileIcon tileIcon} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getKeywords keywords} : string<\/li>\n<li>{@link #getCustomUrl customUrl} : any<\/li>\n<li>{@link #getServiceUrl serviceUrl} : any<\/li>\n<li>{@link #getServiceRefreshInterval serviceRefreshInterval} : string<\/li>\n<li>{@link #getShowGroupSelection showGroupSelection} : boolean (default: true)<\/li>\n<li>{@link #getAppData appData} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Button#constructor sap.m.Button}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.","!static":false,"!category":"function","!type":"fn() -> String"},"setSubtitle":{"!description":"Sets a new value for property {@link #getSubtitle subtitle}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSubtitle: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sSubtitle":"type: string, description: New value for property <code>subtitle<\/code>"}},"!description":"A button to be displayed in the application footer. Clicking the button opens a dialog box allowing the user to save the app state, so that the app can be launched in this state directly from the launchpad.","getServiceRefreshInterval":{"!description":"Gets current value of property {@link #getServiceRefreshInterval serviceRefreshInterval}.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.footerbar.AddBookmarkButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getInfo":{"!description":"Gets current value of property {@link #getInfo info}.","!static":false,"!category":"function","!type":"fn() -> String"},"getKeywords":{"!description":"Gets current value of property {@link #getKeywords keywords}.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowGroupSelection":{"!description":"Sets a new value for property {@link #getShowGroupSelection showGroupSelection}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGroupSelection: Boolean) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"bShowGroupSelection":"type: boolean, description: New value for property <code>showGroupSelection<\/code>"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"setNumberUnit":{"!description":"Sets a new value for property {@link #getNumberUnit numberUnit}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNumberUnit: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sNumberUnit":"type: string, description: New value for property <code>numberUnit<\/code>"}},"setServiceUrl":{"!description":"Sets a new value for property {@link #getServiceUrl serviceUrl}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oServiceUrl: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"oServiceUrl":"type: any, description: New value for property <code>serviceUrl<\/code>"}},"setKeywords":{"!description":"Sets a new value for property {@link #getKeywords keywords}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKeywords: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sKeywords":"type: string, description: New value for property <code>keywords<\/code>"}},"setServiceRefreshInterval":{"!description":"Sets a new value for property {@link #getServiceRefreshInterval serviceRefreshInterval}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sServiceRefreshInterval: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sServiceRefreshInterval":"type: string, description: New value for property <code>serviceRefreshInterval<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.footerbar.AddBookmarkButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setBeforePressHandler":{"!description":"Sets a new value for property {@link #getBeforePressHandler beforePressHandler}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oBeforePressHandler: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"oBeforePressHandler":"type: any, description: New value for property <code>beforePressHandler<\/code>"}},"getBeforePressHandler":{"!description":"Gets current value of property {@link #getBeforePressHandler beforePressHandler}.","!static":false,"!category":"function","!type":"fn() -> Object"},"getCustomUrl":{"!description":"Gets current value of property {@link #getCustomUrl customUrl}.","!static":false,"!category":"function","!type":"fn() -> Object"},"getTileIcon":{"!description":"Gets current value of property {@link #getTileIcon tileIcon}.","!static":false,"!category":"function","!type":"fn() -> String"},"setCustomUrl":{"!description":"Sets a new value for property {@link #getCustomUrl customUrl}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oCustomUrl: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"oCustomUrl":"type: any, description: New value for property <code>customUrl<\/code>"}},"!module":"sap/ushell/ui/footerbar/AddBookmarkButton","!helpDescription":"A button to be displayed in the application footer. Clicking the button opens a dialog box allowing the user to save the app state, so that the app can be launched in this state directly from the launchpad.","getShowGroupSelection":{"!description":"Gets current value of property {@link #getShowGroupSelection showGroupSelection}.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setInfo":{"!description":"Sets a new value for property {@link #getInfo info}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInfo: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sInfo":"type: string, description: New value for property <code>info<\/code>"}},"getAfterPressHandler":{"!description":"Gets current value of property {@link #getAfterPressHandler afterPressHandler}.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ushell.services.SupportTicket_obj":{"!type":"fn(oAdapter: Object, oContainerInterface: Object, sParameters: String, oServiceConfiguration: Object)","prototype":"sap.ushell.services.SupportTicket"},"sap.ushell.services.Message_obj":{"!type":"fn()","prototype":"sap.ushell.services.Message"},"sap.ushell.services.PersonalizationContainerVariant":{"!description":"The personalization variant contains personalization data. It is used in the personalization container mode.","delItem":{"!description":"Deletes an item from this variant. In case the item does not exist, nothing happens.","!static":false,"!category":"function","!type":"fn(sItemKey: String)","parameters":{"sItemKey":"type: string, description: item key"}},"setItemValue":{"!description":"Sets the value for an item in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String, item: Object)","parameters":{"item":"type: object, description: value (JSON object)","sItemKey":"type: string, description: item key"}},"!proto":"sap.ui.base.Object","containsItem":{"!description":"Checks if a specific item is contained in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Boolean","parameters":{"sItemKey":"type: string, description: item key"}},"!category":"class","getItemValue":{"!description":"Returns the value for an item in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Object","parameters":{"sItemKey":"type: string, description: item key"}},"!constructorDescription":"To be called by the personalization variant set.","!module":"sap/ushell/services/_Personalization/PersonalizationContainerVariant","!helpDescription":"The personalization variant contains personalization data. It is used in the personalization container mode.","getVariantKey":{"!description":"Returns the key of this variant.","!static":false,"!category":"function","!type":"fn() -> String"},"getItemKeys":{"!description":"Returns an array with the keys of all items in this variant.","!static":false,"!category":"function","!type":"fn() -> Array"},"getVariantName":{"!description":"Returns the name of this variant.","!static":false,"!category":"function","!type":"fn() -> String"}}}}