<mvc:View class="test-view" controllerName="vbm-regression.tests.28.controller.App" xmlns:l="sap.ui.layout" xmlns="sap.m" xmlns:vbm="sap.ui.vbm" xmlns:mvc="sap.ui.core.mvc">


	<FlexBox direction="Row" width="100%" height="100%">
		<items>

			<Panel height="100%" class="position-absolute">
				<layoutData>
					<FlexItemData baseSize="40%"></FlexItemData>
				</layoutData>
				<content>
					<l:VerticalLayout width="100%">
						<Label text="The aim: " design="Bold"></Label>
						<Text text="To test different kinds of hotstate behaviors for some visual objects."></Text>
						<Label class="voffset-25" text="To test:" design="Bold"></Label>
						<Text class="red-text" text="Important: the hot scale/shifts are not available in all objects."></Text>
						<Text class="voffset-5" text="1. Check that the hot scale value is increasing from top to bottom (except for geocircles). The bottom row will be warmer therefore on hover it will have colors such as red. The top and second row are cooler so they will have pale/ cooler colors such as purple. You can think of hot states as ON = red OFF = Blue. Hot scale is a distinction between cool and warm. Warm colors are often said to be hues from red through yellow. Cool colors are often said to be hues from blue green."></Text>
						<Text class="voffset-5" text="2. The hot color in the first row does a transparency shift. Hover over the objects in the first row and the objects should turn transparent"></Text>
						<Text class="voffset-5" text="3. The hot color in the second row does a 90 degree color hue shift."></Text>
						<Button text="Color Wheel extra info" press="onPressColorWheelInfo"></Button>
						<Text class="voffset-5" text="4. The hot color in the third row is set to red. Hover over the objects in the third row and the objects should turn red."></Text>
					</l:VerticalLayout>
				</content>
			</Panel>

			<vbm:VBI id="vbi" height="100%" width="100%" submit="onSubmit" class="position-absolute">
				<vbm:layoutData>
					<FlexItemData baseSize="60%"></FlexItemData>
				</vbm:layoutData>
			</vbm:VBI>

		</items>
	</FlexBox>


</mvc:View>
