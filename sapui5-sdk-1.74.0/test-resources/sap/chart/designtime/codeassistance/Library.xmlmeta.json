{"enums":{"sap.chart.data.DimensionRoleType":{"category2":{"Deprecated":false,"Experimental":false,"description":"If a chart type does not use the feed uid \"categoryAxis2\", then all dimensions with role \"category2\" are treated as dimension with role \"category\" (appended).","helpDescription":"If a chart type does not use the feed uid \"categoryAxis2\", then all dimensions with role \"category2\" are treated as dimension with role \"category\" (appended).","DeprecatedInfo":{"isDeprecated":false},"value":"category2"},"series":{"Deprecated":false,"Experimental":false,"description":"All dimensions with role \"series\" are assigned to the feed uid \"color\".","helpDescription":"All dimensions with role \"series\" are assigned to the feed uid \"color\".","DeprecatedInfo":{"isDeprecated":false},"value":"series"},"category":{"Deprecated":false,"Experimental":false,"description":"All dimensions with role \"category\" are assigned to the feed uid \"categoryAxis\".\n\n<b>NOTE:<\/b> If the chart type requires at least one dimension on the feed \"categoryAxis\" (true for all chart types except pie and donut), but no dimension has the role \"category\" or \"category2\", then the first visible dimension is assigned to the \"categoryAxis\".","helpDescription":"All dimensions with role \"category\" are assigned to the feed uid \"categoryAxis\".\n\n<b>NOTE:<\/b> If the chart type requires at least one dimension on the feed \"categoryAxis\" (true for all chart types except pie and donut), but no dimension has the role \"category\" or \"category2\", then the first visible dimension is assigned to the \"categoryAxis\".","DeprecatedInfo":{"isDeprecated":false},"value":"category"}},"sap.chart.AutoScaleMode":{"DataSet":{"Deprecated":false,"Experimental":false,"description":"Minimum and maximum value is calculated from the entire data set in the backend, no matter data can be loaded or not, visible or not.","helpDescription":"Minimum and maximum value is calculated from the entire data set in the backend, no matter data can be loaded or not, visible or not.","DeprecatedInfo":{"isDeprecated":false},"value":"DataSet"},"VisibleData":{"Deprecated":false,"Experimental":false,"description":"Minimum and maximum value is calculated from the data that are currently visible. Scrolling will change the scale.","helpDescription":"Minimum and maximum value is calculated from the data that are currently visible. Scrolling will change the scale.","DeprecatedInfo":{"isDeprecated":false},"value":"VisibleData"}},"sap.chart.ColoringType":{"Emphasis":{"Deprecated":false,"Experimental":false,"description":"Emphasis is about highlighting certain data points in a chart.\n\nIt can be defined for dimension values. <pre>\nEmphasis: {\n    DimensionValues: {\n        ...\n    }\n}\n<\/pre> <b>For dimension values<\/b>\n\nHighlight a specified set of values of a dimension visible in the current chart layout. The qualitative color palette is used.\n\n<code>'Values'<\/code> is used to specify dimension value(s) for highlight. <code>'Legend'<\/code> is used to customize legend label whose <code>'Hightlighted'<\/code> is mandatory when multiple dimension values defined in <code>'Values'<\/code>. <pre>\nDimensionValues: {\n    'dimensionName': {\n        Values: 'dimensionValue' or ['dimensionValue', ...],\n        Legend: {\n           Highlighted: string // mandatory for value array\n           Others: string      // optional\n        }\n    },\n    'dimensionName': {\n        ...\n    }\n}\n<\/pre> Example:\n\nIn this case, 'Germany' and 'France' are highlighted in 'Country' dimension with customized legend label 'Europe'. <pre>\nvar oColorings = {\n    Emphasis: {\n        DimensionValues: {\n            Country: {\n                Values: ['Germany', 'France']\n                Legend: 'Europe'\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Emphasis,\n    parameters: {\n        dimension: ['Country']\n    }\n};\n<\/pre>","helpDescription":"Emphasis is about highlighting certain data points in a chart.\n\nIt can be defined for dimension values. <pre>\nEmphasis: {\n    DimensionValues: {\n        ...\n    }\n}\n<\/pre> <b>For dimension values<\/b>\n\nHighlight a specified set of values of a dimension visible in the current chart layout. The qualitative color palette is used.\n\n<code>'Values'<\/code> is used to specify dimension value(s) for highlight. <code>'Legend'<\/code> is used to customize legend label whose <code>'Hightlighted'<\/code> is mandatory when multiple dimension values defined in <code>'Values'<\/code>. <pre>\nDimensionValues: {\n    'dimensionName': {\n        Values: 'dimensionValue' or ['dimensionValue', ...],\n        Legend: {\n           Highlighted: string // mandatory for value array\n           Others: string      // optional\n        }\n    },\n    'dimensionName': {\n        ...\n    }\n}\n<\/pre> Example:\n\nIn this case, 'Germany' and 'France' are highlighted in 'Country' dimension with customized legend label 'Europe'. <pre>\nvar oColorings = {\n    Emphasis: {\n        DimensionValues: {\n            Country: {\n                Values: ['Germany', 'France']\n                Legend: 'Europe'\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Emphasis,\n    parameters: {\n        dimension: ['Country']\n    }\n};\n<\/pre>","DeprecatedInfo":{"isDeprecated":false},"value":"Emphasis"},"Gradation":{"Deprecated":false,"Experimental":false,"description":"Gradation introduces the notion of levels to visually separate chart elements by different hues of colors.\n\nGradation coloring is based on predefined color palettes implementing one of the following color schemes:\n\n1. Single-color scheme:\n\nPalette consists of a linear sequence of hues of the same color in increasing or decreasing saturation. Every hue represents a level.\n\n2. Diverging color scheme:\n\nPalette consists of two hues of different colors at the outer ends, and a linear sequence of other color hues between them. Every color hue represents a level. The palette has a central mid area with an own color separating the levels before and after the midpoint.\n\n3. Target color scheme:\n\nPalette consists of two instances of a diverging color scheme palette, where the second is appended at the end of the first with reverse order of hues. Every color hue represents a level. The palette has a central midpoint for the target value positioned between the two palette instances, separating the levels before and after the midpoint.\n\nWhether a gradation can be applied depends on the chart layout. The <code>Colorings.Gradation<\/code> object has the overall structure: <pre>\nGradation: {\n    RankedMeasureValues: { // Only for heatmap charts, if the measure is visible in the chart layout.\n        \u2026\n    },\n    DelineatedMeasures: { // More than one of these measures is visible in the chart layout.\n        \u2026\n    },\n    DelineatedDimensionValues: { // If the dimension is the only visible dimension in the chart layout and has the category role, or if the dimension is the only dimension with the series role.\n        \u2026\n    }\n}\n<\/pre>\n\nThe option for ranked measure values can be specified for one or more measures identified by name: <pre>\nRankedMeasureValues: {\n    'measureName': {\n        SingleColorScheme: {\n            Scheme: string, // enumeration: NoSemantics, Positive, Negative\n            Saturation: string, // enumeration: LightToDark, DarkToLight\n            NumberOfLevels: number, // between 2-6\n            RankingPerAggregationLevel: [\n                {\n                    VisibleDimensions: [ 'dimensionName', \u2026 ],\n                    LevelBoundaries: [ number, \u2026 ] // array with 1-5 numbers\n                },\n                \u2026\n            ]\n        },\n        DivergingColorScheme: {\n            Scheme: string, // enumeration: NoSemantics, PositiveToNegative, NegativeToPositive, ColdToHot, HotToCold\n            NumberOfLevels: {\n                BelowMidArea: number, // between 2-6\n                AboveMidArea: number  // between 2-6\n            },\n            RankingPerAggregationLevel: [\n                {\n                    VisibleDimensions: [ 'dimensionName', \u2026 ],\n                    MidAreaLowValue: number,\n                    MidAreaHighValue: number\n                },\n                \u2026\n            ]\n        },\n        TargetColorScheme: {\n            Scheme: string, // enumeration: PositiveTarget\n            NumberOfLevels: {\n                BelowTargetMidpoint: number, // between 2-6\n                AboveTargetMidpoint: number  // between 2-6\n            },\n            RankingPerAggregationLevel: [\n                {\n                    VisibleDimensions: [ 'dimensionName', \u2026 ],\n                    TargetMidpoint: number\n                },\n                \u2026\n            ]\n        },\n    },\n    'measureName': { \u2026 },\n    ...\n}\n<\/pre>\n\nFor a single color scheme, Scheme names the scheme to be applied. If it is not specified, the default is NoSemantics. The possible values of scheme name are listed in {@link sap.chart.coloring.GradationSingleColorScheme}. If Saturation is not specified, the default is LightToDark. The possible values of saturation are listed in {@link sap.chart.coloring.GradationSaturation}\n\nFor an aggregation level specified by a list of visible dimensions, the level boundary array is a strictly increasing sequence of numbers establishing a series of consecutive value intervals. In case VisibleDimensions is omitted, the level boundaries are applied independent of the aggregation level in the current chart layout.\n\nIf RankingPerAggregationLevel is not provided, the chart will apply a default ranking by determining the minimum and maximum value of the measure in the data set and cutting this value range into equally sized intervals for the requested NumberOfLevels. If NumberOfLevels to be distinguished is not specified, the default is 5 levels.\n\nExample: In this case, the values of 'Age' are ranked as 4 levels following the color scheme 'Positive' from dark to light. <pre>\nvar oColorings = {\n    Gradation: {\n        RankedMeasureValues: {\n            Age: {\n                 SingleColorScheme : {\n                     Scheme: 'Positive',\n                     Saturation: 'DarkToLight',\n                     RankingPerAggregationLevel: [\n                         {\n                             VisibleDimensions: [\"Name\"],\n                             LevelBoundaries: [20, 25, 28]\n                         }\n                     ]\n                 }\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>\n\nFor a diverging color scheme, Scheme names the scheme to be applied. If it is not specified, the default is NoSemantics. The possible values of scheme name are listed in {@link sap.chart.coloring.GradationDivergingColorScheme}.\n\nA diverging color scheme circles around a mid area represented by a level on its own. Therefore, two level counts are to be specified, one for the range of values below the mid area, and another for the range above the mid area.\n\nFor an aggregation level specified by a list of visible dimensions, the boundary values for the mid area must be specified in MidAreaLowValue and MidAreaHighValue. If both values are equal, the mid area collapses into a single point and the mid area level vanishes.\n\nThe chart determines the minimum and maximum values from the data set. To cut the value range before the mid area into the specified number of levels NumberOfLevels.BelowMidArea, the value interval from the MidAreaLowValue down to the minimum value is divided into as many equally sized intervals. In the same way, the value interval above the mid area is cut into the specified number of levels NumberOfLevels.AboveMidArea above the mid area using the determined maximum value.\n\nIn case VisibleDimensions is omitted, this ranking becomes the default and is applied independent of the aggregation level in the current chart layout. Further entries in RankingPerAggregationLevel must then include VisibleDimensions and are used to describe exceptions from the default ranking for the specified aggregation level.\n\nExample: In this case, the values of 'Age' are ranked as 7 levels with a mid area [22, 27] following the color scheme 'PositiveToNegative'. <pre>\nvar oColorings = {\n    Gradation: {\n        RankedMeasureValues: {\n            Age: {\n                 DivergingColorScheme : {\n                     Scheme: 'PositiveToNegative',\n                     NumberOfLevels: {\n                         BelowMidArea: 3,\n                         AboveMidArea: 3\n                     },\n                     RankingPerAggregationLevel: [\n                         {\n                             VisibleDimensions: [\"Name\"],\n                             MidAreaLowValue: 22,\n                             MidAreaHighValue: 27\n                         }\n                     ]\n                 }\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>\n\nFor a target color scheme, Scheme names the scheme to be applied. If it is not specified, the default is PositiveTarget. The possible values of scheme name are listed in {@link sap.chart.coloring.GradationTargetColorScheme}.\n\nFor an aggregation level specified by a list of visible dimensions, the measure value to be used as target midpoint must be specified in TargetMidpoint.\n\nThe chart determines the minimum and maximum values from the data set. To cut the value range before the target midpoint into the specified number of levels NumberOfLevels.BelowTargetMidPoint, the value interval from the TargetMidpoint down to the minimum value is divided into as many equally sized intervals. In the same way, the value interval above the midpoint is cut into the specified number of levels NumberOfLevels.AboveTargetMidPoint above the midpoint using the determined maximum value.\n\nIn case VisibleDimensions is omitted, the midpoint is applied independent of the aggregation level in the current chart layout. Further entries in RankingPerAggregationLevel must then include VisibleDimensions and are used to describe exceptions from the general midpoint for the specified aggregation level.\n\nExample: In this case, the values of 'Age' are ranked as 12 levels with a target mid point following the color scheme 'PositiveTarget'. <pre>\nvar oColorings = {\n    Gradation: {\n        RankedMeasureValues: {\n            Age: {\n                 TargetColorScheme : {\n                     Scheme: 'PositiveTarget',\n                     NumberOfLevels: {\n                         BelowTargetMidpoint: 6,\n                         AboveTargetMidpoint: 6\n                     },\n                     RankingPerAggregationLevel: [\n                         {\n                             VisibleDimensions: [\"Name\"],\n                             TargetMidpoint: 25\n                         }\n                     ]\n                 }\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>\n\nIf no gradation has been specified for a measure (meaning: neither a single nor a diverging color nor a target scheme), then the ranked measure values option still can be applied via activeColoring. In this case, the default is a single-color scheme with defaults applied to all its component as described above.\n\nThe option for delineated measures maps (between two and six) measures identified by name to gradation levels, with increasing index numbers. It shall be applied only if the measures visible in the chart are a subset of those specified here: <pre>\nDelineatedMeasures: {\n    SingleColorScheme: string, // enumeration of schemes-see above\n    Saturation: string, // enumeration: LightToDark, DarkToLight\n    Levels: [ 'measureName', \u2026 ] // between 2-6 members\n}\n<\/pre>\n\nIf the color scheme is not specified, the default is NoSemantic. If Saturation is not specified, the default is LightToDark.\n\nIf delineated measure gradation is to be shown, and if the chart layout contains further visible measures not mentioned in the delineated measure configuration, then gradation coloring must not be applied.\n\nExample: In this case, the value of 'Win', 'Draw' and 'Lose' are shown in 3 color levels. <pre>\nvar oColorings = {\n    Gradation: {\n        DelineatedMeasures: {\n            SingleColorScheme: 'PositiveTarget',\n            Saturation: 'DarkToLight',\n            Levels: ['Win', 'Draw', 'Lose']\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>\n\nThe option for delineated dimension values can map (between two and six) dimension values to gradation levels, with increasing index numbers. It shall be applied only if the data set to be visualized contains no dimension values other than those specified. <pre>\nDelineatedDimensionValues: {\n    SingleColorScheme: string, // enumeration of schemes-see above\n    Saturation: string, // enumeration: LightToDark, DarkToLight\n    'dimensionName': {\n        Levels: [ 'dimensionValue', \u2026 ] // between 2-6 members\n    },\n    'dimensionName': {...},\n    ...\n}\n<\/pre>\n\nIf color scheme is not specified, the default is NoSemantic. If Saturation is not specified, the default is LightToDark.\n\nIf delineated dimension value gradation is to be shown, and the \u201cdata\u201d model contains dimension values not mentioned in the configuration, then gradation coloring must not be applied.\n\nExample: In this case, the measures mapping to the dimension value 'Injured', 'Normal', 'Superb' and 'Tired' are shown in 4 color levels. <pre>\nvar oColorings = {\n    Gradation: {\n        DelineatedDimensionValues: {\n            SingleColorScheme: 'PositiveTarget',\n            Saturation: 'DarkToLight',\n            Fitness: {\n                Levels: ['Injured', 'Normal', 'Superb', 'Tired']\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>","helpDescription":"Gradation introduces the notion of levels to visually separate chart elements by different hues of colors.\n\nGradation coloring is based on predefined color palettes implementing one of the following color schemes:\n\n1. Single-color scheme:\n\nPalette consists of a linear sequence of hues of the same color in increasing or decreasing saturation. Every hue represents a level.\n\n2. Diverging color scheme:\n\nPalette consists of two hues of different colors at the outer ends, and a linear sequence of other color hues between them. Every color hue represents a level. The palette has a central mid area with an own color separating the levels before and after the midpoint.\n\n3. Target color scheme:\n\nPalette consists of two instances of a diverging color scheme palette, where the second is appended at the end of the first with reverse order of hues. Every color hue represents a level. The palette has a central midpoint for the target value positioned between the two palette instances, separating the levels before and after the midpoint.\n\nWhether a gradation can be applied depends on the chart layout. The <code>Colorings.Gradation<\/code> object has the overall structure: <pre>\nGradation: {\n    RankedMeasureValues: { // Only for heatmap charts, if the measure is visible in the chart layout.\n        \u2026\n    },\n    DelineatedMeasures: { // More than one of these measures is visible in the chart layout.\n        \u2026\n    },\n    DelineatedDimensionValues: { // If the dimension is the only visible dimension in the chart layout and has the category role, or if the dimension is the only dimension with the series role.\n        \u2026\n    }\n}\n<\/pre>\n\nThe option for ranked measure values can be specified for one or more measures identified by name: <pre>\nRankedMeasureValues: {\n    'measureName': {\n        SingleColorScheme: {\n            Scheme: string, // enumeration: NoSemantics, Positive, Negative\n            Saturation: string, // enumeration: LightToDark, DarkToLight\n            NumberOfLevels: number, // between 2-6\n            RankingPerAggregationLevel: [\n                {\n                    VisibleDimensions: [ 'dimensionName', \u2026 ],\n                    LevelBoundaries: [ number, \u2026 ] // array with 1-5 numbers\n                },\n                \u2026\n            ]\n        },\n        DivergingColorScheme: {\n            Scheme: string, // enumeration: NoSemantics, PositiveToNegative, NegativeToPositive, ColdToHot, HotToCold\n            NumberOfLevels: {\n                BelowMidArea: number, // between 2-6\n                AboveMidArea: number  // between 2-6\n            },\n            RankingPerAggregationLevel: [\n                {\n                    VisibleDimensions: [ 'dimensionName', \u2026 ],\n                    MidAreaLowValue: number,\n                    MidAreaHighValue: number\n                },\n                \u2026\n            ]\n        },\n        TargetColorScheme: {\n            Scheme: string, // enumeration: PositiveTarget\n            NumberOfLevels: {\n                BelowTargetMidpoint: number, // between 2-6\n                AboveTargetMidpoint: number  // between 2-6\n            },\n            RankingPerAggregationLevel: [\n                {\n                    VisibleDimensions: [ 'dimensionName', \u2026 ],\n                    TargetMidpoint: number\n                },\n                \u2026\n            ]\n        },\n    },\n    'measureName': { \u2026 },\n    ...\n}\n<\/pre>\n\nFor a single color scheme, Scheme names the scheme to be applied. If it is not specified, the default is NoSemantics. The possible values of scheme name are listed in {@link sap.chart.coloring.GradationSingleColorScheme}. If Saturation is not specified, the default is LightToDark. The possible values of saturation are listed in {@link sap.chart.coloring.GradationSaturation}\n\nFor an aggregation level specified by a list of visible dimensions, the level boundary array is a strictly increasing sequence of numbers establishing a series of consecutive value intervals. In case VisibleDimensions is omitted, the level boundaries are applied independent of the aggregation level in the current chart layout.\n\nIf RankingPerAggregationLevel is not provided, the chart will apply a default ranking by determining the minimum and maximum value of the measure in the data set and cutting this value range into equally sized intervals for the requested NumberOfLevels. If NumberOfLevels to be distinguished is not specified, the default is 5 levels.\n\nExample: In this case, the values of 'Age' are ranked as 4 levels following the color scheme 'Positive' from dark to light. <pre>\nvar oColorings = {\n    Gradation: {\n        RankedMeasureValues: {\n            Age: {\n                 SingleColorScheme : {\n                     Scheme: 'Positive',\n                     Saturation: 'DarkToLight',\n                     RankingPerAggregationLevel: [\n                         {\n                             VisibleDimensions: [\"Name\"],\n                             LevelBoundaries: [20, 25, 28]\n                         }\n                     ]\n                 }\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>\n\nFor a diverging color scheme, Scheme names the scheme to be applied. If it is not specified, the default is NoSemantics. The possible values of scheme name are listed in {@link sap.chart.coloring.GradationDivergingColorScheme}.\n\nA diverging color scheme circles around a mid area represented by a level on its own. Therefore, two level counts are to be specified, one for the range of values below the mid area, and another for the range above the mid area.\n\nFor an aggregation level specified by a list of visible dimensions, the boundary values for the mid area must be specified in MidAreaLowValue and MidAreaHighValue. If both values are equal, the mid area collapses into a single point and the mid area level vanishes.\n\nThe chart determines the minimum and maximum values from the data set. To cut the value range before the mid area into the specified number of levels NumberOfLevels.BelowMidArea, the value interval from the MidAreaLowValue down to the minimum value is divided into as many equally sized intervals. In the same way, the value interval above the mid area is cut into the specified number of levels NumberOfLevels.AboveMidArea above the mid area using the determined maximum value.\n\nIn case VisibleDimensions is omitted, this ranking becomes the default and is applied independent of the aggregation level in the current chart layout. Further entries in RankingPerAggregationLevel must then include VisibleDimensions and are used to describe exceptions from the default ranking for the specified aggregation level.\n\nExample: In this case, the values of 'Age' are ranked as 7 levels with a mid area [22, 27] following the color scheme 'PositiveToNegative'. <pre>\nvar oColorings = {\n    Gradation: {\n        RankedMeasureValues: {\n            Age: {\n                 DivergingColorScheme : {\n                     Scheme: 'PositiveToNegative',\n                     NumberOfLevels: {\n                         BelowMidArea: 3,\n                         AboveMidArea: 3\n                     },\n                     RankingPerAggregationLevel: [\n                         {\n                             VisibleDimensions: [\"Name\"],\n                             MidAreaLowValue: 22,\n                             MidAreaHighValue: 27\n                         }\n                     ]\n                 }\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>\n\nFor a target color scheme, Scheme names the scheme to be applied. If it is not specified, the default is PositiveTarget. The possible values of scheme name are listed in {@link sap.chart.coloring.GradationTargetColorScheme}.\n\nFor an aggregation level specified by a list of visible dimensions, the measure value to be used as target midpoint must be specified in TargetMidpoint.\n\nThe chart determines the minimum and maximum values from the data set. To cut the value range before the target midpoint into the specified number of levels NumberOfLevels.BelowTargetMidPoint, the value interval from the TargetMidpoint down to the minimum value is divided into as many equally sized intervals. In the same way, the value interval above the midpoint is cut into the specified number of levels NumberOfLevels.AboveTargetMidPoint above the midpoint using the determined maximum value.\n\nIn case VisibleDimensions is omitted, the midpoint is applied independent of the aggregation level in the current chart layout. Further entries in RankingPerAggregationLevel must then include VisibleDimensions and are used to describe exceptions from the general midpoint for the specified aggregation level.\n\nExample: In this case, the values of 'Age' are ranked as 12 levels with a target mid point following the color scheme 'PositiveTarget'. <pre>\nvar oColorings = {\n    Gradation: {\n        RankedMeasureValues: {\n            Age: {\n                 TargetColorScheme : {\n                     Scheme: 'PositiveTarget',\n                     NumberOfLevels: {\n                         BelowTargetMidpoint: 6,\n                         AboveTargetMidpoint: 6\n                     },\n                     RankingPerAggregationLevel: [\n                         {\n                             VisibleDimensions: [\"Name\"],\n                             TargetMidpoint: 25\n                         }\n                     ]\n                 }\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>\n\nIf no gradation has been specified for a measure (meaning: neither a single nor a diverging color nor a target scheme), then the ranked measure values option still can be applied via activeColoring. In this case, the default is a single-color scheme with defaults applied to all its component as described above.\n\nThe option for delineated measures maps (between two and six) measures identified by name to gradation levels, with increasing index numbers. It shall be applied only if the measures visible in the chart are a subset of those specified here: <pre>\nDelineatedMeasures: {\n    SingleColorScheme: string, // enumeration of schemes-see above\n    Saturation: string, // enumeration: LightToDark, DarkToLight\n    Levels: [ 'measureName', \u2026 ] // between 2-6 members\n}\n<\/pre>\n\nIf the color scheme is not specified, the default is NoSemantic. If Saturation is not specified, the default is LightToDark.\n\nIf delineated measure gradation is to be shown, and if the chart layout contains further visible measures not mentioned in the delineated measure configuration, then gradation coloring must not be applied.\n\nExample: In this case, the value of 'Win', 'Draw' and 'Lose' are shown in 3 color levels. <pre>\nvar oColorings = {\n    Gradation: {\n        DelineatedMeasures: {\n            SingleColorScheme: 'PositiveTarget',\n            Saturation: 'DarkToLight',\n            Levels: ['Win', 'Draw', 'Lose']\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>\n\nThe option for delineated dimension values can map (between two and six) dimension values to gradation levels, with increasing index numbers. It shall be applied only if the data set to be visualized contains no dimension values other than those specified. <pre>\nDelineatedDimensionValues: {\n    SingleColorScheme: string, // enumeration of schemes-see above\n    Saturation: string, // enumeration: LightToDark, DarkToLight\n    'dimensionName': {\n        Levels: [ 'dimensionValue', \u2026 ] // between 2-6 members\n    },\n    'dimensionName': {...},\n    ...\n}\n<\/pre>\n\nIf color scheme is not specified, the default is NoSemantic. If Saturation is not specified, the default is LightToDark.\n\nIf delineated dimension value gradation is to be shown, and the \u201cdata\u201d model contains dimension values not mentioned in the configuration, then gradation coloring must not be applied.\n\nExample: In this case, the measures mapping to the dimension value 'Injured', 'Normal', 'Superb' and 'Tired' are shown in 4 color levels. <pre>\nvar oColorings = {\n    Gradation: {\n        DelineatedDimensionValues: {\n            SingleColorScheme: 'PositiveTarget',\n            Saturation: 'DarkToLight',\n            Fitness: {\n                Levels: ['Injured', 'Normal', 'Superb', 'Tired']\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>","DeprecatedInfo":{"isDeprecated":false},"value":"Gradation"},"Criticality":{"Deprecated":false,"Experimental":false,"description":"Criticality is based on the semantic color palette.\n\nIt can be defined for measure values and dimension values. <pre>\nCriticality: {\n    MeasureValues: {\n        ...\n    },\n    DimensionValues: {\n        ...\n    }\n}\n<\/pre>\n\n<b>For measure values<\/b>, criticality can be based on <code>static<\/code>, <code>calculated<\/code>, <code>DynamicThresholds<\/code> and <code>ConstantThresholds<\/code>\n\n<code>Legend<\/code> is <b>optional<\/b> and can be used for custom legend labels. <pre>\nMeasureValues: {\n    'measureName': {\n        Static: ... ,\n        Calculated: ... ,\n        DynamicThresholds: {\n            ...\n        },\n        ConstantThresholds: {\n            ...\n        },\n        Legend: {\n            Title: string,    // (optional) fixed, localized label\n            Positive: string, // fixed, localized label\n            Critical: string, // fixed, localized label\n            Negative: string, // fixed, localized label\n            Neutral:  string  // fixed, localized label\n        }\n    },\n    'measureName': {\n        ...\n    }\n}\n<\/pre> <ul> <li><code>static<\/code>\n\nIt indicates that the measure is always considered in the same way, for example positive.\n\nThe value of <code>static<\/code> is listed in {@link sap.chart.coloring.CriticalityType}\n\nExample:\n\nIn this case, all 'Profit' datapoints shall use Positive semantic color and all 'Revenue' datapoints shall use Negative semantic color. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                  Static: sap.chart.ColoringType.Positive\n              },\n              Revenue: {\n                  Static: sap.chart.ColoringType.Negative\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit', 'Revenue']\n      }\n  };\n  <\/pre> <\/li> <li><code>Calculated<\/code>\n\nCriticality is calculated by the backend service.\n\nFor a <code>Calculated<\/code> criticality, the value will be determined from a property contained in the model of the \u201cdata\u201d aggregation. Since the calculation must always take the currently visible dimensions into account, this property will be a measure holding an aggregated criticality for the current aggregation level. The concrete possible values held by this property are defined in {@link sap.chart.coloring.CriticalityType}: Neutral = 0, Negative = 1, Critical = 2, Positive =3.\n\nIf Legend is present, the legend shows the title and the fixed, localized texts defined for the different criticality classes. Otherwise, the chart uses the default texts \u201cGood\u201d, \u201cWarning\u201d, \u201cBad\u201d, and \u201cNeutral\u201d as localized labels in the legend.\n\nIf the value of <code>Calculated<\/code> is a dimension name. The criticality of the measure of a datapoint is determined by the value of this dimension and its textProperty(if exists) will be used as legend label.\n\nThe possible values of this certain dimension are listed in {@link sap.chart.coloring.CriticalityType}.\n\nExample:\n\nIn this case, the criticality of 'Profit' measure is determined by the value of 'ProfitCriticality' dimension which is calculated by backend service. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                  Calculated: 'ProfitCriticality'\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit']\n      }\n  };\n  <\/pre>\n\nIn this case, the criticality of 'Profit' measure is determined by the value of 'ProfitCriticalityM' measure which is calculated by backend service. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                  Calculated: 'ProfitCriticalityM',\n                  Legend: {\n                      Title: \"Legend Title\",\n                      Positive: \"Good\",\n                      Negative: \"Weak\",\n                      Critical: \"Soso\",\n                      Neutral: \"Crossbench\"\n                  }\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit']\n      }\n  };\n  <\/pre> <\/li> <li><code>DynamicThresholds<\/code>\n\nCriticality is expressed with thresholds for the boundaries between negative, critical, neutral, and positive.\n\nThe direction of improvement for measure values is mandatory, combined with corresponding thresholds.\n\nThresholds are optional. For unassigned values, defaults are determined in this order:\n\n- For DeviationRange, an omitted LowValue translates into the smallest possible number (-INF), an omitted HighValue translates into the largest possible number (+INF)\n\n- For ToleranceRange, an omitted LowValue will be initialized with DeviationRangeLowValue, an omitted HighValue will be initialized with DeviationRangeHighValue\n\n- For AcceptanceRange, an omitted LowValue will be initialized with ToleranceRangeLowValue, an omitted HighValue will be initialized with ToleranceRangeHighValue\n\nPlease refer to {@link sap.chart.coloring.ImprovementDirectionType} for detailed usage. <pre>\n  DynamicThresholds: {\n      ImprovementDirection: string,    // refer to sap.chart.coloring.ImprovementDirectionType for detailed definition\n      AcceptanceRangeLowValue: string or number, // property name or number\n      AcceptanceRangeHighValue: string or number, // property name or number\n      ToleranceRangeLowValue: string or number, // property name or number\n      ToleranceRangeHighValue: string or number, // property name or number\n      DeviationRangeLowValue: string or number, // property name or number\n      DeviationRangeHighValue: string or number, // property name or number\n  }\n  <\/pre> Example:\n\nIn this case, the criticality of 'Profit' measure is determined by the value of 'ProfitAcceptanceRangeLowValue', 'ProfitToleranceRangeLowValue' and 'ProfitDeviationRangeLowValue' measure calculated with improvement direction <code>'Maximize'<\/code>. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                   DynamicThresholds : {\n                       ImprovementDirection: sap.chart.coloring.ImprovementDirectionType.Maximize,\n                       AcceptanceRangeLowValue: 'ProfitAcceptanceRangeLowValue',\n                       ToleranceRangeLowValue: 'ProfitToleranceRangeLowValue',\n                       DeviationRangeLowValue: 'ProfitDeviationRangeLowValue'\n                   }\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit']\n      }\n  };\n  <\/pre> <\/li> <li><code>ConstantThresholds<\/code>\n\nCriticality is expressed with thresholds for the boundaries between negative, critical, neutral, and positive.\n\nThe direction of improvement for measure values is mandatory, combined with corresponding thresholds.\n\nThresholds are optional. For unassigned values, defaults are determined in this order:\n\n- For DeviationRange, an omitted LowValue translates into the smallest possible number (-INF), an omitted HighValue translates into the largest possible number (+INF)\n\n- For ToleranceRange, an omitted LowValue will be initialized with DeviationRangeLowValue, an omitted HighValue will be initialized with DeviationRangeHighValue\n\n- For AcceptanceRange, an omitted LowValue will be initialized with ToleranceRangeLowValue, an omitted HighValue will be initialized with ToleranceRangeHighValue\n\nAlso Aggregation level (the visible dimensions) must be specified for providing the context for assessing the criticality.\n\nLegend label is shown as value range and do not support customization in ConstantThresholds.\n\nPlease refer to {@link sap.chart.coloring.ImprovementDirectionType} for detailed usage. <pre>\n  ConstantThresholds: {\n      ImprovementDirection: string, refer to sap.chart.coloring.ImprovementDirectionType for detailed definition\n      AggregationLevels: [{\n           VisibleDimensions: ['dimensionName', ...],\n           AcceptanceRangeLowValue: Number,\n           AcceptanceRangeHighValue:Number,\n           ToleranceRangeLowValue: Number,\n           ToleranceRangeHighValue: Number,\n           DeviationRangeLowValue: Number,\n           DeviationRangeHighValue: Number\n      },\n      ...]\n  }\n  <\/pre> Example:\n\nIn this case, the criticality of 'Profit' measure is determined by two concrete thresholds calculated with improvement direction <code>'Maximize'<\/code>. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                   ConstantThresholds : {\n                       ImprovementDirection: sap.chart.coloring.ImprovementDirectionType.Maximize,\n                       AcceptanceRangeLowValue:100,\n                       ToleranceRangeLowValue: 80,\n                       DeviationRangeLowValue: 60\n                   }\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit']\n      }\n  };\n  <\/pre> <\/li> <\/ul>\n\n<b>For dimension values<\/b>\n\nCriticality can be expressed by assigning values to negative, critical, and positive. Unassigned dimension values are automatically assigned to neutral.\n\n<code>'Values'<\/code> is used to specify concrete dimension value(s). <code>'Legend'<\/code> is used to customize legend label which is mandatory when multiple dimension values defined in <code>'Values'<\/code>.\n\n<pre>\nDimensionValues: {\n    'dimensionName': {\n         Positive: {\n             Values: 'dimensionValue' or ['dimensionValue', ...]\n             Legend: string // mandatory for value array\n         },\n         Critical: {\n             Values: 'dimensionValue' or ['dimensionValue', ...]\n             Legend: string // mandatory for value array\n         },\n         Negative: {\n             Values: 'dimensionValue' or ['dimensionValue', ...]\n             Legend: string // mandatory for value array\n         },\n         Neutral: {\n             Values: 'dimensionValue' or ['dimensionValue', ...]\n             Legend: string // mandatory for value array\n         }\n    },\n    'dimensionName': {\n        ...\n    }\n}\n<\/pre> Example:\n\nIn this case, the criticality of 'OrderStatus' dimension is determined by values specified to different criticality classes. <pre>\nvar oColorings = {\n    Criticality: {\n        DimensionValues: {\n            OrderStatus: {\n                 Positive : {\n                     Values: 'Finished'\n                 },\n                 Critical : {\n                     Values: 'Pending'\n                 },\n                 Negative : {\n                     Values: ['Stopped', 'Not Started'],\n                     Legend: 'Alert'\n                 },\n                 Neutral : {\n                     Values: ['Processing', 'Surveyed'],\n                     Legend: 'Normal'\n                 }\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Criticality,\n    parameters: {\n        dimension: ['OrderStatus']\n    }\n};\n<\/pre>","helpDescription":"Criticality is based on the semantic color palette.\n\nIt can be defined for measure values and dimension values. <pre>\nCriticality: {\n    MeasureValues: {\n        ...\n    },\n    DimensionValues: {\n        ...\n    }\n}\n<\/pre>\n\n<b>For measure values<\/b>, criticality can be based on <code>static<\/code>, <code>calculated<\/code>, <code>DynamicThresholds<\/code> and <code>ConstantThresholds<\/code>\n\n<code>Legend<\/code> is <b>optional<\/b> and can be used for custom legend labels. <pre>\nMeasureValues: {\n    'measureName': {\n        Static: ... ,\n        Calculated: ... ,\n        DynamicThresholds: {\n            ...\n        },\n        ConstantThresholds: {\n            ...\n        },\n        Legend: {\n            Title: string,    // (optional) fixed, localized label\n            Positive: string, // fixed, localized label\n            Critical: string, // fixed, localized label\n            Negative: string, // fixed, localized label\n            Neutral:  string  // fixed, localized label\n        }\n    },\n    'measureName': {\n        ...\n    }\n}\n<\/pre> <ul> <li><code>static<\/code>\n\nIt indicates that the measure is always considered in the same way, for example positive.\n\nThe value of <code>static<\/code> is listed in {@link sap.chart.coloring.CriticalityType}\n\nExample:\n\nIn this case, all 'Profit' datapoints shall use Positive semantic color and all 'Revenue' datapoints shall use Negative semantic color. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                  Static: sap.chart.ColoringType.Positive\n              },\n              Revenue: {\n                  Static: sap.chart.ColoringType.Negative\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit', 'Revenue']\n      }\n  };\n  <\/pre> <\/li> <li><code>Calculated<\/code>\n\nCriticality is calculated by the backend service.\n\nFor a <code>Calculated<\/code> criticality, the value will be determined from a property contained in the model of the \u201cdata\u201d aggregation. Since the calculation must always take the currently visible dimensions into account, this property will be a measure holding an aggregated criticality for the current aggregation level. The concrete possible values held by this property are defined in {@link sap.chart.coloring.CriticalityType}: Neutral = 0, Negative = 1, Critical = 2, Positive =3.\n\nIf Legend is present, the legend shows the title and the fixed, localized texts defined for the different criticality classes. Otherwise, the chart uses the default texts \u201cGood\u201d, \u201cWarning\u201d, \u201cBad\u201d, and \u201cNeutral\u201d as localized labels in the legend.\n\nIf the value of <code>Calculated<\/code> is a dimension name. The criticality of the measure of a datapoint is determined by the value of this dimension and its textProperty(if exists) will be used as legend label.\n\nThe possible values of this certain dimension are listed in {@link sap.chart.coloring.CriticalityType}.\n\nExample:\n\nIn this case, the criticality of 'Profit' measure is determined by the value of 'ProfitCriticality' dimension which is calculated by backend service. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                  Calculated: 'ProfitCriticality'\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit']\n      }\n  };\n  <\/pre>\n\nIn this case, the criticality of 'Profit' measure is determined by the value of 'ProfitCriticalityM' measure which is calculated by backend service. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                  Calculated: 'ProfitCriticalityM',\n                  Legend: {\n                      Title: \"Legend Title\",\n                      Positive: \"Good\",\n                      Negative: \"Weak\",\n                      Critical: \"Soso\",\n                      Neutral: \"Crossbench\"\n                  }\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit']\n      }\n  };\n  <\/pre> <\/li> <li><code>DynamicThresholds<\/code>\n\nCriticality is expressed with thresholds for the boundaries between negative, critical, neutral, and positive.\n\nThe direction of improvement for measure values is mandatory, combined with corresponding thresholds.\n\nThresholds are optional. For unassigned values, defaults are determined in this order:\n\n- For DeviationRange, an omitted LowValue translates into the smallest possible number (-INF), an omitted HighValue translates into the largest possible number (+INF)\n\n- For ToleranceRange, an omitted LowValue will be initialized with DeviationRangeLowValue, an omitted HighValue will be initialized with DeviationRangeHighValue\n\n- For AcceptanceRange, an omitted LowValue will be initialized with ToleranceRangeLowValue, an omitted HighValue will be initialized with ToleranceRangeHighValue\n\nPlease refer to {@link sap.chart.coloring.ImprovementDirectionType} for detailed usage. <pre>\n  DynamicThresholds: {\n      ImprovementDirection: string,    // refer to sap.chart.coloring.ImprovementDirectionType for detailed definition\n      AcceptanceRangeLowValue: string or number, // property name or number\n      AcceptanceRangeHighValue: string or number, // property name or number\n      ToleranceRangeLowValue: string or number, // property name or number\n      ToleranceRangeHighValue: string or number, // property name or number\n      DeviationRangeLowValue: string or number, // property name or number\n      DeviationRangeHighValue: string or number, // property name or number\n  }\n  <\/pre> Example:\n\nIn this case, the criticality of 'Profit' measure is determined by the value of 'ProfitAcceptanceRangeLowValue', 'ProfitToleranceRangeLowValue' and 'ProfitDeviationRangeLowValue' measure calculated with improvement direction <code>'Maximize'<\/code>. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                   DynamicThresholds : {\n                       ImprovementDirection: sap.chart.coloring.ImprovementDirectionType.Maximize,\n                       AcceptanceRangeLowValue: 'ProfitAcceptanceRangeLowValue',\n                       ToleranceRangeLowValue: 'ProfitToleranceRangeLowValue',\n                       DeviationRangeLowValue: 'ProfitDeviationRangeLowValue'\n                   }\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit']\n      }\n  };\n  <\/pre> <\/li> <li><code>ConstantThresholds<\/code>\n\nCriticality is expressed with thresholds for the boundaries between negative, critical, neutral, and positive.\n\nThe direction of improvement for measure values is mandatory, combined with corresponding thresholds.\n\nThresholds are optional. For unassigned values, defaults are determined in this order:\n\n- For DeviationRange, an omitted LowValue translates into the smallest possible number (-INF), an omitted HighValue translates into the largest possible number (+INF)\n\n- For ToleranceRange, an omitted LowValue will be initialized with DeviationRangeLowValue, an omitted HighValue will be initialized with DeviationRangeHighValue\n\n- For AcceptanceRange, an omitted LowValue will be initialized with ToleranceRangeLowValue, an omitted HighValue will be initialized with ToleranceRangeHighValue\n\nAlso Aggregation level (the visible dimensions) must be specified for providing the context for assessing the criticality.\n\nLegend label is shown as value range and do not support customization in ConstantThresholds.\n\nPlease refer to {@link sap.chart.coloring.ImprovementDirectionType} for detailed usage. <pre>\n  ConstantThresholds: {\n      ImprovementDirection: string, refer to sap.chart.coloring.ImprovementDirectionType for detailed definition\n      AggregationLevels: [{\n           VisibleDimensions: ['dimensionName', ...],\n           AcceptanceRangeLowValue: Number,\n           AcceptanceRangeHighValue:Number,\n           ToleranceRangeLowValue: Number,\n           ToleranceRangeHighValue: Number,\n           DeviationRangeLowValue: Number,\n           DeviationRangeHighValue: Number\n      },\n      ...]\n  }\n  <\/pre> Example:\n\nIn this case, the criticality of 'Profit' measure is determined by two concrete thresholds calculated with improvement direction <code>'Maximize'<\/code>. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                   ConstantThresholds : {\n                       ImprovementDirection: sap.chart.coloring.ImprovementDirectionType.Maximize,\n                       AcceptanceRangeLowValue:100,\n                       ToleranceRangeLowValue: 80,\n                       DeviationRangeLowValue: 60\n                   }\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit']\n      }\n  };\n  <\/pre> <\/li> <\/ul>\n\n<b>For dimension values<\/b>\n\nCriticality can be expressed by assigning values to negative, critical, and positive. Unassigned dimension values are automatically assigned to neutral.\n\n<code>'Values'<\/code> is used to specify concrete dimension value(s). <code>'Legend'<\/code> is used to customize legend label which is mandatory when multiple dimension values defined in <code>'Values'<\/code>.\n\n<pre>\nDimensionValues: {\n    'dimensionName': {\n         Positive: {\n             Values: 'dimensionValue' or ['dimensionValue', ...]\n             Legend: string // mandatory for value array\n         },\n         Critical: {\n             Values: 'dimensionValue' or ['dimensionValue', ...]\n             Legend: string // mandatory for value array\n         },\n         Negative: {\n             Values: 'dimensionValue' or ['dimensionValue', ...]\n             Legend: string // mandatory for value array\n         },\n         Neutral: {\n             Values: 'dimensionValue' or ['dimensionValue', ...]\n             Legend: string // mandatory for value array\n         }\n    },\n    'dimensionName': {\n        ...\n    }\n}\n<\/pre> Example:\n\nIn this case, the criticality of 'OrderStatus' dimension is determined by values specified to different criticality classes. <pre>\nvar oColorings = {\n    Criticality: {\n        DimensionValues: {\n            OrderStatus: {\n                 Positive : {\n                     Values: 'Finished'\n                 },\n                 Critical : {\n                     Values: 'Pending'\n                 },\n                 Negative : {\n                     Values: ['Stopped', 'Not Started'],\n                     Legend: 'Alert'\n                 },\n                 Neutral : {\n                     Values: ['Processing', 'Surveyed'],\n                     Legend: 'Normal'\n                 }\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Criticality,\n    parameters: {\n        dimension: ['OrderStatus']\n    }\n};\n<\/pre>","DeprecatedInfo":{"isDeprecated":false},"value":"Criticality"}},"sap.chart.coloring.ImprovementDirectionType":{"Target":{"Deprecated":false,"Experimental":false,"description":"Closer to the target is better.\n\nPositive if the value is greater than or equal to <code>AcceptanceRangeLowValue<\/code> and lower than or equal to <code>AcceptanceRangeHighValue<\/code>.\n\nNeutral if the value is greater than or equal to <code>ToleranceRangeLowValue<\/code> and lower than <code>AcceptanceRangeLowValue<\/code> OR greater than <code>AcceptanceRangeHighValue<\/code> and lower than or equal to <code>ToleranceRangeHighValue<\/code>.\n\nCritical if the value is greater than or equal to <code>DeviationRangeLowValue<\/code> and lower than <code>ToleranceRangeLowValue<\/code> OR greater than <code>ToleranceRangeHighValue<\/code> and lower than or equal to <code>DeviationRangeHighValue<\/code>.\n\nNegative if the value is lower than <code>DeviationRangeLowValue<\/code> or greater than <code>DeviationRangeHighValue<\/code>.","helpDescription":"Closer to the target is better.\n\nPositive if the value is greater than or equal to <code>AcceptanceRangeLowValue<\/code> and lower than or equal to <code>AcceptanceRangeHighValue<\/code>.\n\nNeutral if the value is greater than or equal to <code>ToleranceRangeLowValue<\/code> and lower than <code>AcceptanceRangeLowValue<\/code> OR greater than <code>AcceptanceRangeHighValue<\/code> and lower than or equal to <code>ToleranceRangeHighValue<\/code>.\n\nCritical if the value is greater than or equal to <code>DeviationRangeLowValue<\/code> and lower than <code>ToleranceRangeLowValue<\/code> OR greater than <code>ToleranceRangeHighValue<\/code> and lower than or equal to <code>DeviationRangeHighValue<\/code>.\n\nNegative if the value is lower than <code>DeviationRangeLowValue<\/code> or greater than <code>DeviationRangeHighValue<\/code>.","DeprecatedInfo":{"isDeprecated":false},"value":"Target"},"Minimize":{"Deprecated":false,"Experimental":false,"description":"Lower is better.\n\nPositive if the value is lower than or equal to <code>AcceptanceRangeHighValue<\/code>.\n\nNeutral if the value is greater than <code>AcceptanceRangeHighValue<\/code> and lower than or equal to <code>ToleranceRangeHighValue<\/code>.\n\nCritical if the value is greater than <code>ToleranceRangeHighValue<\/code> and lower than or equal to <code>DeviationRangeHighValue<\/code>.\n\nNegative if the value is greater than <code>DeviationRangeHighValue<\/code>.","helpDescription":"Lower is better.\n\nPositive if the value is lower than or equal to <code>AcceptanceRangeHighValue<\/code>.\n\nNeutral if the value is greater than <code>AcceptanceRangeHighValue<\/code> and lower than or equal to <code>ToleranceRangeHighValue<\/code>.\n\nCritical if the value is greater than <code>ToleranceRangeHighValue<\/code> and lower than or equal to <code>DeviationRangeHighValue<\/code>.\n\nNegative if the value is greater than <code>DeviationRangeHighValue<\/code>.","DeprecatedInfo":{"isDeprecated":false},"value":"Minimize"},"Maximize":{"Deprecated":false,"Experimental":false,"description":"Higher is better.\n\nPositive if the value is greater than or equal to <code>AcceptanceRangeLowValue<\/code>.\n\nNeutral if the value is lower than <code>AcceptanceRangeLowValue<\/code> and greater than or equal to <code>ToleranceRangeLowValue<\/code>.\n\nCritical if the value is lower than <code>ToleranceRangeLowValue<\/code> and greater than or equal to <code>DeviationRangeLowValue<\/code>.\n\nNegative if the value is lower than <code>DeviationRangeLowValue<\/code>.","helpDescription":"Higher is better.\n\nPositive if the value is greater than or equal to <code>AcceptanceRangeLowValue<\/code>.\n\nNeutral if the value is lower than <code>AcceptanceRangeLowValue<\/code> and greater than or equal to <code>ToleranceRangeLowValue<\/code>.\n\nCritical if the value is lower than <code>ToleranceRangeLowValue<\/code> and greater than or equal to <code>DeviationRangeLowValue<\/code>.\n\nNegative if the value is lower than <code>DeviationRangeLowValue<\/code>.","DeprecatedInfo":{"isDeprecated":false},"value":"Maximize"}},"sap.chart.ScaleBehavior":{"FixedScale":{"Deprecated":false,"Experimental":false,"description":"Value axes scale is fixed.","helpDescription":"Value axes scale is fixed.","DeprecatedInfo":{"isDeprecated":false},"value":"FixedScale"},"AutoScale":{"Deprecated":false,"Experimental":false,"description":"Value axes scale is automatic.","helpDescription":"Value axes scale is automatic.","DeprecatedInfo":{"isDeprecated":false},"value":"AutoScale"}},"sap.chart.TimeUnitType":{"yearmonthday":{"Deprecated":false,"Experimental":false,"description":"type is Edm.string and V2 annotation sap:semantics is \"yearmonthday\", like \"yyyyMMdd\"","helpDescription":"type is Edm.string and V2 annotation sap:semantics is \"yearmonthday\", like \"yyyyMMdd\"","DeprecatedInfo":{"isDeprecated":false},"value":"yearmonthday"},"yearquarter":{"Deprecated":false,"Experimental":false,"description":"type is Edm.string, like \"yyyyQQQQQ\"","helpDescription":"type is Edm.string, like \"yyyyQQQQQ\"","DeprecatedInfo":{"isDeprecated":false},"value":"yearquarter"},"yearweek":{"Deprecated":false,"Experimental":false,"description":"type is Edm.string, like \"yyyyww\"","helpDescription":"type is Edm.string, like \"yyyyww\"","DeprecatedInfo":{"isDeprecated":false},"value":"yearweek"},"fiscalyearperiod":{"Deprecated":false,"Experimental":false,"description":"type is Edm.string, like \"YYYYPPP\"","helpDescription":"type is Edm.string, like \"YYYYPPP\"","DeprecatedInfo":{"isDeprecated":false},"value":"fiscalyearperiod"},"yearmonth":{"Deprecated":false,"Experimental":false,"description":"type is Edm.string, like \"yyyyMM\"","helpDescription":"type is Edm.string, like \"yyyyMM\"","DeprecatedInfo":{"isDeprecated":false},"value":"yearmonth"},"Date":{"Deprecated":false,"Experimental":false,"description":"type is Edm.DateTime and V2 annotation sap:display-format is \"Date\" or timestamp, and type is Edm.Date in V4","helpDescription":"type is Edm.DateTime and V2 annotation sap:display-format is \"Date\" or timestamp, and type is Edm.Date in V4","DeprecatedInfo":{"isDeprecated":false},"value":"Date"},"fiscalyear":{"Deprecated":false,"Experimental":false,"description":"type is Edm.string, like \"YYYY\"","helpDescription":"type is Edm.string, like \"YYYY\"","DeprecatedInfo":{"isDeprecated":false},"value":"fiscalyear"}},"sap.chart.SelectionBehavior":{"Series":{"Deprecated":false,"Experimental":false,"description":"Series selection behavior, one seies of data points can be selected at once.","helpDescription":"Series selection behavior, one seies of data points can be selected at once.","DeprecatedInfo":{"isDeprecated":false},"value":"Series"},"Category":{"Deprecated":false,"Experimental":false,"description":"Category selection behavior, one category of data points can be selected at once.","helpDescription":"Category selection behavior, one category of data points can be selected at once.","DeprecatedInfo":{"isDeprecated":false},"value":"Category"},"DataPoint":{"Deprecated":false,"Experimental":false,"description":"Data point selection behavior, only one data point can be selected at once.","helpDescription":"Data point selection behavior, only one data point can be selected at once.","DeprecatedInfo":{"isDeprecated":false},"value":"DataPoint"}},"sap.chart.coloring.GradationTargetColorScheme":{"PositiveTarget":{"Deprecated":false,"Experimental":false,"description":"PositiveTarget","helpDescription":"PositiveTarget","DeprecatedInfo":{"isDeprecated":false},"value":"PositiveTarget"}},"sap.chart.coloring.GradationSingleColorScheme":{"NoSemantics":{"Deprecated":false,"Experimental":false,"description":"NoSemantics","helpDescription":"NoSemantics","DeprecatedInfo":{"isDeprecated":false},"value":"NoSemantics"},"Negative":{"Deprecated":false,"Experimental":false,"description":"Negative","helpDescription":"Negative","DeprecatedInfo":{"isDeprecated":false},"value":"Negative"},"Positive":{"Deprecated":false,"Experimental":false,"description":"Positive","helpDescription":"Positive","DeprecatedInfo":{"isDeprecated":false},"value":"Positive"}},"sap.chart.SelectionMode":{"Single":{"Deprecated":false,"Experimental":false,"description":"Single selection mode, only one set of data points can be selected at once.","helpDescription":"Single selection mode, only one set of data points can be selected at once.","DeprecatedInfo":{"isDeprecated":false},"value":"Single"},"Multi":{"Deprecated":false,"Experimental":false,"description":"Multi selection mode, multiple sets of data points can be selected at once.","helpDescription":"Multi selection mode, multiple sets of data points can be selected at once.","DeprecatedInfo":{"isDeprecated":false},"value":"Multi"},"None":{"Deprecated":false,"Experimental":false,"description":"None selection mode, no data points can be selected.","helpDescription":"None selection mode, no data points can be selected.","DeprecatedInfo":{"isDeprecated":false},"value":"None"}},"sap.chart.coloring.GradationSaturation":{"DarkToLight":{"Deprecated":false,"Experimental":false,"description":"DarkToLight","helpDescription":"DarkToLight","DeprecatedInfo":{"isDeprecated":false},"value":"DarkToLight"},"LightToDark":{"Deprecated":false,"Experimental":false,"description":"LightToDark","helpDescription":"LightToDark","DeprecatedInfo":{"isDeprecated":false},"value":"LightToDark"}},"sap.chart.coloring.GradationDivergingColorScheme":{"NoSemantics":{"Deprecated":false,"Experimental":false,"description":"NoSemantics","helpDescription":"NoSemantics","DeprecatedInfo":{"isDeprecated":false},"value":"NoSemantics"},"ColdToHot":{"Deprecated":false,"Experimental":false,"description":"PositiveToNegative","helpDescription":"PositiveToNegative","DeprecatedInfo":{"isDeprecated":false},"value":"ColdToHot"},"PositiveToNegative":{"Deprecated":false,"Experimental":false,"description":"PositiveToNegative","helpDescription":"PositiveToNegative","DeprecatedInfo":{"isDeprecated":false},"value":"PositiveToNegative"},"HotToCold":{"Deprecated":false,"Experimental":false,"description":"HotToCold","helpDescription":"HotToCold","DeprecatedInfo":{"isDeprecated":false},"value":"HotToCold"},"NegativeToPositive":{"Deprecated":false,"Experimental":false,"description":"NegativeToPositive","helpDescription":"NegativeToPositive","DeprecatedInfo":{"isDeprecated":false},"value":"NegativeToPositive"}},"sap.chart.data.MeasureRoleType":{"axis4":{"Deprecated":true,"Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Please use other MeasureRoleType for specific usage.<br>Once used by Bullet Chart, but as this chart layout is configured via semantic patterns instead, \"Asix4\" has no special usage from now on.","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Please use other MeasureRoleType for specific usage.<br>Once used by Bullet Chart, but as this chart layout is configured via semantic patterns instead, \"Asix4\" has no special usage from now on.","DeprecatedInfo":{"isDeprecated":true,"description":"Please use other MeasureRoleType for specific usage."},"value":"axis4"},"axis3":{"Deprecated":false,"Experimental":false,"description":"Measures with role \"axis3\" are assigned to feed uid \"bubbleWidth\" if used.","helpDescription":"Measures with role \"axis3\" are assigned to feed uid \"bubbleWidth\" if used.","DeprecatedInfo":{"isDeprecated":true,"description":"Please use other MeasureRoleType for specific usage."},"value":"axis3"},"axis2":{"Deprecated":false,"Experimental":false,"description":"Measures with role \"axis2\" are assigned to feed uid \"valueaxis2\" if used. If a chart type does not use the feed uid \"bubbleWidth\" (true for all chart types except bubble and radar), then all measures with role \"axis3\" or \"axis4\" are treated as measures with role \"axis2\".","helpDescription":"Measures with role \"axis2\" are assigned to feed uid \"valueaxis2\" if used. If a chart type does not use the feed uid \"bubbleWidth\" (true for all chart types except bubble and radar), then all measures with role \"axis3\" or \"axis4\" are treated as measures with role \"axis2\".","DeprecatedInfo":{"isDeprecated":true,"description":"Please use other MeasureRoleType for specific usage."},"value":"axis2"},"axis1":{"Deprecated":false,"Experimental":false,"description":"General Rules for all chart types <ol> <li>All measues with role \"axis1\" are assigned to feed uid \"valueaxis\". All measures with role \"axis2\" are assigned to feed uid \"valueaxis2\". All measures with role \"axis3\" are assigned to feed uid \"bubbleWidth\".<\/li> <li>If a chart type does not use the feed uid \"valueaxis2\", then all measures with role \"axis2\" are treated as measures with role \"axis1\".<\/li> <li>If a chart type requires at least 1 measure on the feed uid \"valueaxis\" (true for all non-\"dual\" chart types), but there is no measure with role \"axis1\", then the first measure with role \"axis2\" is assigned to feed uid \"valueaxis\"<\/li> <li>If the chart type requires at least one measure on the feed uid \"valueaxis2\" (true for all \"dual\" chart types\"), but there is no measure with role \"axis2\", then the first measure with role \"axis3\" or \"axis4\" or (if not exists) the last measure with role \"axis1\" is assigned to feed uid \"valueaxis2\".<\/li> <\/ol>","helpDescription":"General Rules for all chart types <ol> <li>All measues with role \"axis1\" are assigned to feed uid \"valueaxis\". All measures with role \"axis2\" are assigned to feed uid \"valueaxis2\". All measures with role \"axis3\" are assigned to feed uid \"bubbleWidth\".<\/li> <li>If a chart type does not use the feed uid \"valueaxis2\", then all measures with role \"axis2\" are treated as measures with role \"axis1\".<\/li> <li>If a chart type requires at least 1 measure on the feed uid \"valueaxis\" (true for all non-\"dual\" chart types), but there is no measure with role \"axis1\", then the first measure with role \"axis2\" is assigned to feed uid \"valueaxis\"<\/li> <li>If the chart type requires at least one measure on the feed uid \"valueaxis2\" (true for all \"dual\" chart types\"), but there is no measure with role \"axis2\", then the first measure with role \"axis3\" or \"axis4\" or (if not exists) the last measure with role \"axis1\" is assigned to feed uid \"valueaxis2\".<\/li> <\/ol>","DeprecatedInfo":{"isDeprecated":true,"description":"Please use other MeasureRoleType for specific usage."},"value":"axis1"}},"sap.chart.coloring.CriticalityType":{"Neutral":{"Deprecated":false,"Experimental":false,"description":"Neutral","helpDescription":"Neutral","DeprecatedInfo":{"isDeprecated":false},"value":"Neutral"},"Negative":{"Deprecated":false,"Experimental":false,"description":"Negative","helpDescription":"Negative","DeprecatedInfo":{"isDeprecated":false},"value":"Negative"},"Positive":{"Deprecated":false,"Experimental":false,"description":"Positive","helpDescription":"Positive","DeprecatedInfo":{"isDeprecated":false},"value":"Positive"},"Critical":{"Deprecated":false,"Experimental":false,"description":"Critical","helpDescription":"Critical","DeprecatedInfo":{"isDeprecated":false},"value":"Critical"}},"sap.chart.MessageId":{"MultipleUnits":{"Deprecated":false,"Experimental":false,"description":"Multiple units message, multiple unites are not allowed in one measure for analytical chart.","helpDescription":"Multiple units message, multiple unites are not allowed in one measure for analytical chart.","DeprecatedInfo":{"isDeprecated":false},"value":"MultipleUnits"},"NoData":{"Deprecated":false,"Experimental":false,"description":"No data message, metadata is defined but all data values are empty.","helpDescription":"No data message, metadata is defined but all data values are empty.","DeprecatedInfo":{"isDeprecated":false},"value":"NoData"}},"sap.chart.data.MeasureSemantics":{"Projected":{"Deprecated":false,"Experimental":false,"description":"where values should be, e.g.: thresholds, targets.","helpDescription":"where values should be, e.g.: thresholds, targets.","DeprecatedInfo":{"isDeprecated":false},"value":"Projected"},"Reference":{"Deprecated":false,"Experimental":false,"description":"where values will be, e.g.: forecasts, estimations, predictions.","helpDescription":"where values will be, e.g.: forecasts, estimations, predictions.","DeprecatedInfo":{"isDeprecated":false},"value":"Reference"},"Actual":{"Deprecated":false,"Experimental":false,"description":"facts that happened in the past.","helpDescription":"facts that happened in the past.","DeprecatedInfo":{"isDeprecated":false},"value":"Actual"}}},"metadatas":{"sap.chart.data.HierarchyDimension":{"associations":{},"filetype":"class","Experimental":false,"module":"sap/chart/data/HierarchyDimension","description":"Definition of a single hierarchy dimension in a chart","constructorDescription":"Constructor for a new ui5/data/HierarchyDimension.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLevel level} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.chart.data.Dimension#constructor sap.chart.data.Dimension}\ncan be used as well.","extend":"sap.chart.data.Dimension","Deprecated":false,"helpDescription":"Definition of a single hierarchy dimension in a chart","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.chart.data.HierarchyDimension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nCan either be an instance of a TooltipBase subclass or a simple string.","fullName":"sap.chart.data.HierarchyDimension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nCan either be an instance of a TooltipBase subclass or a simple string.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.chart.data.HierarchyDimension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.chart.data.HierarchyDimension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.chart.data.HierarchyDimension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"textFormatter":{"method":"#getTextFormatter,setTextFormatter","Deprecated":false,"Experimental":false,"description":"Function returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension. Dimension key value and the corresponding text will be passed to the supplied function as parameters.","fullName":"sap.chart.data.HierarchyDimension#textFormatter","helpDescription":"Function returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension. Dimension key value and the corresponding text will be passed to the supplied function as parameters.","type":"function","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"displayText":{"method":"#getDisplayText,setDisplayText","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.","fullName":"sap.chart.data.HierarchyDimension#displayText","helpDescription":"Whether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.data.HierarchyDimension#models","type":"object"},"textProperty":{"method":"#getTextProperty,setTextProperty","Deprecated":false,"Experimental":false,"description":"Text for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","fullName":"sap.chart.data.HierarchyDimension#textProperty","helpDescription":"Text for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"role":{"method":"#getRole,setRole","Deprecated":false,"defaultValue":"category","Experimental":false,"description":"How the Dimension will influence the chart layout. Possible values are {@link sap.chart.data.DimensionRoleType category}, {@link sap.chart.data.DimensionRoleType series} or {@link sap.chart.data.DimensionRoleType category2}. The default is {@link sap.chart.data.DimensionRoleType category}.\n\nYou can create a new dimension as follow: <pre>\n...\nnew sap.chart.data.Dimension({name: \"DIMENSION1\", role: sap.chart.data.DimensionRoleType.category})\n...\n<\/pre>\n\nDetailed usage of dimension role. Please refer to {@link sap.chart.data.DimensionRoleType DimensionRoleType}\n\n<b>NOTE:<\/b> Has no effect if the Dimension is used as inResultDimensions by Chart","fullName":"sap.chart.data.HierarchyDimension#role","helpDescription":"How the Dimension will influence the chart layout. Possible values are {@link sap.chart.data.DimensionRoleType category}, {@link sap.chart.data.DimensionRoleType series} or {@link sap.chart.data.DimensionRoleType category2}. The default is {@link sap.chart.data.DimensionRoleType category}.\n\nYou can create a new dimension as follow: <pre>\n...\nnew sap.chart.data.Dimension({name: \"DIMENSION1\", role: sap.chart.data.DimensionRoleType.category})\n...\n<\/pre>\n\nDetailed usage of dimension role. Please refer to {@link sap.chart.data.DimensionRoleType DimensionRoleType}\n\n<b>NOTE:<\/b> Has no effect if the Dimension is used as inResultDimensions by Chart","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"level":{"method":"#getLevel,setLevel","Deprecated":false,"defaultValue":"0","Experimental":false,"description":"Level restriction to be applied to this hierarchy dimension. NOTE: Setting this property will cause initialization of drill stack. Getter of this property just returns level explicitly set by user, call {@link sap.chart.Chart#getDrillStack} and refer to 'hierarchylevel' if you need current level after drilling","fullName":"sap.chart.data.HierarchyDimension#level","helpDescription":"Level restriction to be applied to this hierarchy dimension. NOTE: Setting this property will cause initialization of drill stack. Getter of this property just returns level explicitly set by user, call {@link sap.chart.Chart#getDrillStack} and refer to 'hierarchylevel' if you need current level after drilling","type":"int","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.data.HierarchyDimension#objectBindings","type":"object"},"name":{"method":"#getName,setName","Deprecated":false,"Experimental":false,"description":"Property in the \"data\" model holding the (always unique) Dimension key.","fullName":"sap.chart.data.HierarchyDimension#name","helpDescription":"Property in the \"data\" model holding the (always unique) Dimension key.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"label":{"method":"#getLabel,setLabel","Deprecated":false,"Experimental":false,"description":"Label for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","fullName":"sap.chart.data.HierarchyDimension#label","helpDescription":"Label for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link sap.ui.core.Configuration}.","fullName":"sap.chart.data.HierarchyDimension#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.data.HierarchyDimension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.chart.data.HierarchyDimension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.chart.data.HierarchyDimension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.chart.data.HierarchyDimension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.chart.data.HierarchyDimension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.chart.data.HierarchyDimension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.chart.data.HierarchyDimension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.chart.data.HierarchyDimension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.chart.data.HierarchyDimension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.chart.data.HierarchyDimension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueAxisFixedScaleTurnedOff":{"method":"sap.chart.Chart#event:valueAxisFixedScaleTurnedOff","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"valueAxisFixedScaleTurnedOff","description":"Event fires when fixed scale is turned off by adding or removing dimension","fullName":"sap.chart.Chart#valueAxisFixedScaleTurnedOff","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationError":{"method":"sap.chart.data.HierarchyDimension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.chart.data.HierarchyDimension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.chart.Chart":{"associations":{},"filetype":"class","Experimental":false,"module":"sap/chart/Chart","description":"UI5 Chart control","constructorDescription":"Constructor for a new Chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getChartType chartType} : string (default: bar)<\/li>\n<li>{@link #getUiConfig uiConfig} : object<\/li>\n<li>{@link #getVisibleDimensions visibleDimensions} : string[] (default: [])<\/li>\n<li>{@link #getInResultDimensions inResultDimensions} : string[] (default: [])<\/li>\n<li>{@link #getVisibleMeasures visibleMeasures} : string[] (default: [])<\/li>\n<li>{@link #getVizProperties vizProperties} : object<\/li>\n<li>{@link #getVizScales vizScales} : object[]<\/li>\n<li>{@link #getIsAnalytical isAnalytical} : boolean<\/li>\n<li>{@link #getSelectionBehavior selectionBehavior} : sap.chart.SelectionBehavior (default: DataPoint)<\/li>\n<li>{@link #getSelectionMode selectionMode} : sap.chart.SelectionMode (default: Multi)<\/li>\n<li>{@link #getEnablePagination enablePagination} : boolean (default: false)<\/li>\n<li>{@link #getEnableStableColor enableStableColor} : boolean (default: false)<\/li>\n<li>{@link #getEnableScalingFactor enableScalingFactor} : boolean (default: false)<\/li>\n<li>{@link #getCustomMessages customMessages} : object<\/li>\n<li>{@link #getColorings colorings} : object<\/li>\n<li>{@link #getActiveColoring activeColoring} : object<\/li>\n<li>{@link #getValueAxisScale valueAxisScale} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getData data} : sap.ui.core.Element[]<\/li>\n<li>{@link #getDimensions dimensions} : sap.chart.data.Dimension[]<\/li>\n<li>{@link #getMeasures measures} : sap.chart.data.Measure[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:drilledDown drilledDown} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:drilledUp drilledUp} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:renderComplete renderComplete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:valueAxisFixedScaleTurnedOff valueAxisFixedScaleTurnedOff} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:drillStackChanged drillStackChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.viz.ui5.controls.common.BaseControl#constructor sap.viz.ui5.controls.common.BaseControl}\ncan be used as well.","extend":"sap.viz.ui5.controls.common.BaseControl","Deprecated":false,"helpDescription":"UI5 Chart control","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.chart.Chart#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"measures":{"method":"#getMeasures,destroyMeasures,insertMeasure,addMeasure,removeMeasure,indexOfMeasure,removeAllMeasures","Deprecated":false,"Experimental":false,"multiple":"true","description":"Measures of the data.","fullName":"sap.chart.Chart#measures","helpDescription":"Measures of the data.","type":"sap.chart.data.Measure","DeprecatedInfo":{"isDeprecated":false}},"data":{"method":"#getData,destroyData,insertData,addData,removeData,indexOfData,removeAllData,bindData,unbindData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Actual data. It can be bound to an (analytical) ODataModel.\n\n<b>NOTE:<\/b> The metadataLoaded event {@link sap.ui.model.odata.v2.ODataModel#attachMetadataLoaded} need to be listened when bind to v2 ODataModel.","fullName":"sap.chart.Chart#data","helpDescription":"Actual data. It can be bound to an (analytical) ODataModel.\n\n<b>NOTE:<\/b> The metadataLoaded event {@link sap.ui.model.odata.v2.ODataModel#attachMetadataLoaded} need to be listened when bind to v2 ODataModel.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nCan either be an instance of a TooltipBase subclass or a simple string.","fullName":"sap.chart.Chart#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nCan either be an instance of a TooltipBase subclass or a simple string.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_vizFrame":{"method":"#get_vizFrame,destroy_vizFrame,set_vizFrame","Deprecated":false,"Experimental":false,"multiple":"false","description":"Internal VizFrame instance which does the actual rendering work.","fullName":"sap.chart.Chart#_vizFrame","helpDescription":"Internal VizFrame instance which does the actual rendering work.","type":"sap.viz.ui5.controls.VizFrame","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.chart.Chart#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.chart.Chart#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.chart.Chart#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"dimensions":{"method":"#getDimensions,destroyDimensions,insertDimension,addDimension,removeDimension,indexOfDimension,removeAllDimensions","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dimensions of the data.","fullName":"sap.chart.Chart#dimensions","helpDescription":"Dimensions of the data.","type":"sap.chart.data.Dimension","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"customMessages":{"method":"#getCustomMessages,setCustomMessages","Deprecated":false,"Experimental":false,"description":"Chart custom messages.","fullName":"sap.chart.Chart#customMessages","helpDescription":"Chart custom messages.","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.Chart#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.chart.Chart#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"uiConfig":{"method":"#getUiConfig,setUiConfig","Deprecated":false,"Experimental":false,"description":"Configuration for initialization to VizControl. This property could only set via settings parameter in Constructor.","fullName":"sap.chart.Chart#uiConfig","helpDescription":"Configuration for initialization to VizControl. This property could only set via settings parameter in Constructor.","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"vizScales":{"method":"#getVizScales,setVizScales","Deprecated":false,"Experimental":false,"description":"/** Chart scales, refer to chart property <a href=\"docs/vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","fullName":"sap.chart.Chart#vizScales","helpDescription":"/** Chart scales, refer to chart property <a href=\"docs/vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","type":"object[]","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"valueAxisScale":{"method":"#getValueAxisScale,setValueAxisScale","Deprecated":false,"Experimental":false,"description":"Value Axis Scale.\n\nSpecifies the scale of the chart value axes.\n\n<ol> <li>scaleBehavior: <b>optional<\/b>, determines whether or not all value axes in the chart should have a fixed scale. Possible values refer to {@link sap.chart.ScaleBehavior}. The default value is sap.chart.ScaleBehavior.AutoScale. In order to apply a fixed scale, boundary values for minimum and maximum must have been specified for all visible measures, and the axes boundaries are then created from the largest maximum and the smallest minimum value of the measures put on the respective axis. If any visible measure lacks this information, or scaleBehavior is set to sap.chart.ScaleBehavior.AutoScale, the chart will apply an automatic scaling for all value axes. <\/li> <li>fixedScaleSettings: <ul> <li>measureBoundaryValues: An object holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d values for all the measures. Stacked chart with only one measure also uses this object to describe the fixed \u201cminimum\u201d and \u201cmaximum\u201d value. <ul> <li> <code>measure<\/code> Measure name <\/li> <\/ul> <\/li> <li>stackedMultipleMeasureBoundaryValues: An array of objects holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d values only for stacked chart with multiple measures. <ul> <li> <code>measures<\/code> the array of measure name applied to the axis. <\/li> <li> <code>boundaryValues：<\/code> An object holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d value all the measures applied to certain axis. <\/li> <\/ul> <\/li> <\/ul> <\/li> <li>autoScaleSettings: <ul> <li> <code>zeroAlwaysVisible<\/code> forces the value axis to always display the zero value (only a few chart types support the opposite), which is <b>optional<\/b>. The default value is true. <\/li> <li> <code>syncWith<\/code> selects how the chart adapts the value axis to the data: The axis boundaries may be determined from the loaded data, which is <b>optional<\/b>. The default value is \"DataSet\". Possible values refer to {@link sap.chart.AutoScaleMode}. <\/li> <\/ul> <\/li> <\/ol>\n\nExample: <pre>\nvalueAxisScale: {\n    scaleBehavior: sap.chart.ScaleBehavior,\n    fixedScaleSettings: {\n        measureBoundaryValues: {\n            measure_1: {\n                minimum: Number,\n                maximum: Number\n            },\n            measure_2: {\n                minimum: Number,\n                maximum: Number\n            }\n        },\n        stackedMultipleMeasureBoundaryValues: [{\n            measures: [ 'measure_1', 'measure_2', \u2026 ],\n            boundaryValues： {\n                minimum: Number,\n                maximum: Number\n            }\n        }， {\n            measures: [ 'measure_3', 'measure_4', \u2026 ],\n            boundaryValues： {\n                minimum: Number,\n                maximum: Number\n            }\n        }]\n    },\n    autoScaleSettings: {\n        zeroAlwaysVisible: Boolean,\n        syncWith: sap.chart.autoScaleMode\n    }\n}\n<\/pre>\n\nRefer to<br/> {@link sap.chart.AutoScaleMode.DataSet}<br/> {@link sap.chart.AutoScaleMode.VisibleData}<br/> {@link sap.chart.ScaleBehavior.AutoScale}<br/> {@link sap.chart.ScaleBehavior.FixedScale}<br/> for detailed usage","fullName":"sap.chart.Chart#valueAxisScale","helpDescription":"Value Axis Scale.\n\nSpecifies the scale of the chart value axes.\n\n<ol> <li>scaleBehavior: <b>optional<\/b>, determines whether or not all value axes in the chart should have a fixed scale. Possible values refer to {@link sap.chart.ScaleBehavior}. The default value is sap.chart.ScaleBehavior.AutoScale. In order to apply a fixed scale, boundary values for minimum and maximum must have been specified for all visible measures, and the axes boundaries are then created from the largest maximum and the smallest minimum value of the measures put on the respective axis. If any visible measure lacks this information, or scaleBehavior is set to sap.chart.ScaleBehavior.AutoScale, the chart will apply an automatic scaling for all value axes. <\/li> <li>fixedScaleSettings: <ul> <li>measureBoundaryValues: An object holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d values for all the measures. Stacked chart with only one measure also uses this object to describe the fixed \u201cminimum\u201d and \u201cmaximum\u201d value. <ul> <li> <code>measure<\/code> Measure name <\/li> <\/ul> <\/li> <li>stackedMultipleMeasureBoundaryValues: An array of objects holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d values only for stacked chart with multiple measures. <ul> <li> <code>measures<\/code> the array of measure name applied to the axis. <\/li> <li> <code>boundaryValues：<\/code> An object holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d value all the measures applied to certain axis. <\/li> <\/ul> <\/li> <\/ul> <\/li> <li>autoScaleSettings: <ul> <li> <code>zeroAlwaysVisible<\/code> forces the value axis to always display the zero value (only a few chart types support the opposite), which is <b>optional<\/b>. The default value is true. <\/li> <li> <code>syncWith<\/code> selects how the chart adapts the value axis to the data: The axis boundaries may be determined from the loaded data, which is <b>optional<\/b>. The default value is \"DataSet\". Possible values refer to {@link sap.chart.AutoScaleMode}. <\/li> <\/ul> <\/li> <\/ol>\n\nExample: <pre>\nvalueAxisScale: {\n    scaleBehavior: sap.chart.ScaleBehavior,\n    fixedScaleSettings: {\n        measureBoundaryValues: {\n            measure_1: {\n                minimum: Number,\n                maximum: Number\n            },\n            measure_2: {\n                minimum: Number,\n                maximum: Number\n            }\n        },\n        stackedMultipleMeasureBoundaryValues: [{\n            measures: [ 'measure_1', 'measure_2', \u2026 ],\n            boundaryValues： {\n                minimum: Number,\n                maximum: Number\n            }\n        }， {\n            measures: [ 'measure_3', 'measure_4', \u2026 ],\n            boundaryValues： {\n                minimum: Number,\n                maximum: Number\n            }\n        }]\n    },\n    autoScaleSettings: {\n        zeroAlwaysVisible: Boolean,\n        syncWith: sap.chart.autoScaleMode\n    }\n}\n<\/pre>\n\nRefer to<br/> {@link sap.chart.AutoScaleMode.DataSet}<br/> {@link sap.chart.AutoScaleMode.VisibleData}<br/> {@link sap.chart.ScaleBehavior.AutoScale}<br/> {@link sap.chart.ScaleBehavior.FixedScale}<br/> for detailed usage","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.chart.Chart#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"},"group":"Misc"},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.chart.Chart#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.chart.Chart#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"defaultValue":"[]","Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.chart.Chart#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"visibleMeasures":{"method":"#getVisibleMeasures,setVisibleMeasures","Deprecated":false,"defaultValue":"[]","Experimental":false,"description":"Names of the Measures to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Measure<\/code>s will cause errors.","fullName":"sap.chart.Chart#visibleMeasures","helpDescription":"Names of the Measures to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Measure<\/code>s will cause errors.","type":"string[]","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link sap.ui.core.Configuration}.","fullName":"sap.chart.Chart#id","type":"sap.ui.core.ID"},"visibleDimensions":{"method":"#getVisibleDimensions,setVisibleDimensions","Deprecated":false,"defaultValue":"[]","Experimental":false,"description":"Names of the Dimensions to be displayed in the Chart, all available dimensions will automatically append when the property isAnalytical is false.\n\nDepending on chart type, insufficient number of visible <code>Dimension<\/code>s will cause error.","fullName":"sap.chart.Chart#visibleDimensions","helpDescription":"Names of the Dimensions to be displayed in the Chart, all available dimensions will automatically append when the property isAnalytical is false.\n\nDepending on chart type, insufficient number of visible <code>Dimension<\/code>s will cause error.","type":"string[]","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"height":{"method":"#getHeight,setHeight","Deprecated":false,"defaultValue":"480px","Experimental":false,"description":"Height of the VizControl as a CSS size.","fullName":"sap.chart.Chart#height","helpDescription":"Height of the VizControl as a CSS size.","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"enableScalingFactor":{"method":"#getEnableScalingFactor,setEnableScalingFactor","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Enable scaling factor.","fullName":"sap.chart.Chart#enableScalingFactor","helpDescription":"Enable scaling factor.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.Chart#bindingContexts","type":"object"},"enablePagination":{"method":"#getEnablePagination,setEnablePagination","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Enable pagination mode.\n\nPagination mode empowers users to visualize dataset page by page by scrolling back or forth. Currently there are some limitations of this mode in some chart transversal features, such as: <ol> <li>Selection status might lost for new batch data<\/li> <li>Keyboard navigation will be only available for current continuous batch data<\/li> <li>Zoom out might have inconsistent behavior, Hence the gesture in mobile might have the same issue<\/li> <li>Time charts did not enable pagination yet<\/li> <li>Series color might be inconsistent before/after jump pages<\/li> <\/ol> Please refer to release notes for details.","fullName":"sap.chart.Chart#enablePagination","helpDescription":"Enable pagination mode.\n\nPagination mode empowers users to visualize dataset page by page by scrolling back or forth. Currently there are some limitations of this mode in some chart transversal features, such as: <ol> <li>Selection status might lost for new batch data<\/li> <li>Keyboard navigation will be only available for current continuous batch data<\/li> <li>Zoom out might have inconsistent behavior, Hence the gesture in mobile might have the same issue<\/li> <li>Time charts did not enable pagination yet<\/li> <li>Series color might be inconsistent before/after jump pages<\/li> <\/ol> Please refer to release notes for details.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.Chart#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.chart.Chart#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Appearance"},"enableStableColor":{"method":"#getEnableStableColor,setEnableStableColor","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Enable Stable color mode. To keep the same colors for the same dimension values or measure names.","fullName":"sap.chart.Chart#enableStableColor","helpDescription":"Enable Stable color mode. To keep the same colors for the same dimension values or measure names.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"vizProperties":{"method":"#getVizProperties,setVizProperties","Deprecated":false,"Experimental":false,"description":"Chart properties, refer to chart property <a href=\"docs/vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","fullName":"sap.chart.Chart#vizProperties","helpDescription":"Chart properties, refer to chart property <a href=\"docs/vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"isAnalytical":{"method":"#getIsAnalytical,setIsAnalytical","Deprecated":false,"Experimental":false,"description":"Whether or not an aggregated entity set is bound to the chart.","fullName":"sap.chart.Chart#isAnalytical","helpDescription":"Whether or not an aggregated entity set is bound to the chart.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"colorings":{"method":"#getColorings,setColorings","Deprecated":false,"Experimental":false,"description":"Chart colorings.\n\nHolds an object with information about the possible options how colors can be applied for indicating <code>Criticality<\/code> or <code>Emphasis<\/code> in the chart. <pre>\nColorings: {\n    Criticality: {\n        \u2026\n    },\n    Emphasis: {\n        \u2026\n    }\n}\n<\/pre>\n\n<b>NOTE:<\/b> Dimension-based coloring does not work when {@link sap.chart.data.Measure#setSemantics} is set to {@link sap.chart.data.MeasureSemantics.Projected} or {@link sap.chart.data.MeasureSemantics.Reference} for visible measure(s).\n\nRefer to<br/> {@link sap.chart.ColoringType.Criticality}<br/> {@link sap.chart.ColoringType.Emphasis}<br/> for detailed usage","fullName":"sap.chart.Chart#colorings","helpDescription":"Chart colorings.\n\nHolds an object with information about the possible options how colors can be applied for indicating <code>Criticality<\/code> or <code>Emphasis<\/code> in the chart. <pre>\nColorings: {\n    Criticality: {\n        \u2026\n    },\n    Emphasis: {\n        \u2026\n    }\n}\n<\/pre>\n\n<b>NOTE:<\/b> Dimension-based coloring does not work when {@link sap.chart.data.Measure#setSemantics} is set to {@link sap.chart.data.MeasureSemantics.Projected} or {@link sap.chart.data.MeasureSemantics.Reference} for visible measure(s).\n\nRefer to<br/> {@link sap.chart.ColoringType.Criticality}<br/> {@link sap.chart.ColoringType.Emphasis}<br/> for detailed usage","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.chart.Chart#metadataContexts","type":"object"},"selectionBehavior":{"method":"#getSelectionBehavior,setSelectionBehavior","Deprecated":false,"defaultValue":"DataPoint","Experimental":false,"description":"Chart selection behavior.","fullName":"sap.chart.Chart#selectionBehavior","helpDescription":"Chart selection behavior.","type":"sap.chart.SelectionBehavior","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"width":{"method":"#getWidth,setWidth","Deprecated":false,"defaultValue":"640px","Experimental":false,"description":"Width of the VizControl as a CSS size.","fullName":"sap.chart.Chart#width","helpDescription":"Width of the VizControl as a CSS size.","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"chartType":{"method":"#getChartType,setChartType","Deprecated":false,"defaultValue":"bar","Experimental":false,"description":"Type of the Chart.","fullName":"sap.chart.Chart#chartType","helpDescription":"Type of the Chart.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"inResultDimensions":{"method":"#getInResultDimensions,setInResultDimensions","Deprecated":false,"defaultValue":"[]","Experimental":false,"description":"Names of the inResult dimensions.\n\ninResult dimension do not show up in chart layout, i.e. axis/legend. They do show in tooltip, popover, and in selection results.","fullName":"sap.chart.Chart#inResultDimensions","helpDescription":"Names of the inResult dimensions.\n\ninResult dimension do not show up in chart layout, i.e. axis/legend. They do show in tooltip, popover, and in selection results.","type":"string[]","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"selectionMode":{"method":"#getSelectionMode,setSelectionMode","Deprecated":false,"defaultValue":"Multi","Experimental":false,"description":"Chart selection mode.","fullName":"sap.chart.Chart#selectionMode","helpDescription":"Chart selection mode.","type":"sap.chart.SelectionMode","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"activeColoring":{"method":"#getActiveColoring,setActiveColoring","Deprecated":false,"Experimental":false,"description":"Active coloring configurations.\n\nspecifies which coloring of the possible colorings is to be applied for the current chart layout. It holds an object with two properties：\n\n<ol> <li>coloring: <b>mandatory<\/b>, specify which kind of coloring should take effect in current chart layout. Possible values refer to {@link sap.chart.ColoringType}<\/li> <li>parameters: <ul> <li> <code>Criticality<\/code> supports two parameters: <code>\"dimension\"<\/code> and <code>\"measure\"<\/code>. Both are <b>optional<\/b>, one (and only one) must be provided. This setting disambiguates when multiple colorings for different visible dimensions and measures are applicable.\n\n<code>\"measure\"<\/code> supports two input types: <ol> <li><code>string<\/code> for single measure name<\/li> <li><code>string[]<\/code> of multiple measure names(only supported in <b>static<\/b>), which is relevant in case of a <b>static<\/b> measure criticality defined on multiple measures.<\/li> <\/ol> <code>\"dimension\"<\/code> holds the dimension name as string value. <\/li> <li> <code>Emphasis<\/code> supports only one parameter: <code>\"dimension\"<\/code> which is <b>optional<\/b>.\n\n<code>\"dimension\"<\/code> holds the dimension name as string value. <\/li> <\/ul> <\/li> <\/ol>\n\nExample: <pre>\nactiveColoring: {\n    coloring: sap.chart.ColoringType.Criticality,\n    parameters: {\n        dimension: \"AvailabilityStatus\u201d\n    }\n}\n<\/pre>","fullName":"sap.chart.Chart#activeColoring","helpDescription":"Active coloring configurations.\n\nspecifies which coloring of the possible colorings is to be applied for the current chart layout. It holds an object with two properties：\n\n<ol> <li>coloring: <b>mandatory<\/b>, specify which kind of coloring should take effect in current chart layout. Possible values refer to {@link sap.chart.ColoringType}<\/li> <li>parameters: <ul> <li> <code>Criticality<\/code> supports two parameters: <code>\"dimension\"<\/code> and <code>\"measure\"<\/code>. Both are <b>optional<\/b>, one (and only one) must be provided. This setting disambiguates when multiple colorings for different visible dimensions and measures are applicable.\n\n<code>\"measure\"<\/code> supports two input types: <ol> <li><code>string<\/code> for single measure name<\/li> <li><code>string[]<\/code> of multiple measure names(only supported in <b>static<\/b>), which is relevant in case of a <b>static<\/b> measure criticality defined on multiple measures.<\/li> <\/ol> <code>\"dimension\"<\/code> holds the dimension name as string value. <\/li> <li> <code>Emphasis<\/code> supports only one parameter: <code>\"dimension\"<\/code> which is <b>optional<\/b>.\n\n<code>\"dimension\"<\/code> holds the dimension name as string value. <\/li> <\/ul> <\/li> <\/ol>\n\nExample: <pre>\nactiveColoring: {\n    coloring: sap.chart.ColoringType.Criticality,\n    parameters: {\n        dimension: \"AvailabilityStatus\u201d\n    }\n}\n<\/pre>","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"}},"events":{"selectData":{"method":"sap.chart.Chart#event:selectData","Deprecated":false,"Experimental":false,"name":"selectData","description":"Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in.","fullName":"sap.chart.Chart#selectData","helpDescription":"Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"deselectData":{"method":"sap.chart.Chart#event:deselectData","Deprecated":false,"Experimental":false,"name":"deselectData","description":"Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in","fullName":"sap.chart.Chart#deselectData","helpDescription":"Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.chart.Chart#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.chart.Chart#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"drilledUp":{"method":"sap.chart.Chart#event:drilledUp","Deprecated":false,"Experimental":false,"name":"drilledUp","description":"fired after a drill-up operation","fullName":"sap.chart.Chart#drilledUp","helpDescription":"fired after a drill-up operation","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"drilledDown":{"method":"sap.chart.Chart#event:drilledDown","Deprecated":false,"Experimental":false,"name":"drilledDown","description":"fired after a drill-down operation","fullName":"sap.chart.Chart#drilledDown","helpDescription":"fired after a drill-down operation","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"drillStackChanged":{"method":"sap.chart.Chart#event:drillStackChanged","Deprecated":false,"Experimental":false,"name":"drillStackChanged","description":"Event fires when drill stack changed. API that relies on drill stack like {@link #drillDown}, {@link #drillUp} shall be called in this event or after chart is rendered","fullName":"sap.chart.Chart#drillStackChanged","helpDescription":"Event fires when drill stack changed. API that relies on drill stack like {@link #drillDown}, {@link #drillUp} shall be called in this event or after chart is rendered","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.chart.Chart#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.chart.Chart#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueAxisFixedScaleTurnedOff":{"method":"sap.chart.Chart#event:valueAxisFixedScaleTurnedOff","Deprecated":false,"Experimental":false,"name":"valueAxisFixedScaleTurnedOff","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Event fires when fixed scale is turned off by adding or removing dimension","fullName":"sap.chart.Chart#valueAxisFixedScaleTurnedOff","helpDescription":"Event fires when fixed scale is turned off by adding or removing dimension","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.chart.Chart#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.chart.Chart#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.chart.Chart#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.chart.Chart#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.chart.Chart#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.chart.Chart#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.chart.Chart#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.chart.Chart#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"renderComplete":{"method":"sap.chart.Chart#event:renderComplete","Deprecated":false,"Experimental":false,"name":"renderComplete","description":"Event fires when the rendering ends.","fullName":"sap.chart.Chart#renderComplete","helpDescription":"Event fires when the rendering ends.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.chart.data.Measure":{"associations":{},"filetype":"class","Experimental":false,"module":"sap/chart/data/Measure","description":"Definition of a single measure in a chart\n\n<table border=\"1\"> <tr> <th>chartType<\/th> <th>binding rules<\/th> <\/tr> <tr> <td>pie, donut<\/td> <td>The measure is assigned to feed uid \u201csize\u201d.<\/td> <\/tr> <tr> <td>scatter<\/td> <td>The first measure with role \u201caxis1\u201d, or (if not exists) the first measure with role \u201caxis2\u201d or (if not exist) with role \u201caxis3\u201d, is assigned to the feed uid \u201cvalueAxis\u201d. The other measure is assigned to feed uid \u201cvalueAxis2\u201d.<\/td> <\/tr> <tr> <td>bubble<\/td> <td>The first measure with role \u201caxis1\u201d, or (if not exists) the first measure with role \u201caxis2\u201d or (if not exist) with role \u201caxis3\u201d, is assigned to the feed uid \u201cvalueAxis\u201d. <br>The first measure with role \u201caxis2\u201d, or (if not exists) the second measure with role \u201caxis1\u201d or (if not exist) the first measure with role \u201caxis3\u201d, is assigned to the feed uid \u201cvalueAxis2\u201d. <br>The remaining measure is assigned to feed uid \u201cbubbleWidth\u201d. <\/td> <\/tr> <tr> <td>heatmap<\/td> <td>The measure is assigned to the feed uid \u201ccolor\u201d.<\/td> <\/tr> <tr> <td>treemap<\/td> <td>The first measure with role \u201caxis1\u201d, or (if not exists) the first measure with role \u201caxis2\u201d or (if not exist) with role \u201caxis3\u201d, is assigned to the feed uid \u201ccolor\u201d. The other measure is assigned to feed uid \u201cweight\u201d.<\/td> <\/tr> <tr> <td>..dual..<\/td> <td>At least one measure is assigned to each of the feed uids \u201cvalueAxis\u201d and \u201cvalueAxis2\u201d, according to the general rule.<\/td> <\/tr> <\/table>","constructorDescription":"Constructor for a new ui5/data/Measure.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getUnitBinding unitBinding} : string<\/li>\n<li>{@link #getValueFormat valueFormat} : string<\/li>\n<li>{@link #getRole role} : string (default: axis1)<\/li>\n<li>{@link #getSemantics semantics} : sap.chart.data.MeasureSemantics (default: Actual)<\/li>\n<li>{@link #getSemanticallyRelatedMeasures semanticallyRelatedMeasures} : object<\/li>\n<li>{@link #getAnalyticalInfo analyticalInfo} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extend":"sap.ui.core.Element","Deprecated":false,"helpDescription":"Definition of a single measure in a chart\n\n<table border=\"1\"> <tr> <th>chartType<\/th> <th>binding rules<\/th> <\/tr> <tr> <td>pie, donut<\/td> <td>The measure is assigned to feed uid \u201csize\u201d.<\/td> <\/tr> <tr> <td>scatter<\/td> <td>The first measure with role \u201caxis1\u201d, or (if not exists) the first measure with role \u201caxis2\u201d or (if not exist) with role \u201caxis3\u201d, is assigned to the feed uid \u201cvalueAxis\u201d. The other measure is assigned to feed uid \u201cvalueAxis2\u201d.<\/td> <\/tr> <tr> <td>bubble<\/td> <td>The first measure with role \u201caxis1\u201d, or (if not exists) the first measure with role \u201caxis2\u201d or (if not exist) with role \u201caxis3\u201d, is assigned to the feed uid \u201cvalueAxis\u201d. <br>The first measure with role \u201caxis2\u201d, or (if not exists) the second measure with role \u201caxis1\u201d or (if not exist) the first measure with role \u201caxis3\u201d, is assigned to the feed uid \u201cvalueAxis2\u201d. <br>The remaining measure is assigned to feed uid \u201cbubbleWidth\u201d. <\/td> <\/tr> <tr> <td>heatmap<\/td> <td>The measure is assigned to the feed uid \u201ccolor\u201d.<\/td> <\/tr> <tr> <td>treemap<\/td> <td>The first measure with role \u201caxis1\u201d, or (if not exists) the first measure with role \u201caxis2\u201d or (if not exist) with role \u201caxis3\u201d, is assigned to the feed uid \u201ccolor\u201d. The other measure is assigned to feed uid \u201cweight\u201d.<\/td> <\/tr> <tr> <td>..dual..<\/td> <td>At least one measure is assigned to each of the feed uids \u201cvalueAxis\u201d and \u201cvalueAxis2\u201d, according to the general rule.<\/td> <\/tr> <\/table>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.chart.data.Measure#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nCan either be an instance of a TooltipBase subclass or a simple string.","fullName":"sap.chart.data.Measure#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nCan either be an instance of a TooltipBase subclass or a simple string.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.chart.data.Measure#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.chart.data.Measure#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.chart.data.Measure#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.data.Measure#models","type":"object"},"role":{"method":"#getRole,setRole","Deprecated":false,"defaultValue":"axis1","Experimental":false,"description":"How values of Measure will be rendered in the chart. Possible role values are {@link sap.chart.data.MeasureRoleType axis1}, {@link sap.chart.data.MeasureRoleType axis2}, {@link sap.chart.data.MeasureRoleType axis3}, and {@link sap.chart.data.MeasureRoleType axis4}. The default is {@link sap.chart.data.MeasureRoleType axis1}. They correspond to the well-known concepts of axis identifiers in the Cartesian coordinate system, e.g. a Y-axis in a bar/column/line chart, an X- and a Y-axis in a scatter chart, or two Y-axes in bar charts, and an optional third axis for the weight/size/intensity/temperature of a data point.\n\nYou can create a new measure as follow: <pre>\n...\nnew sap.chart.data.Measure({name: \"MEASURE1\", role: sap.chart.data.MeasureRoleType.axis1})\n...\n<\/pre>\n\nDetailed usage of measure role. Please refer to {@link sap.chart.data.MeasureRoleType MeasureRoleType}\n\n<b>NOTE:<\/b> Role definition would not work for Bullet Chart and users need to set semantics instead.","fullName":"sap.chart.data.Measure#role","helpDescription":"How values of Measure will be rendered in the chart. Possible role values are {@link sap.chart.data.MeasureRoleType axis1}, {@link sap.chart.data.MeasureRoleType axis2}, {@link sap.chart.data.MeasureRoleType axis3}, and {@link sap.chart.data.MeasureRoleType axis4}. The default is {@link sap.chart.data.MeasureRoleType axis1}. They correspond to the well-known concepts of axis identifiers in the Cartesian coordinate system, e.g. a Y-axis in a bar/column/line chart, an X- and a Y-axis in a scatter chart, or two Y-axes in bar charts, and an optional third axis for the weight/size/intensity/temperature of a data point.\n\nYou can create a new measure as follow: <pre>\n...\nnew sap.chart.data.Measure({name: \"MEASURE1\", role: sap.chart.data.MeasureRoleType.axis1})\n...\n<\/pre>\n\nDetailed usage of measure role. Please refer to {@link sap.chart.data.MeasureRoleType MeasureRoleType}\n\n<b>NOTE:<\/b> Role definition would not work for Bullet Chart and users need to set semantics instead.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.data.Measure#objectBindings","type":"object"},"valueFormat":{"method":"#getValueFormat,setValueFormat","Deprecated":true,"Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Please use {@link sap.chart.Chart#setVizProperties} to set related formatStrings instead.<br>A (core UI5) format pattern to be used by the formatter to format the measure value.","fullName":"sap.chart.data.Measure#valueFormat","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Please use {@link sap.chart.Chart#setVizProperties} to set related formatStrings instead.<br>A (core UI5) format pattern to be used by the formatter to format the measure value.","type":"string","DeprecatedInfo":{"isDeprecated":true,"description":"Please use {@link sap.chart.Chart#setVizProperties} to set related formatStrings instead."},"group":"Misc"},"label":{"method":"#getLabel,setLabel","Deprecated":false,"Experimental":false,"description":"Label for the Measure, either as a string literal or by a pointer using the binding syntax to some property containing the label.","fullName":"sap.chart.data.Measure#label","helpDescription":"Label for the Measure, either as a string literal or by a pointer using the binding syntax to some property containing the label.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"semantics":{"method":"#getSemantics,setSemantics","Deprecated":false,"defaultValue":"Actual","Experimental":false,"description":"The semantics of the measure.\n\n<b>NOTE:<\/b> Dimension-based coloring (see {@link sap.chart.Chart#setColorings}) does not work when semantics is set to {@link sap.chart.data.MeasureSemantics.Projected} or {@link sap.chart.data.MeasureSemantics.Reference} for visible measure(s).\n\n<b>NOTE:<\/b> In Bullet chart measure defined as \"Reference\" maps to targetValues and \"Projected\" maps to additionalValues. Measures without definition will be recognized as actualValues.","fullName":"sap.chart.data.Measure#semantics","helpDescription":"The semantics of the measure.\n\n<b>NOTE:<\/b> Dimension-based coloring (see {@link sap.chart.Chart#setColorings}) does not work when semantics is set to {@link sap.chart.data.MeasureSemantics.Projected} or {@link sap.chart.data.MeasureSemantics.Reference} for visible measure(s).\n\n<b>NOTE:<\/b> In Bullet chart measure defined as \"Reference\" maps to targetValues and \"Projected\" maps to additionalValues. Measures without definition will be recognized as actualValues.","type":"sap.chart.data.MeasureSemantics","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.chart.data.Measure#metadataContexts","type":"object"},"unitBinding":{"method":"#getUnitBinding,setUnitBinding","Deprecated":false,"Experimental":false,"description":"Unit for the measure, a pointer using the binding syntax to some field containing the unit. Value of the given field from the same data record will be displayed after formatted measure value in data label, tooltip and chart popover. NOTE: If the unit field is not set as visible dimension in chart, or more than one unit value exists for any visible dimension value combination, it will be rendered in the chart as well but with different layout when the field is set as visible dimension..","fullName":"sap.chart.data.Measure#unitBinding","helpDescription":"Unit for the measure, a pointer using the binding syntax to some field containing the unit. Value of the given field from the same data record will be displayed after formatted measure value in data label, tooltip and chart popover. NOTE: If the unit field is not set as visible dimension in chart, or more than one unit value exists for any visible dimension value combination, it will be rendered in the chart as well but with different layout when the field is set as visible dimension..","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"semanticallyRelatedMeasures":{"method":"#getSemanticallyRelatedMeasures,setSemanticallyRelatedMeasures","Deprecated":false,"Experimental":false,"description":"Semantically related measures for a measure with semantics \"actual\" value. It is an object with two properties: <ol> <li>\"projectedValueMeasure\" identifing the projected value measure, and<\/li> <li>\"referenceValueMeasure\" identifing the reference value measure.<\/li> <\/ol>","fullName":"sap.chart.data.Measure#semanticallyRelatedMeasures","helpDescription":"Semantically related measures for a measure with semantics \"actual\" value. It is an object with two properties: <ol> <li>\"projectedValueMeasure\" identifing the projected value measure, and<\/li> <li>\"referenceValueMeasure\" identifing the reference value measure.<\/li> <\/ol>","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"name":{"method":"#getName,setName","Deprecated":false,"Experimental":false,"description":"Property in the \"data\" model holding the raw measure value.","fullName":"sap.chart.data.Measure#name","helpDescription":"Property in the \"data\" model holding the raw measure value.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link sap.ui.core.Configuration}.","fullName":"sap.chart.data.Measure#id","type":"sap.ui.core.ID"},"analyticalInfo":{"method":"#getAnalyticalInfo,setAnalyticalInfo","Deprecated":false,"Experimental":false,"description":"The analytical extra information","fullName":"sap.chart.data.Measure#analyticalInfo","helpDescription":"The analytical extra information","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.data.Measure#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.chart.data.Measure#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.chart.data.Measure#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.chart.data.Measure#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.chart.data.Measure#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.chart.data.Measure#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.chart.data.Measure#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.chart.data.Measure#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.chart.data.Measure#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueAxisFixedScaleTurnedOff":{"method":"sap.chart.Chart#event:valueAxisFixedScaleTurnedOff","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"valueAxisFixedScaleTurnedOff","description":"Event fires when fixed scale is turned off by adding or removing dimension","fullName":"sap.chart.Chart#valueAxisFixedScaleTurnedOff","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationError":{"method":"sap.chart.data.Measure#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.chart.data.Measure#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.chart.data.Dimension":{"associations":{},"filetype":"class","Experimental":false,"module":"sap/chart/data/Dimension","description":"Definition of a single dimension in a chart\n\n<table border=\"1\"> <tr> <th>chartType<\/th> <th>binding rules<\/th> <\/tr> <tr> <td>pie, donut<\/td> <td>All dimensions are assigned to feed uid \u201ccolor\u201d.<\/td> <\/tr> <tr> <td>scatter, bubble<\/td> <td>All dimensions with role category are assigned to feed uid \u201cshape\u201d.<\/td> <\/tr> <tr> <td>heatmap<\/td> <td>All dimensions with role \u201cseries\u201d and \u201ccategory2\u201d are assigned to the feed uid \u201ccategoryAxis2\u201d.<\/td> <\/tr> <tr> <td>treemap<\/td> <td>All dimensions are assigned to the feed uid \u201ccategoryAxis\u201d in the default sequence.<\/td> <\/tr> <\/table>","constructorDescription":"Constructor for a new ui5/data/Dimension.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getTextFormatter textFormatter} : function<\/li>\n<li>{@link #getTextProperty textProperty} : string<\/li>\n<li>{@link #getDisplayText displayText} : boolean (default: true)<\/li>\n<li>{@link #getRole role} : string (default: category)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extend":"sap.ui.core.Element","Deprecated":false,"helpDescription":"Definition of a single dimension in a chart\n\n<table border=\"1\"> <tr> <th>chartType<\/th> <th>binding rules<\/th> <\/tr> <tr> <td>pie, donut<\/td> <td>All dimensions are assigned to feed uid \u201ccolor\u201d.<\/td> <\/tr> <tr> <td>scatter, bubble<\/td> <td>All dimensions with role category are assigned to feed uid \u201cshape\u201d.<\/td> <\/tr> <tr> <td>heatmap<\/td> <td>All dimensions with role \u201cseries\u201d and \u201ccategory2\u201d are assigned to the feed uid \u201ccategoryAxis2\u201d.<\/td> <\/tr> <tr> <td>treemap<\/td> <td>All dimensions are assigned to the feed uid \u201ccategoryAxis\u201d in the default sequence.<\/td> <\/tr> <\/table>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.chart.data.Dimension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nCan either be an instance of a TooltipBase subclass or a simple string.","fullName":"sap.chart.data.Dimension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nCan either be an instance of a TooltipBase subclass or a simple string.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.chart.data.Dimension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.chart.data.Dimension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.chart.data.Dimension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"textFormatter":{"method":"#getTextFormatter,setTextFormatter","Deprecated":false,"Experimental":false,"description":"Function returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension. Dimension key value and the corresponding text will be passed to the supplied function as parameters.","fullName":"sap.chart.data.Dimension#textFormatter","helpDescription":"Function returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension. Dimension key value and the corresponding text will be passed to the supplied function as parameters.","type":"function","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"displayText":{"method":"#getDisplayText,setDisplayText","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.","fullName":"sap.chart.data.Dimension#displayText","helpDescription":"Whether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.data.Dimension#models","type":"object"},"textProperty":{"method":"#getTextProperty,setTextProperty","Deprecated":false,"Experimental":false,"description":"Text for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","fullName":"sap.chart.data.Dimension#textProperty","helpDescription":"Text for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"role":{"method":"#getRole,setRole","Deprecated":false,"defaultValue":"category","Experimental":false,"description":"How the Dimension will influence the chart layout. Possible values are {@link sap.chart.data.DimensionRoleType category}, {@link sap.chart.data.DimensionRoleType series} or {@link sap.chart.data.DimensionRoleType category2}. The default is {@link sap.chart.data.DimensionRoleType category}.\n\nYou can create a new dimension as follow: <pre>\n...\nnew sap.chart.data.Dimension({name: \"DIMENSION1\", role: sap.chart.data.DimensionRoleType.category})\n...\n<\/pre>\n\nDetailed usage of dimension role. Please refer to {@link sap.chart.data.DimensionRoleType DimensionRoleType}\n\n<b>NOTE:<\/b> Has no effect if the Dimension is used as inResultDimensions by Chart","fullName":"sap.chart.data.Dimension#role","helpDescription":"How the Dimension will influence the chart layout. Possible values are {@link sap.chart.data.DimensionRoleType category}, {@link sap.chart.data.DimensionRoleType series} or {@link sap.chart.data.DimensionRoleType category2}. The default is {@link sap.chart.data.DimensionRoleType category}.\n\nYou can create a new dimension as follow: <pre>\n...\nnew sap.chart.data.Dimension({name: \"DIMENSION1\", role: sap.chart.data.DimensionRoleType.category})\n...\n<\/pre>\n\nDetailed usage of dimension role. Please refer to {@link sap.chart.data.DimensionRoleType DimensionRoleType}\n\n<b>NOTE:<\/b> Has no effect if the Dimension is used as inResultDimensions by Chart","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.data.Dimension#objectBindings","type":"object"},"name":{"method":"#getName,setName","Deprecated":false,"Experimental":false,"description":"Property in the \"data\" model holding the (always unique) Dimension key.","fullName":"sap.chart.data.Dimension#name","helpDescription":"Property in the \"data\" model holding the (always unique) Dimension key.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"label":{"method":"#getLabel,setLabel","Deprecated":false,"Experimental":false,"description":"Label for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","fullName":"sap.chart.data.Dimension#label","helpDescription":"Label for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link sap.ui.core.Configuration}.","fullName":"sap.chart.data.Dimension#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.data.Dimension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.chart.data.Dimension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.chart.data.Dimension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.chart.data.Dimension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.chart.data.Dimension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.chart.data.Dimension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.chart.data.Dimension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.chart.data.Dimension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.chart.data.Dimension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.chart.data.Dimension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueAxisFixedScaleTurnedOff":{"method":"sap.chart.Chart#event:valueAxisFixedScaleTurnedOff","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"valueAxisFixedScaleTurnedOff","description":"Event fires when fixed scale is turned off by adding or removing dimension","fullName":"sap.chart.Chart#valueAxisFixedScaleTurnedOff","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationError":{"method":"sap.chart.data.Dimension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.chart.data.Dimension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.chart.coloring":{"filetype":"library","types":["sap.chart.coloring.CriticalityType","sap.chart.coloring.GradationDivergingColorScheme","sap.chart.coloring.GradationSaturation","sap.chart.coloring.GradationSingleColorScheme","sap.chart.coloring.GradationTargetColorScheme","sap.chart.coloring.ImprovementDirectionType"],"module":"sap/chart/library","name":"sap.chart.coloring","description":"Package with colorings enumeration","helpDescription":"Package with colorings enumeration","version":"1.74.0"},"sap.chart.data":{"filetype":"library","types":["sap.chart.data.DimensionRoleType","sap.chart.data.MeasureRoleType","sap.chart.data.MeasureSemantics"],"elements":["sap.chart.data.Dimension","sap.chart.data.HierarchyDimension","sap.chart.data.Measure","sap.chart.data.TimeDimension"],"module":"sap/chart/library","name":"sap.chart.data","description":"Package with additional chart data APIs","helpDescription":"Package with additional chart data APIs","version":"1.74.0"},"sap.chart.data.TimeDimension":{"associations":{},"filetype":"class","Experimental":false,"module":"sap/chart/data/TimeDimension","description":"Definition of a single time dimension in a chart\n\nIf there is exactly one dimension with time semantics, then instead of line, time_line shall be used (implicitly).\n\nTimeDmension is assigned to feed uid \"timeAxis\".","constructorDescription":"Constructor for a new ui5/data/TimeDimension.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTimeUnit timeUnit} : sap.chart.TimeUnitType<\/li>\n<li>{@link #getFiscalYearPeriodCount fiscalYearPeriodCount} : object<\/li>\n<li>{@link #getProjectedValueStartTime projectedValueStartTime} : any<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.chart.data.Dimension#constructor sap.chart.data.Dimension}\ncan be used as well.","extend":"sap.chart.data.Dimension","Deprecated":false,"helpDescription":"Definition of a single time dimension in a chart\n\nIf there is exactly one dimension with time semantics, then instead of line, time_line shall be used (implicitly).\n\nTimeDmension is assigned to feed uid \"timeAxis\".","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.chart.data.TimeDimension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nCan either be an instance of a TooltipBase subclass or a simple string.","fullName":"sap.chart.data.TimeDimension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nCan either be an instance of a TooltipBase subclass or a simple string.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.chart.data.TimeDimension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.chart.data.TimeDimension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.chart.data.TimeDimension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"textFormatter":{"method":"#getTextFormatter,setTextFormatter","Deprecated":false,"Experimental":false,"description":"Function returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension. Dimension key value and the corresponding text will be passed to the supplied function as parameters.","fullName":"sap.chart.data.TimeDimension#textFormatter","helpDescription":"Function returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension. Dimension key value and the corresponding text will be passed to the supplied function as parameters.","type":"function","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"displayText":{"method":"#getDisplayText,setDisplayText","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.","fullName":"sap.chart.data.TimeDimension#displayText","helpDescription":"Whether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.data.TimeDimension#models","type":"object"},"role":{"method":"#getRole,setRole","Deprecated":false,"defaultValue":"category","Experimental":false,"description":"How the Dimension will influence the chart layout. Possible values are {@link sap.chart.data.DimensionRoleType category}, {@link sap.chart.data.DimensionRoleType series} or {@link sap.chart.data.DimensionRoleType category2}. The default is {@link sap.chart.data.DimensionRoleType category}.\n\nYou can create a new dimension as follow: <pre>\n...\nnew sap.chart.data.Dimension({name: \"DIMENSION1\", role: sap.chart.data.DimensionRoleType.category})\n...\n<\/pre>\n\nDetailed usage of dimension role. Please refer to {@link sap.chart.data.DimensionRoleType DimensionRoleType}\n\n<b>NOTE:<\/b> Has no effect if the Dimension is used as inResultDimensions by Chart","fullName":"sap.chart.data.TimeDimension#role","helpDescription":"How the Dimension will influence the chart layout. Possible values are {@link sap.chart.data.DimensionRoleType category}, {@link sap.chart.data.DimensionRoleType series} or {@link sap.chart.data.DimensionRoleType category2}. The default is {@link sap.chart.data.DimensionRoleType category}.\n\nYou can create a new dimension as follow: <pre>\n...\nnew sap.chart.data.Dimension({name: \"DIMENSION1\", role: sap.chart.data.DimensionRoleType.category})\n...\n<\/pre>\n\nDetailed usage of dimension role. Please refer to {@link sap.chart.data.DimensionRoleType DimensionRoleType}\n\n<b>NOTE:<\/b> Has no effect if the Dimension is used as inResultDimensions by Chart","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"projectedValueStartTime":{"method":"#getProjectedValueStartTime,setProjectedValueStartTime","Deprecated":false,"Experimental":false,"description":"A time value (aligned with 'timeUnit') to indicate the start point of projected values.","fullName":"sap.chart.data.TimeDimension#projectedValueStartTime","helpDescription":"A time value (aligned with 'timeUnit') to indicate the start point of projected values.","type":"any","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.data.TimeDimension#objectBindings","type":"object"},"fiscalYearPeriodCount":{"method":"#getFiscalYearPeriodCount,setFiscalYearPeriodCount","Deprecated":false,"Experimental":false,"description":"Detailed fiscalYearPeriodCount of TimeDimension. It contains period numbers of fiscal years, like <pre>\n{\n\t default: 12,\n\t deviations: {\n\t \t \"2012\": 10,\n\t \t \"2013\": 16\n\t }\n}\n<\/pre>","fullName":"sap.chart.data.TimeDimension#fiscalYearPeriodCount","helpDescription":"Detailed fiscalYearPeriodCount of TimeDimension. It contains period numbers of fiscal years, like <pre>\n{\n\t default: 12,\n\t deviations: {\n\t \t \"2012\": 10,\n\t \t \"2013\": 16\n\t }\n}\n<\/pre>","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"label":{"method":"#getLabel,setLabel","Deprecated":false,"Experimental":false,"description":"Label for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","fullName":"sap.chart.data.TimeDimension#label","helpDescription":"Label for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.chart.data.TimeDimension#metadataContexts","type":"object"},"textProperty":{"method":"#getTextProperty,setTextProperty","Deprecated":false,"Experimental":false,"description":"Text for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","fullName":"sap.chart.data.TimeDimension#textProperty","helpDescription":"Text for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"name":{"method":"#getName,setName","Deprecated":false,"Experimental":false,"description":"Property in the \"data\" model holding the (always unique) Dimension key.","fullName":"sap.chart.data.TimeDimension#name","helpDescription":"Property in the \"data\" model holding the (always unique) Dimension key.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link sap.ui.core.Configuration}.","fullName":"sap.chart.data.TimeDimension#id","type":"sap.ui.core.ID"},"timeUnit":{"method":"#getTimeUnit,setTimeUnit","Deprecated":false,"Experimental":false,"description":"Detailed unit infomation of TimeDimension. Please refer to {@link sap.chart.TimeUnitType TimeUnitType}.","fullName":"sap.chart.data.TimeDimension#timeUnit","helpDescription":"Detailed unit infomation of TimeDimension. Please refer to {@link sap.chart.TimeUnitType TimeUnitType}.","type":"sap.chart.TimeUnitType","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.chart.data.TimeDimension#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.chart.data.TimeDimension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.chart.data.TimeDimension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.chart.data.TimeDimension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.chart.data.TimeDimension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.chart.data.TimeDimension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.chart.data.TimeDimension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.chart.data.TimeDimension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.chart.data.TimeDimension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueAxisFixedScaleTurnedOff":{"method":"sap.chart.Chart#event:valueAxisFixedScaleTurnedOff","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"valueAxisFixedScaleTurnedOff","description":"Event fires when fixed scale is turned off by adding or removing dimension","fullName":"sap.chart.Chart#valueAxisFixedScaleTurnedOff","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationError":{"method":"sap.chart.data.TimeDimension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.chart.data.TimeDimension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.chart":{"filetype":"library","types":["sap.chart.ChartType","sap.chart.api","sap.chart.coloring","sap.chart.AutoScaleMode","sap.chart.ColoringType","sap.chart.MessageId","sap.chart.ScaleBehavior","sap.chart.SelectionBehavior","sap.chart.SelectionMode","sap.chart.TimeUnitType"],"controls":["sap.chart.Chart"],"typesWithClasses":["sap.chart.data"],"module":"sap/chart/library","name":"sap.chart","description":"Chart controls based on Vizframe","helpDescription":"Chart controls based on Vizframe","version":"1.74.0"}},"!version":"1.20.0"}