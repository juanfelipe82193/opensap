{"!name":"sap.chart","!version":"1.20.0","!define":{"sap.chart.data.DimensionRoleType":{"!description":"Enum of supported role types for Dimension","category2":{"!description":"If a chart type does not use the feed uid \"categoryAxis2\", then all dimensions with role \"category2\" are treated as dimension with role \"category\" (appended).","!category":"enum","!type":"String"},"!module":"sap/chart/data/DimensionRoleType","series":{"!description":"All dimensions with role \"series\" are assigned to the feed uid \"color\".","!category":"enum","!type":"String"},"!category":"static class","category":{"!description":"All dimensions with role \"category\" are assigned to the feed uid \"categoryAxis\".\n\n<b>NOTE:<\/b> If the chart type requires at least one dimension on the feed \"categoryAxis\" (true for all chart types except pie and donut), but no dimension has the role \"category\" or \"category2\", then the first visible dimension is assigned to the \"categoryAxis\".","!category":"enum","!type":"String"}},"sap.chart.AutoScaleMode":{"!description":"Enumeration for how the analytical chart adapts the value axis to the data.","!module":"sap/chart/AutoScaleMode","DataSet":{"!description":"Minimum and maximum value is calculated from the entire data set in the backend, no matter data can be loaded or not, visible or not.","!category":"enum","!type":"String"},"VisibleData":{"!description":"Minimum and maximum value is calculated from the data that are currently visible. Scrolling will change the scale.","!category":"enum","!type":"String"},"!category":"static class"},"sap.chart.ColoringType":{"!description":"Enum of available colorings.","Emphasis":{"!description":"Emphasis is about highlighting certain data points in a chart.\n\nIt can be defined for dimension values. <pre>\nEmphasis: {\n    DimensionValues: {\n        ...\n    }\n}\n<\/pre> <b>For dimension values<\/b>\n\nHighlight a specified set of values of a dimension visible in the current chart layout. The qualitative color palette is used.\n\n<code>'Values'<\/code> is used to specify dimension value(s) for highlight. <code>'Legend'<\/code> is used to customize legend label whose <code>'Hightlighted'<\/code> is mandatory when multiple dimension values defined in <code>'Values'<\/code>. <pre>\nDimensionValues: {\n    'dimensionName': {\n        Values: 'dimensionValue' or ['dimensionValue', ...],\n        Legend: {\n           Highlighted: string // mandatory for value array\n           Others: string      // optional\n        }\n    },\n    'dimensionName': {\n        ...\n    }\n}\n<\/pre> Example:\n\nIn this case, 'Germany' and 'France' are highlighted in 'Country' dimension with customized legend label 'Europe'. <pre>\nvar oColorings = {\n    Emphasis: {\n        DimensionValues: {\n            Country: {\n                Values: ['Germany', 'France']\n                Legend: 'Europe'\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Emphasis,\n    parameters: {\n        dimension: ['Country']\n    }\n};\n<\/pre>","!category":"enum","!type":"String"},"!module":"sap/chart/ColoringType","Gradation":{"!description":"Gradation introduces the notion of levels to visually separate chart elements by different hues of colors.\n\nGradation coloring is based on predefined color palettes implementing one of the following color schemes:\n\n1. Single-color scheme:\n\nPalette consists of a linear sequence of hues of the same color in increasing or decreasing saturation. Every hue represents a level.\n\n2. Diverging color scheme:\n\nPalette consists of two hues of different colors at the outer ends, and a linear sequence of other color hues between them. Every color hue represents a level. The palette has a central mid area with an own color separating the levels before and after the midpoint.\n\n3. Target color scheme:\n\nPalette consists of two instances of a diverging color scheme palette, where the second is appended at the end of the first with reverse order of hues. Every color hue represents a level. The palette has a central midpoint for the target value positioned between the two palette instances, separating the levels before and after the midpoint.\n\nWhether a gradation can be applied depends on the chart layout. The <code>Colorings.Gradation<\/code> object has the overall structure: <pre>\nGradation: {\n    RankedMeasureValues: { // Only for heatmap charts, if the measure is visible in the chart layout.\n        \u2026\n    },\n    DelineatedMeasures: { // More than one of these measures is visible in the chart layout.\n        \u2026\n    },\n    DelineatedDimensionValues: { // If the dimension is the only visible dimension in the chart layout and has the category role, or if the dimension is the only dimension with the series role.\n        \u2026\n    }\n}\n<\/pre>\n\nThe option for ranked measure values can be specified for one or more measures identified by name: <pre>\nRankedMeasureValues: {\n    'measureName': {\n        SingleColorScheme: {\n            Scheme: string, // enumeration: NoSemantics, Positive, Negative\n            Saturation: string, // enumeration: LightToDark, DarkToLight\n            NumberOfLevels: number, // between 2-6\n            RankingPerAggregationLevel: [\n                {\n                    VisibleDimensions: [ 'dimensionName', \u2026 ],\n                    LevelBoundaries: [ number, \u2026 ] // array with 1-5 numbers\n                },\n                \u2026\n            ]\n        },\n        DivergingColorScheme: {\n            Scheme: string, // enumeration: NoSemantics, PositiveToNegative, NegativeToPositive, ColdToHot, HotToCold\n            NumberOfLevels: {\n                BelowMidArea: number, // between 2-6\n                AboveMidArea: number  // between 2-6\n            },\n            RankingPerAggregationLevel: [\n                {\n                    VisibleDimensions: [ 'dimensionName', \u2026 ],\n                    MidAreaLowValue: number,\n                    MidAreaHighValue: number\n                },\n                \u2026\n            ]\n        },\n        TargetColorScheme: {\n            Scheme: string, // enumeration: PositiveTarget\n            NumberOfLevels: {\n                BelowTargetMidpoint: number, // between 2-6\n                AboveTargetMidpoint: number  // between 2-6\n            },\n            RankingPerAggregationLevel: [\n                {\n                    VisibleDimensions: [ 'dimensionName', \u2026 ],\n                    TargetMidpoint: number\n                },\n                \u2026\n            ]\n        },\n    },\n    'measureName': { \u2026 },\n    ...\n}\n<\/pre>\n\nFor a single color scheme, Scheme names the scheme to be applied. If it is not specified, the default is NoSemantics. The possible values of scheme name are listed in {@link sap.chart.coloring.GradationSingleColorScheme}. If Saturation is not specified, the default is LightToDark. The possible values of saturation are listed in {@link sap.chart.coloring.GradationSaturation}\n\nFor an aggregation level specified by a list of visible dimensions, the level boundary array is a strictly increasing sequence of numbers establishing a series of consecutive value intervals. In case VisibleDimensions is omitted, the level boundaries are applied independent of the aggregation level in the current chart layout.\n\nIf RankingPerAggregationLevel is not provided, the chart will apply a default ranking by determining the minimum and maximum value of the measure in the data set and cutting this value range into equally sized intervals for the requested NumberOfLevels. If NumberOfLevels to be distinguished is not specified, the default is 5 levels.\n\nExample: In this case, the values of 'Age' are ranked as 4 levels following the color scheme 'Positive' from dark to light. <pre>\nvar oColorings = {\n    Gradation: {\n        RankedMeasureValues: {\n            Age: {\n                 SingleColorScheme : {\n                     Scheme: 'Positive',\n                     Saturation: 'DarkToLight',\n                     RankingPerAggregationLevel: [\n                         {\n                             VisibleDimensions: [\"Name\"],\n                             LevelBoundaries: [20, 25, 28]\n                         }\n                     ]\n                 }\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>\n\nFor a diverging color scheme, Scheme names the scheme to be applied. If it is not specified, the default is NoSemantics. The possible values of scheme name are listed in {@link sap.chart.coloring.GradationDivergingColorScheme}.\n\nA diverging color scheme circles around a mid area represented by a level on its own. Therefore, two level counts are to be specified, one for the range of values below the mid area, and another for the range above the mid area.\n\nFor an aggregation level specified by a list of visible dimensions, the boundary values for the mid area must be specified in MidAreaLowValue and MidAreaHighValue. If both values are equal, the mid area collapses into a single point and the mid area level vanishes.\n\nThe chart determines the minimum and maximum values from the data set. To cut the value range before the mid area into the specified number of levels NumberOfLevels.BelowMidArea, the value interval from the MidAreaLowValue down to the minimum value is divided into as many equally sized intervals. In the same way, the value interval above the mid area is cut into the specified number of levels NumberOfLevels.AboveMidArea above the mid area using the determined maximum value.\n\nIn case VisibleDimensions is omitted, this ranking becomes the default and is applied independent of the aggregation level in the current chart layout. Further entries in RankingPerAggregationLevel must then include VisibleDimensions and are used to describe exceptions from the default ranking for the specified aggregation level.\n\nExample: In this case, the values of 'Age' are ranked as 7 levels with a mid area [22, 27] following the color scheme 'PositiveToNegative'. <pre>\nvar oColorings = {\n    Gradation: {\n        RankedMeasureValues: {\n            Age: {\n                 DivergingColorScheme : {\n                     Scheme: 'PositiveToNegative',\n                     NumberOfLevels: {\n                         BelowMidArea: 3,\n                         AboveMidArea: 3\n                     },\n                     RankingPerAggregationLevel: [\n                         {\n                             VisibleDimensions: [\"Name\"],\n                             MidAreaLowValue: 22,\n                             MidAreaHighValue: 27\n                         }\n                     ]\n                 }\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>\n\nFor a target color scheme, Scheme names the scheme to be applied. If it is not specified, the default is PositiveTarget. The possible values of scheme name are listed in {@link sap.chart.coloring.GradationTargetColorScheme}.\n\nFor an aggregation level specified by a list of visible dimensions, the measure value to be used as target midpoint must be specified in TargetMidpoint.\n\nThe chart determines the minimum and maximum values from the data set. To cut the value range before the target midpoint into the specified number of levels NumberOfLevels.BelowTargetMidPoint, the value interval from the TargetMidpoint down to the minimum value is divided into as many equally sized intervals. In the same way, the value interval above the midpoint is cut into the specified number of levels NumberOfLevels.AboveTargetMidPoint above the midpoint using the determined maximum value.\n\nIn case VisibleDimensions is omitted, the midpoint is applied independent of the aggregation level in the current chart layout. Further entries in RankingPerAggregationLevel must then include VisibleDimensions and are used to describe exceptions from the general midpoint for the specified aggregation level.\n\nExample: In this case, the values of 'Age' are ranked as 12 levels with a target mid point following the color scheme 'PositiveTarget'. <pre>\nvar oColorings = {\n    Gradation: {\n        RankedMeasureValues: {\n            Age: {\n                 TargetColorScheme : {\n                     Scheme: 'PositiveTarget',\n                     NumberOfLevels: {\n                         BelowTargetMidpoint: 6,\n                         AboveTargetMidpoint: 6\n                     },\n                     RankingPerAggregationLevel: [\n                         {\n                             VisibleDimensions: [\"Name\"],\n                             TargetMidpoint: 25\n                         }\n                     ]\n                 }\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>\n\nIf no gradation has been specified for a measure (meaning: neither a single nor a diverging color nor a target scheme), then the ranked measure values option still can be applied via activeColoring. In this case, the default is a single-color scheme with defaults applied to all its component as described above.\n\nThe option for delineated measures maps (between two and six) measures identified by name to gradation levels, with increasing index numbers. It shall be applied only if the measures visible in the chart are a subset of those specified here: <pre>\nDelineatedMeasures: {\n    SingleColorScheme: string, // enumeration of schemes-see above\n    Saturation: string, // enumeration: LightToDark, DarkToLight\n    Levels: [ 'measureName', \u2026 ] // between 2-6 members\n}\n<\/pre>\n\nIf the color scheme is not specified, the default is NoSemantic. If Saturation is not specified, the default is LightToDark.\n\nIf delineated measure gradation is to be shown, and if the chart layout contains further visible measures not mentioned in the delineated measure configuration, then gradation coloring must not be applied.\n\nExample: In this case, the value of 'Win', 'Draw' and 'Lose' are shown in 3 color levels. <pre>\nvar oColorings = {\n    Gradation: {\n        DelineatedMeasures: {\n            SingleColorScheme: 'PositiveTarget',\n            Saturation: 'DarkToLight',\n            Levels: ['Win', 'Draw', 'Lose']\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>\n\nThe option for delineated dimension values can map (between two and six) dimension values to gradation levels, with increasing index numbers. It shall be applied only if the data set to be visualized contains no dimension values other than those specified. <pre>\nDelineatedDimensionValues: {\n    SingleColorScheme: string, // enumeration of schemes-see above\n    Saturation: string, // enumeration: LightToDark, DarkToLight\n    'dimensionName': {\n        Levels: [ 'dimensionValue', \u2026 ] // between 2-6 members\n    },\n    'dimensionName': {...},\n    ...\n}\n<\/pre>\n\nIf color scheme is not specified, the default is NoSemantic. If Saturation is not specified, the default is LightToDark.\n\nIf delineated dimension value gradation is to be shown, and the \u201cdata\u201d model contains dimension values not mentioned in the configuration, then gradation coloring must not be applied.\n\nExample: In this case, the measures mapping to the dimension value 'Injured', 'Normal', 'Superb' and 'Tired' are shown in 4 color levels. <pre>\nvar oColorings = {\n    Gradation: {\n        DelineatedDimensionValues: {\n            SingleColorScheme: 'PositiveTarget',\n            Saturation: 'DarkToLight',\n            Fitness: {\n                Levels: ['Injured', 'Normal', 'Superb', 'Tired']\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Gradation\n};\n<\/pre>","!category":"enum","!type":"String"},"!category":"static class","Criticality":{"!description":"Criticality is based on the semantic color palette.\n\nIt can be defined for measure values and dimension values. <pre>\nCriticality: {\n    MeasureValues: {\n        ...\n    },\n    DimensionValues: {\n        ...\n    }\n}\n<\/pre>\n\n<b>For measure values<\/b>, criticality can be based on <code>static<\/code>, <code>calculated<\/code>, <code>DynamicThresholds<\/code> and <code>ConstantThresholds<\/code>\n\n<code>Legend<\/code> is <b>optional<\/b> and can be used for custom legend labels. <pre>\nMeasureValues: {\n    'measureName': {\n        Static: ... ,\n        Calculated: ... ,\n        DynamicThresholds: {\n            ...\n        },\n        ConstantThresholds: {\n            ...\n        },\n        Legend: {\n            Title: string,    // (optional) fixed, localized label\n            Positive: string, // fixed, localized label\n            Critical: string, // fixed, localized label\n            Negative: string, // fixed, localized label\n            Neutral:  string  // fixed, localized label\n        }\n    },\n    'measureName': {\n        ...\n    }\n}\n<\/pre> <ul> <li><code>static<\/code>\n\nIt indicates that the measure is always considered in the same way, for example positive.\n\nThe value of <code>static<\/code> is listed in {@link sap.chart.coloring.CriticalityType}\n\nExample:\n\nIn this case, all 'Profit' datapoints shall use Positive semantic color and all 'Revenue' datapoints shall use Negative semantic color. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                  Static: sap.chart.ColoringType.Positive\n              },\n              Revenue: {\n                  Static: sap.chart.ColoringType.Negative\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit', 'Revenue']\n      }\n  };\n  <\/pre> <\/li> <li><code>Calculated<\/code>\n\nCriticality is calculated by the backend service.\n\nFor a <code>Calculated<\/code> criticality, the value will be determined from a property contained in the model of the \u201cdata\u201d aggregation. Since the calculation must always take the currently visible dimensions into account, this property will be a measure holding an aggregated criticality for the current aggregation level. The concrete possible values held by this property are defined in {@link sap.chart.coloring.CriticalityType}: Neutral = 0, Negative = 1, Critical = 2, Positive =3.\n\nIf Legend is present, the legend shows the title and the fixed, localized texts defined for the different criticality classes. Otherwise, the chart uses the default texts \u201cGood\u201d, \u201cWarning\u201d, \u201cBad\u201d, and \u201cNeutral\u201d as localized labels in the legend.\n\nIf the value of <code>Calculated<\/code> is a dimension name. The criticality of the measure of a datapoint is determined by the value of this dimension and its textProperty(if exists) will be used as legend label.\n\nThe possible values of this certain dimension are listed in {@link sap.chart.coloring.CriticalityType}.\n\nExample:\n\nIn this case, the criticality of 'Profit' measure is determined by the value of 'ProfitCriticality' dimension which is calculated by backend service. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                  Calculated: 'ProfitCriticality'\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit']\n      }\n  };\n  <\/pre>\n\nIn this case, the criticality of 'Profit' measure is determined by the value of 'ProfitCriticalityM' measure which is calculated by backend service. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                  Calculated: 'ProfitCriticalityM',\n                  Legend: {\n                      Title: \"Legend Title\",\n                      Positive: \"Good\",\n                      Negative: \"Weak\",\n                      Critical: \"Soso\",\n                      Neutral: \"Crossbench\"\n                  }\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit']\n      }\n  };\n  <\/pre> <\/li> <li><code>DynamicThresholds<\/code>\n\nCriticality is expressed with thresholds for the boundaries between negative, critical, neutral, and positive.\n\nThe direction of improvement for measure values is mandatory, combined with corresponding thresholds.\n\nThresholds are optional. For unassigned values, defaults are determined in this order:\n\n- For DeviationRange, an omitted LowValue translates into the smallest possible number (-INF), an omitted HighValue translates into the largest possible number (+INF)\n\n- For ToleranceRange, an omitted LowValue will be initialized with DeviationRangeLowValue, an omitted HighValue will be initialized with DeviationRangeHighValue\n\n- For AcceptanceRange, an omitted LowValue will be initialized with ToleranceRangeLowValue, an omitted HighValue will be initialized with ToleranceRangeHighValue\n\nPlease refer to {@link sap.chart.coloring.ImprovementDirectionType} for detailed usage. <pre>\n  DynamicThresholds: {\n      ImprovementDirection: string,    // refer to sap.chart.coloring.ImprovementDirectionType for detailed definition\n      AcceptanceRangeLowValue: string or number, // property name or number\n      AcceptanceRangeHighValue: string or number, // property name or number\n      ToleranceRangeLowValue: string or number, // property name or number\n      ToleranceRangeHighValue: string or number, // property name or number\n      DeviationRangeLowValue: string or number, // property name or number\n      DeviationRangeHighValue: string or number, // property name or number\n  }\n  <\/pre> Example:\n\nIn this case, the criticality of 'Profit' measure is determined by the value of 'ProfitAcceptanceRangeLowValue', 'ProfitToleranceRangeLowValue' and 'ProfitDeviationRangeLowValue' measure calculated with improvement direction <code>'Maximize'<\/code>. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                   DynamicThresholds : {\n                       ImprovementDirection: sap.chart.coloring.ImprovementDirectionType.Maximize,\n                       AcceptanceRangeLowValue: 'ProfitAcceptanceRangeLowValue',\n                       ToleranceRangeLowValue: 'ProfitToleranceRangeLowValue',\n                       DeviationRangeLowValue: 'ProfitDeviationRangeLowValue'\n                   }\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit']\n      }\n  };\n  <\/pre> <\/li> <li><code>ConstantThresholds<\/code>\n\nCriticality is expressed with thresholds for the boundaries between negative, critical, neutral, and positive.\n\nThe direction of improvement for measure values is mandatory, combined with corresponding thresholds.\n\nThresholds are optional. For unassigned values, defaults are determined in this order:\n\n- For DeviationRange, an omitted LowValue translates into the smallest possible number (-INF), an omitted HighValue translates into the largest possible number (+INF)\n\n- For ToleranceRange, an omitted LowValue will be initialized with DeviationRangeLowValue, an omitted HighValue will be initialized with DeviationRangeHighValue\n\n- For AcceptanceRange, an omitted LowValue will be initialized with ToleranceRangeLowValue, an omitted HighValue will be initialized with ToleranceRangeHighValue\n\nAlso Aggregation level (the visible dimensions) must be specified for providing the context for assessing the criticality.\n\nLegend label is shown as value range and do not support customization in ConstantThresholds.\n\nPlease refer to {@link sap.chart.coloring.ImprovementDirectionType} for detailed usage. <pre>\n  ConstantThresholds: {\n      ImprovementDirection: string, refer to sap.chart.coloring.ImprovementDirectionType for detailed definition\n      AggregationLevels: [{\n           VisibleDimensions: ['dimensionName', ...],\n           AcceptanceRangeLowValue: Number,\n           AcceptanceRangeHighValue:Number,\n           ToleranceRangeLowValue: Number,\n           ToleranceRangeHighValue: Number,\n           DeviationRangeLowValue: Number,\n           DeviationRangeHighValue: Number\n      },\n      ...]\n  }\n  <\/pre> Example:\n\nIn this case, the criticality of 'Profit' measure is determined by two concrete thresholds calculated with improvement direction <code>'Maximize'<\/code>. <pre>\n  var oColorings = {\n      Criticality: {\n          MeasureValues: {\n              Profit: {\n                   ConstantThresholds : {\n                       ImprovementDirection: sap.chart.coloring.ImprovementDirectionType.Maximize,\n                       AcceptanceRangeLowValue:100,\n                       ToleranceRangeLowValue: 80,\n                       DeviationRangeLowValue: 60\n                   }\n              }\n          }\n      }\n  };\n  var oActiveColoring = {\n      coloring: sap.chart.ColoringType.Criticality,\n      parameters: {\n          measure: ['Profit']\n      }\n  };\n  <\/pre> <\/li> <\/ul>\n\n<b>For dimension values<\/b>\n\nCriticality can be expressed by assigning values to negative, critical, and positive. Unassigned dimension values are automatically assigned to neutral.\n\n<code>'Values'<\/code> is used to specify concrete dimension value(s). <code>'Legend'<\/code> is used to customize legend label which is mandatory when multiple dimension values defined in <code>'Values'<\/code>.\n\n<pre>\nDimensionValues: {\n    'dimensionName': {\n         Positive: {\n             Values: 'dimensionValue' or ['dimensionValue', ...]\n             Legend: string // mandatory for value array\n         },\n         Critical: {\n             Values: 'dimensionValue' or ['dimensionValue', ...]\n             Legend: string // mandatory for value array\n         },\n         Negative: {\n             Values: 'dimensionValue' or ['dimensionValue', ...]\n             Legend: string // mandatory for value array\n         },\n         Neutral: {\n             Values: 'dimensionValue' or ['dimensionValue', ...]\n             Legend: string // mandatory for value array\n         }\n    },\n    'dimensionName': {\n        ...\n    }\n}\n<\/pre> Example:\n\nIn this case, the criticality of 'OrderStatus' dimension is determined by values specified to different criticality classes. <pre>\nvar oColorings = {\n    Criticality: {\n        DimensionValues: {\n            OrderStatus: {\n                 Positive : {\n                     Values: 'Finished'\n                 },\n                 Critical : {\n                     Values: 'Pending'\n                 },\n                 Negative : {\n                     Values: ['Stopped', 'Not Started'],\n                     Legend: 'Alert'\n                 },\n                 Neutral : {\n                     Values: ['Processing', 'Surveyed'],\n                     Legend: 'Normal'\n                 }\n            }\n        }\n    }\n};\nvar oActiveColoring = {\n    coloring: sap.chart.ColoringType.Criticality,\n    parameters: {\n        dimension: ['OrderStatus']\n    }\n};\n<\/pre>","!category":"enum","!type":"String"}},"sap.chart.coloring.ImprovementDirectionType":{"!description":"Enumeration for supported ImprovementDirection types in analytical chart","Target":{"!description":"Closer to the target is better.\n\nPositive if the value is greater than or equal to <code>AcceptanceRangeLowValue<\/code> and lower than or equal to <code>AcceptanceRangeHighValue<\/code>.\n\nNeutral if the value is greater than or equal to <code>ToleranceRangeLowValue<\/code> and lower than <code>AcceptanceRangeLowValue<\/code> OR greater than <code>AcceptanceRangeHighValue<\/code> and lower than or equal to <code>ToleranceRangeHighValue<\/code>.\n\nCritical if the value is greater than or equal to <code>DeviationRangeLowValue<\/code> and lower than <code>ToleranceRangeLowValue<\/code> OR greater than <code>ToleranceRangeHighValue<\/code> and lower than or equal to <code>DeviationRangeHighValue<\/code>.\n\nNegative if the value is lower than <code>DeviationRangeLowValue<\/code> or greater than <code>DeviationRangeHighValue<\/code>.","!category":"enum","!type":"String"},"!module":"sap/chart/library","Minimize":{"!description":"Lower is better.\n\nPositive if the value is lower than or equal to <code>AcceptanceRangeHighValue<\/code>.\n\nNeutral if the value is greater than <code>AcceptanceRangeHighValue<\/code> and lower than or equal to <code>ToleranceRangeHighValue<\/code>.\n\nCritical if the value is greater than <code>ToleranceRangeHighValue<\/code> and lower than or equal to <code>DeviationRangeHighValue<\/code>.\n\nNegative if the value is greater than <code>DeviationRangeHighValue<\/code>.","!category":"enum","!type":"String"},"!category":"static class","Maximize":{"!description":"Higher is better.\n\nPositive if the value is greater than or equal to <code>AcceptanceRangeLowValue<\/code>.\n\nNeutral if the value is lower than <code>AcceptanceRangeLowValue<\/code> and greater than or equal to <code>ToleranceRangeLowValue<\/code>.\n\nCritical if the value is lower than <code>ToleranceRangeLowValue<\/code> and greater than or equal to <code>DeviationRangeLowValue<\/code>.\n\nNegative if the value is lower than <code>DeviationRangeLowValue<\/code>.","!category":"enum","!type":"String"}},"sap.chart.data":{"textFormatter":{"!description":"Function returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension. Dimension key value and the corresponding text will be passed to the supplied function as parameters.","!category":"enum","!type":"fn()"},"role":{"!description":"How the Dimension will influence the chart layout. Possible values are {@link sap.chart.data.DimensionRoleType category}, {@link sap.chart.data.DimensionRoleType series} or {@link sap.chart.data.DimensionRoleType category2}. The default is {@link sap.chart.data.DimensionRoleType category}.\n\nYou can create a new dimension as follow: <pre>\n...\nnew sap.chart.data.Dimension({name: \"DIMENSION1\", role: sap.chart.data.DimensionRoleType.category})\n...\n<\/pre>\n\nDetailed usage of dimension role. Please refer to {@link sap.chart.data.DimensionRoleType DimensionRoleType}\n\n<b>NOTE:<\/b> Has no effect if the Dimension is used as inResultDimensions by Chart","!category":"enum","!type":"String"},"HierarchyDimension":"sap.chart.data.HierarchyDimension_obj","!category":"namespace","DimensionRoleType":"sap.chart.data.DimensionRoleType","semantics":{"!description":"The semantics of the measure.\n\n<b>NOTE:<\/b> Dimension-based coloring (see {@link sap.chart.Chart#setColorings}) does not work when semantics is set to {@link sap.chart.data.MeasureSemantics.Projected} or {@link sap.chart.data.MeasureSemantics.Reference} for visible measure(s).\n\n<b>NOTE:<\/b> In Bullet chart measure defined as \"Reference\" maps to targetValues and \"Projected\" maps to additionalValues. Measures without definition will be recognized as actualValues.","!category":"enum","!type":"sap.chart.data.MeasureSemantics"},"MeasureRoleType":"sap.chart.data.MeasureRoleType","unitBinding":{"!description":"Unit for the measure, a pointer using the binding syntax to some field containing the unit. Value of the given field from the same data record will be displayed after formatted measure value in data label, tooltip and chart popover. NOTE: If the unit field is not set as visible dimension in chart, or more than one unit value exists for any visible dimension value combination, it will be rendered in the chart as well but with different layout when the field is set as visible dimension..","!category":"enum","!type":"String"},"semanticallyRelatedMeasures":{"!description":"Semantically related measures for a measure with semantics \"actual\" value. It is an object with two properties: <ol> <li>\"projectedValueMeasure\" identifing the projected value measure, and<\/li> <li>\"referenceValueMeasure\" identifing the reference value measure.<\/li> <\/ol>","!category":"enum","!type":"Object"},"Measure":"sap.chart.data.Measure_obj","TimeDimension":"sap.chart.data.TimeDimension_obj","analyticalInfo":{"!description":"The analytical extra information","!category":"enum","!type":"Object"},"timeUnit":{"!description":"Detailed unit infomation of TimeDimension. Please refer to {@link sap.chart.TimeUnitType TimeUnitType}.","!category":"enum","!type":"sap.chart.TimeUnitType"},"!description":"Package with additional chart data APIs","displayText":{"!description":"Whether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.","!category":"enum","!type":"Boolean"},"projectedValueStartTime":{"!description":"A time value (aligned with 'timeUnit') to indicate the start point of projected values.","!category":"enum","!type":"Object"},"level":{"!description":"Level restriction to be applied to this hierarchy dimension. NOTE: Setting this property will cause initialization of drill stack. Getter of this property just returns level explicitly set by user, call {@link sap.chart.Chart#getDrillStack} and refer to 'hierarchylevel' if you need current level after drilling","!category":"enum","!type":"Number"},"valueFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Please use {@link sap.chart.Chart#setVizProperties} to set related formatStrings instead.<br>A (core UI5) format pattern to be used by the formatter to format the measure value.","!category":"enum","!type":"String"},"fiscalYearPeriodCount":{"!description":"Detailed fiscalYearPeriodCount of TimeDimension. It contains period numbers of fiscal years, like <pre>\n{\n\t default: 12,\n\t deviations: {\n\t \t \"2012\": 10,\n\t \t \"2013\": 16\n\t }\n}\n<\/pre>","!category":"enum","!type":"Object"},"Dimension":"sap.chart.data.Dimension_obj","label":{"!description":"Label for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","!category":"enum","!type":"String"},"textProperty":{"!description":"Text for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","!category":"enum","!type":"String"},"!module":"sap/chart/library","!helpDescription":"Package with additional chart data APIs","name":{"!description":"Property in the \"data\" model holding the (always unique) Dimension key.","!category":"enum","!type":"String"},"MeasureSemantics":"sap.chart.data.MeasureSemantics"},"sap.chart.Chart_obj":{"extend":{"!description":"Creates a new subclass of class sap.chart.Chart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.viz.ui5.controls.common.BaseControl.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.chart.Chart"},"sap.chart.data.HierarchyDimension":{"!description":"Definition of a single hierarchy dimension in a chart","extend":{"!description":"Creates a new subclass of class sap.chart.data.HierarchyDimension with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.chart.data.Dimension.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getLevel":{"!description":"Gets current value of property {@link #getLevel level}.\n\nLevel restriction to be applied to this hierarchy dimension. NOTE: Setting this property will cause initialization of drill stack. Getter of this property just returns level explicitly set by user, call {@link sap.chart.Chart#getDrillStack} and refer to 'hierarchylevel' if you need current level after drilling\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getMetadata":{"!description":"Returns a metadata object for class sap.chart.data.HierarchyDimension.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ui5/data/HierarchyDimension.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLevel level} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.chart.data.Dimension#constructor sap.chart.data.Dimension}\ncan be used as well.","!module":"sap/chart/data/HierarchyDimension","!helpDescription":"Definition of a single hierarchy dimension in a chart","!proto":"sap.chart.data.Dimension","!category":"class","setLevel":{"!description":"Sets a new value for property {@link #getLevel level}.\n\nLevel restriction to be applied to this hierarchy dimension. NOTE: Setting this property will cause initialization of drill stack. Getter of this property just returns level explicitly set by user, call {@link sap.chart.Chart#getDrillStack} and refer to 'hierarchylevel' if you need current level after drilling\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iLevel: Number) -> sap.chart.data.HierarchyDimension","parameters":{"iLevel":"type: int, description: New value for property <code>level<\/code>"}}},"sap.chart.data.Measure":{"!description":"Definition of a single measure in a chart\n\n<table border=\"1\"> <tr> <th>chartType<\/th> <th>binding rules<\/th> <\/tr> <tr> <td>pie, donut<\/td> <td>The measure is assigned to feed uid \u201csize\u201d.<\/td> <\/tr> <tr> <td>scatter<\/td> <td>The first measure with role \u201caxis1\u201d, or (if not exists) the first measure with role \u201caxis2\u201d or (if not exist) with role \u201caxis3\u201d, is assigned to the feed uid \u201cvalueAxis\u201d. The other measure is assigned to feed uid \u201cvalueAxis2\u201d.<\/td> <\/tr> <tr> <td>bubble<\/td> <td>The first measure with role \u201caxis1\u201d, or (if not exists) the first measure with role \u201caxis2\u201d or (if not exist) with role \u201caxis3\u201d, is assigned to the feed uid \u201cvalueAxis\u201d. <br>The first measure with role \u201caxis2\u201d, or (if not exists) the second measure with role \u201caxis1\u201d or (if not exist) the first measure with role \u201caxis3\u201d, is assigned to the feed uid \u201cvalueAxis2\u201d. <br>The remaining measure is assigned to feed uid \u201cbubbleWidth\u201d. <\/td> <\/tr> <tr> <td>heatmap<\/td> <td>The measure is assigned to the feed uid \u201ccolor\u201d.<\/td> <\/tr> <tr> <td>treemap<\/td> <td>The first measure with role \u201caxis1\u201d, or (if not exists) the first measure with role \u201caxis2\u201d or (if not exist) with role \u201caxis3\u201d, is assigned to the feed uid \u201ccolor\u201d. The other measure is assigned to feed uid \u201cweight\u201d.<\/td> <\/tr> <tr> <td>..dual..<\/td> <td>At least one measure is assigned to each of the feed uids \u201cvalueAxis\u201d and \u201cvalueAxis2\u201d, according to the general rule.<\/td> <\/tr> <\/table>","setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nProperty in the \"data\" model holding the raw measure value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.chart.data.Measure","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.chart.data.Measure.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getUnitBinding":{"!description":"Gets current value of property {@link #getUnitBinding unitBinding}.\n\nUnit for the measure, a pointer using the binding syntax to some field containing the unit. Value of the given field from the same data record will be displayed after formatted measure value in data label, tooltip and chart popover. NOTE: If the unit field is not set as visible dimension in chart, or more than one unit value exists for any visible dimension value combination, it will be rendered in the chart as well but with different layout when the field is set as visible dimension..","!static":false,"!category":"function","!type":"fn() -> String"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nLabel for the Measure, either as a string literal or by a pointer using the binding syntax to some property containing the label.","!static":false,"!category":"function","!type":"fn() -> String"},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nProperty in the \"data\" model holding the raw measure value.","!static":false,"!category":"function","!type":"fn() -> String"},"setSemanticallyRelatedMeasures":{"!description":"Sets a new value for property {@link #getSemanticallyRelatedMeasures semanticallyRelatedMeasures}.\n\nSemantically related measures for a measure with semantics \"actual\" value. It is an object with two properties: <ol> <li>\"projectedValueMeasure\" identifing the projected value measure, and<\/li> <li>\"referenceValueMeasure\" identifing the reference value measure.<\/li> <\/ol>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSemanticallyRelatedMeasures: Object) -> sap.chart.data.Measure","parameters":{"oSemanticallyRelatedMeasures":"type: object, description: New value for property <code>semanticallyRelatedMeasures<\/code>"}},"getSemantics":{"!description":"Gets current value of property {@link #getSemantics semantics}.\n\nThe semantics of the measure.\n\n<b>NOTE:<\/b> Dimension-based coloring (see {@link sap.chart.Chart#setColorings}) does not work when semantics is set to {@link sap.chart.data.MeasureSemantics.Projected} or {@link sap.chart.data.MeasureSemantics.Reference} for visible measure(s).\n\n<b>NOTE:<\/b> In Bullet chart measure defined as \"Reference\" maps to targetValues and \"Projected\" maps to additionalValues. Measures without definition will be recognized as actualValues.\n\nDefault value is <code>Actual<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.chart.data.MeasureSemantics"},"getValueFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Please use {@link sap.chart.Chart#setVizProperties} to set related formatStrings instead.<br>Gets current value of property {@link #getValueFormat valueFormat}.\n\nA (core UI5) format pattern to be used by the formatter to format the measure value.","!static":false,"!category":"function","!type":"fn() -> String"},"getSemanticallyRelatedMeasures":{"!description":"Gets current value of property {@link #getSemanticallyRelatedMeasures semanticallyRelatedMeasures}.\n\nSemantically related measures for a measure with semantics \"actual\" value. It is an object with two properties: <ol> <li>\"projectedValueMeasure\" identifing the projected value measure, and<\/li> <li>\"referenceValueMeasure\" identifing the reference value measure.<\/li> <\/ol>","!static":false,"!category":"function","!type":"fn() -> Object"},"!proto":"sap.ui.core.Element","getRole":{"!description":"Gets current value of property {@link #getRole role}.\n\nHow values of Measure will be rendered in the chart. Possible role values are {@link sap.chart.data.MeasureRoleType axis1}, {@link sap.chart.data.MeasureRoleType axis2}, {@link sap.chart.data.MeasureRoleType axis3}, and {@link sap.chart.data.MeasureRoleType axis4}. The default is {@link sap.chart.data.MeasureRoleType axis1}. They correspond to the well-known concepts of axis identifiers in the Cartesian coordinate system, e.g. a Y-axis in a bar/column/line chart, an X- and a Y-axis in a scatter chart, or two Y-axes in bar charts, and an optional third axis for the weight/size/intensity/temperature of a data point.\n\nYou can create a new measure as follow: <pre>\n...\nnew sap.chart.data.Measure({name: \"MEASURE1\", role: sap.chart.data.MeasureRoleType.axis1})\n...\n<\/pre>\n\nDetailed usage of measure role. Please refer to {@link sap.chart.data.MeasureRoleType MeasureRoleType}\n\n<b>NOTE:<\/b> Role definition would not work for Bullet Chart and users need to set semantics instead.\n\nDefault value is <code>axis1<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","getAnalyticalInfo":{"!description":"Gets current value of property {@link #getAnalyticalInfo analyticalInfo}.\n\nThe analytical extra information","!static":false,"!category":"function","!type":"fn() -> Object"},"setSemantics":{"!description":"Sets a new value for property {@link #getSemantics semantics}.\n\nThe semantics of the measure.\n\n<b>NOTE:<\/b> Dimension-based coloring (see {@link sap.chart.Chart#setColorings}) does not work when semantics is set to {@link sap.chart.data.MeasureSemantics.Projected} or {@link sap.chart.data.MeasureSemantics.Reference} for visible measure(s).\n\n<b>NOTE:<\/b> In Bullet chart measure defined as \"Reference\" maps to targetValues and \"Projected\" maps to additionalValues. Measures without definition will be recognized as actualValues.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Actual<\/code>.","!static":false,"!category":"function","!type":"fn(sSemantics: sap.chart.data.MeasureSemantics) -> sap.chart.data.Measure","parameters":{"sSemantics":"type: sap.chart.data.MeasureSemantics, description: New value for property <code>semantics<\/code>"}},"setAnalyticalInfo":{"!description":"Sets a new value for property {@link #getAnalyticalInfo analyticalInfo}.\n\nThe analytical extra information\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oAnalyticalInfo: Object) -> sap.chart.data.Measure","parameters":{"oAnalyticalInfo":"type: object, description: New value for property <code>analyticalInfo<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.chart.data.Measure with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setUnitBinding":{"!description":"Sets a new value for property {@link #getUnitBinding unitBinding}.\n\nUnit for the measure, a pointer using the binding syntax to some field containing the unit. Value of the given field from the same data record will be displayed after formatted measure value in data label, tooltip and chart popover. NOTE: If the unit field is not set as visible dimension in chart, or more than one unit value exists for any visible dimension value combination, it will be rendered in the chart as well but with different layout when the field is set as visible dimension..\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUnitBinding: String) -> sap.chart.data.Measure","parameters":{"sUnitBinding":"type: string, description: New value for property <code>unitBinding<\/code>"}},"!constructorDescription":"Constructor for a new ui5/data/Measure.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getUnitBinding unitBinding} : string<\/li>\n<li>{@link #getValueFormat valueFormat} : string<\/li>\n<li>{@link #getRole role} : string (default: axis1)<\/li>\n<li>{@link #getSemantics semantics} : sap.chart.data.MeasureSemantics (default: Actual)<\/li>\n<li>{@link #getSemanticallyRelatedMeasures semanticallyRelatedMeasures} : object<\/li>\n<li>{@link #getAnalyticalInfo analyticalInfo} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/chart/data/Measure","!helpDescription":"Definition of a single measure in a chart\n\n<table border=\"1\"> <tr> <th>chartType<\/th> <th>binding rules<\/th> <\/tr> <tr> <td>pie, donut<\/td> <td>The measure is assigned to feed uid \u201csize\u201d.<\/td> <\/tr> <tr> <td>scatter<\/td> <td>The first measure with role \u201caxis1\u201d, or (if not exists) the first measure with role \u201caxis2\u201d or (if not exist) with role \u201caxis3\u201d, is assigned to the feed uid \u201cvalueAxis\u201d. The other measure is assigned to feed uid \u201cvalueAxis2\u201d.<\/td> <\/tr> <tr> <td>bubble<\/td> <td>The first measure with role \u201caxis1\u201d, or (if not exists) the first measure with role \u201caxis2\u201d or (if not exist) with role \u201caxis3\u201d, is assigned to the feed uid \u201cvalueAxis\u201d. <br>The first measure with role \u201caxis2\u201d, or (if not exists) the second measure with role \u201caxis1\u201d or (if not exist) the first measure with role \u201caxis3\u201d, is assigned to the feed uid \u201cvalueAxis2\u201d. <br>The remaining measure is assigned to feed uid \u201cbubbleWidth\u201d. <\/td> <\/tr> <tr> <td>heatmap<\/td> <td>The measure is assigned to the feed uid \u201ccolor\u201d.<\/td> <\/tr> <tr> <td>treemap<\/td> <td>The first measure with role \u201caxis1\u201d, or (if not exists) the first measure with role \u201caxis2\u201d or (if not exist) with role \u201caxis3\u201d, is assigned to the feed uid \u201ccolor\u201d. The other measure is assigned to feed uid \u201cweight\u201d.<\/td> <\/tr> <tr> <td>..dual..<\/td> <td>At least one measure is assigned to each of the feed uids \u201cvalueAxis\u201d and \u201cvalueAxis2\u201d, according to the general rule.<\/td> <\/tr> <\/table>","setRole":{"!description":"Sets a new value for property {@link #getRole role}.\n\nHow values of Measure will be rendered in the chart. Possible role values are {@link sap.chart.data.MeasureRoleType axis1}, {@link sap.chart.data.MeasureRoleType axis2}, {@link sap.chart.data.MeasureRoleType axis3}, and {@link sap.chart.data.MeasureRoleType axis4}. The default is {@link sap.chart.data.MeasureRoleType axis1}. They correspond to the well-known concepts of axis identifiers in the Cartesian coordinate system, e.g. a Y-axis in a bar/column/line chart, an X- and a Y-axis in a scatter chart, or two Y-axes in bar charts, and an optional third axis for the weight/size/intensity/temperature of a data point.\n\nYou can create a new measure as follow: <pre>\n...\nnew sap.chart.data.Measure({name: \"MEASURE1\", role: sap.chart.data.MeasureRoleType.axis1})\n...\n<\/pre>\n\nDetailed usage of measure role. Please refer to {@link sap.chart.data.MeasureRoleType MeasureRoleType}\n\n<b>NOTE:<\/b> Role definition would not work for Bullet Chart and users need to set semantics instead.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>axis1<\/code>.","!static":false,"!category":"function","!type":"fn(sRole: String) -> sap.chart.data.Measure","parameters":{"sRole":"type: string, description: New value for property <code>role<\/code>"}},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nLabel for the Measure, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.chart.data.Measure","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"setValueFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Please use {@link sap.chart.Chart#setVizProperties} to set related formatStrings instead.<br>Sets a new value for property {@link #getValueFormat valueFormat}.\n\nA (core UI5) format pattern to be used by the formatter to format the measure value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValueFormat: String) -> sap.chart.data.Measure","parameters":{"sValueFormat":"type: string, description: New value for property <code>valueFormat<\/code>"}}},"sap.chart.coloring.GradationSaturation":{"!description":"Enumeration for supported Gradation color saturation in analytical chart","!module":"sap/chart/library","DarkToLight":{"!description":"DarkToLight","!category":"enum","!type":"String"},"!category":"static class","LightToDark":{"!description":"LightToDark","!category":"enum","!type":"String"}},"sap.chart.data.Dimension":{"!description":"Definition of a single dimension in a chart\n\n<table border=\"1\"> <tr> <th>chartType<\/th> <th>binding rules<\/th> <\/tr> <tr> <td>pie, donut<\/td> <td>All dimensions are assigned to feed uid \u201ccolor\u201d.<\/td> <\/tr> <tr> <td>scatter, bubble<\/td> <td>All dimensions with role category are assigned to feed uid \u201cshape\u201d.<\/td> <\/tr> <tr> <td>heatmap<\/td> <td>All dimensions with role \u201cseries\u201d and \u201ccategory2\u201d are assigned to the feed uid \u201ccategoryAxis2\u201d.<\/td> <\/tr> <tr> <td>treemap<\/td> <td>All dimensions are assigned to the feed uid \u201ccategoryAxis\u201d in the default sequence.<\/td> <\/tr> <\/table>","setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nProperty in the \"data\" model holding the (always unique) Dimension key.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.chart.data.Dimension","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.chart.data.Dimension.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nLabel for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","!static":false,"!category":"function","!type":"fn() -> String"},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nProperty in the \"data\" model holding the (always unique) Dimension key.","!static":false,"!category":"function","!type":"fn() -> String"},"setDisplayText":{"!description":"Sets a new value for property {@link #getDisplayText displayText}.\n\nWhether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bDisplayText: Boolean) -> sap.chart.data.Dimension","parameters":{"bDisplayText":"type: boolean, description: New value for property <code>displayText<\/code>"}},"!proto":"sap.ui.core.Element","getRole":{"!description":"Gets current value of property {@link #getRole role}.\n\nHow the Dimension will influence the chart layout. Possible values are {@link sap.chart.data.DimensionRoleType category}, {@link sap.chart.data.DimensionRoleType series} or {@link sap.chart.data.DimensionRoleType category2}. The default is {@link sap.chart.data.DimensionRoleType category}.\n\nYou can create a new dimension as follow: <pre>\n...\nnew sap.chart.data.Dimension({name: \"DIMENSION1\", role: sap.chart.data.DimensionRoleType.category})\n...\n<\/pre>\n\nDetailed usage of dimension role. Please refer to {@link sap.chart.data.DimensionRoleType DimensionRoleType}\n\n<b>NOTE:<\/b> Has no effect if the Dimension is used as inResultDimensions by Chart\n\nDefault value is <code>category<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setTextFormatter":{"!description":"Sets a new value for property {@link #getTextFormatter textFormatter}.\n\nFunction returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension. Dimension key value and the corresponding text will be passed to the supplied function as parameters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnTextFormatter: fn()) -> sap.chart.data.Dimension","parameters":{"fnTextFormatter":"type: function, description: New value for property <code>textFormatter<\/code>"}},"setTextProperty":{"!description":"Sets a new value for property {@link #getTextProperty textProperty}.\n\nText for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTextProperty: String) -> sap.chart.data.Dimension","parameters":{"sTextProperty":"type: string, description: New value for property <code>textProperty<\/code>"}},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.chart.data.Dimension with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ui5/data/Dimension.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getTextFormatter textFormatter} : function<\/li>\n<li>{@link #getTextProperty textProperty} : string<\/li>\n<li>{@link #getDisplayText displayText} : boolean (default: true)<\/li>\n<li>{@link #getRole role} : string (default: category)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/chart/data/Dimension","!helpDescription":"Definition of a single dimension in a chart\n\n<table border=\"1\"> <tr> <th>chartType<\/th> <th>binding rules<\/th> <\/tr> <tr> <td>pie, donut<\/td> <td>All dimensions are assigned to feed uid \u201ccolor\u201d.<\/td> <\/tr> <tr> <td>scatter, bubble<\/td> <td>All dimensions with role category are assigned to feed uid \u201cshape\u201d.<\/td> <\/tr> <tr> <td>heatmap<\/td> <td>All dimensions with role \u201cseries\u201d and \u201ccategory2\u201d are assigned to the feed uid \u201ccategoryAxis2\u201d.<\/td> <\/tr> <tr> <td>treemap<\/td> <td>All dimensions are assigned to the feed uid \u201ccategoryAxis\u201d in the default sequence.<\/td> <\/tr> <\/table>","setRole":{"!description":"Sets a new value for property {@link #getRole role}.\n\nHow the Dimension will influence the chart layout. Possible values are {@link sap.chart.data.DimensionRoleType category}, {@link sap.chart.data.DimensionRoleType series} or {@link sap.chart.data.DimensionRoleType category2}. The default is {@link sap.chart.data.DimensionRoleType category}.\n\nYou can create a new dimension as follow: <pre>\n...\nnew sap.chart.data.Dimension({name: \"DIMENSION1\", role: sap.chart.data.DimensionRoleType.category})\n...\n<\/pre>\n\nDetailed usage of dimension role. Please refer to {@link sap.chart.data.DimensionRoleType DimensionRoleType}\n\n<b>NOTE:<\/b> Has no effect if the Dimension is used as inResultDimensions by Chart\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>category<\/code>.","!static":false,"!category":"function","!type":"fn(sRole: String) -> sap.chart.data.Dimension","parameters":{"sRole":"type: string, description: New value for property <code>role<\/code>"}},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nLabel for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.chart.data.Dimension","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"getTextFormatter":{"!description":"Gets current value of property {@link #getTextFormatter textFormatter}.\n\nFunction returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension. Dimension key value and the corresponding text will be passed to the supplied function as parameters.","!static":false,"!category":"function","!type":"fn() -> fn()"},"getTextProperty":{"!description":"Gets current value of property {@link #getTextProperty textProperty}.\n\nText for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.\n\n<b>NOTE:<\/b> This property was bound internally if automatically created via metadata of oData service and please call \"unbindProperty\" before setting.","!static":false,"!category":"function","!type":"fn() -> String"},"getDisplayText":{"!description":"Gets current value of property {@link #getDisplayText displayText}.\n\nWhether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.chart.SelectionMode":{"!description":"Enumeration for supported selection mode in analytical chart","!module":"sap/chart/library","Single":{"!description":"Single selection mode, only one set of data points can be selected at once.","!category":"enum","!type":"String"},"!category":"static class","Multi":{"!description":"Multi selection mode, multiple sets of data points can be selected at once.","!category":"enum","!type":"String"},"None":{"!description":"None selection mode, no data points can be selected.","!category":"enum","!type":"String"}},"sap.chart.coloring.GradationDivergingColorScheme":{"!description":"Enumeration for supported Gradation diverging color scheme in analytical chart","NoSemantics":{"!description":"NoSemantics","!category":"enum","!type":"String"},"!module":"sap/chart/library","!category":"static class","ColdToHot":{"!description":"PositiveToNegative","!category":"enum","!type":"String"},"PositiveToNegative":{"!description":"PositiveToNegative","!category":"enum","!type":"String"},"HotToCold":{"!description":"HotToCold","!category":"enum","!type":"String"},"NegativeToPositive":{"!description":"NegativeToPositive","!category":"enum","!type":"String"}},"sap.chart.data.MeasureRoleType":{"!description":"Enum of supported role types for Measure","!module":"sap/chart/data/MeasureRoleType","!category":"static class","axis4":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Please use other MeasureRoleType for specific usage.<br>Once used by Bullet Chart, but as this chart layout is configured via semantic patterns instead, \"Asix4\" has no special usage from now on.","!category":"enum","!type":"String"},"axis3":{"!description":"Measures with role \"axis3\" are assigned to feed uid \"bubbleWidth\" if used.","!category":"enum","!type":"String"},"axis2":{"!description":"Measures with role \"axis2\" are assigned to feed uid \"valueaxis2\" if used. If a chart type does not use the feed uid \"bubbleWidth\" (true for all chart types except bubble and radar), then all measures with role \"axis3\" or \"axis4\" are treated as measures with role \"axis2\".","!category":"enum","!type":"String"},"axis1":{"!description":"General Rules for all chart types <ol> <li>All measues with role \"axis1\" are assigned to feed uid \"valueaxis\". All measures with role \"axis2\" are assigned to feed uid \"valueaxis2\". All measures with role \"axis3\" are assigned to feed uid \"bubbleWidth\".<\/li> <li>If a chart type does not use the feed uid \"valueaxis2\", then all measures with role \"axis2\" are treated as measures with role \"axis1\".<\/li> <li>If a chart type requires at least 1 measure on the feed uid \"valueaxis\" (true for all non-\"dual\" chart types), but there is no measure with role \"axis1\", then the first measure with role \"axis2\" is assigned to feed uid \"valueaxis\"<\/li> <li>If the chart type requires at least one measure on the feed uid \"valueaxis2\" (true for all \"dual\" chart types\"), but there is no measure with role \"axis2\", then the first measure with role \"axis3\" or \"axis4\" or (if not exists) the last measure with role \"axis1\" is assigned to feed uid \"valueaxis2\".<\/li> <\/ol>","!category":"enum","!type":"String"}},"sap.chart.coloring":{"!description":"Package with colorings enumeration","ImprovementDirectionType":"sap.chart.coloring.ImprovementDirectionType","GradationDivergingColorScheme":"sap.chart.coloring.GradationDivergingColorScheme","!module":"sap/chart/library","!helpDescription":"Package with colorings enumeration","CriticalityType":"sap.chart.coloring.CriticalityType","GradationSaturation":"sap.chart.coloring.GradationSaturation","!category":"namespace","GradationSingleColorScheme":"sap.chart.coloring.GradationSingleColorScheme","GradationTargetColorScheme":"sap.chart.coloring.GradationTargetColorScheme"},"sap.chart.coloring.CriticalityType":{"!description":"Enumeration for supported criticality types in analytical chart","Neutral":{"!description":"Neutral","!category":"enum","!type":"String"},"!module":"sap/chart/coloring/CriticalityType","Negative":{"!description":"Negative","!category":"enum","!type":"String"},"Positive":{"!description":"Positive","!category":"enum","!type":"String"},"!category":"static class","Critical":{"!description":"Critical","!category":"enum","!type":"String"}},"sap.chart.data.HierarchyDimension_obj":{"extend":{"!description":"Creates a new subclass of class sap.chart.data.HierarchyDimension with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.chart.data.Dimension.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.chart.data.HierarchyDimension"},"sap.chart.data.MeasureSemantics":{"!description":"Enum of available semantics value for Measure.","!module":"sap/chart/data/MeasureSemantics","Projected":{"!description":"where values should be, e.g.: thresholds, targets.","!category":"enum","!type":"String"},"Reference":{"!description":"where values will be, e.g.: forecasts, estimations, predictions.","!category":"enum","!type":"String"},"!category":"static class","Actual":{"!description":"facts that happened in the past.","!category":"enum","!type":"String"}},"sap":{"sap":"sap","!category":"namespace","chart":"sap.chart"},"sap.chart.Chart":{"getSelectedDataPoints":{"!description":"Return a total number and an array of datapoint objects (including a Context object) of currently selected data points.\n\nDatapoint object has the following structure: <pre>\n{\n\t\tindex:\t\tindex,\t\t  // index of the data in the group\n\t\tmeasures: [\"measureId\"]   // measure IDs (data points created from the same Context object\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  // differing only in measure names are merged together)\n\t\tcontext:  [Context]\t\t   // Context object\n\t\tunit: {\n\t\t\tmeasureId : \"\"\t  // unit of measure\n\t\t}\n\t\tdataName: {\n\t\t\tmeasureId or dimensionId : \"\"      // dataName of measure or dimension\n\t\t}\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"DATAPOINT\"","!static":false,"!category":"function","!type":"fn() -> Object"},"getSelectionBehavior":{"!description":"Gets current value of property {@link #getSelectionBehavior selectionBehavior}.\n\nChart selection behavior.\n\nDefault value is <code>DataPoint<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.chart.SelectionBehavior"},"destroyData":{"!description":"Unsupported. Chart manages the \"data\" aggregation only via data binding. The method \"destroyData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"detachDrillStackChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:drillStackChanged drillStackChanged} event of this <code>sap.chart.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachRenderComplete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:renderComplete renderComplete} event of this <code>sap.chart.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setActiveColoring":{"!description":"Sets a new value for property {@link #getActiveColoring activeColoring}.\n\nActive coloring configurations.\n\nspecifies which coloring of the possible colorings is to be applied for the current chart layout. It holds an object with two properties：\n\n<ol> <li>coloring: <b>mandatory<\/b>, specify which kind of coloring should take effect in current chart layout. Possible values refer to {@link sap.chart.ColoringType}<\/li> <li>parameters: <ul> <li> <code>Criticality<\/code> supports two parameters: <code>\"dimension\"<\/code> and <code>\"measure\"<\/code>. Both are <b>optional<\/b>, one (and only one) must be provided. This setting disambiguates when multiple colorings for different visible dimensions and measures are applicable.\n\n<code>\"measure\"<\/code> supports two input types: <ol> <li><code>string<\/code> for single measure name<\/li> <li><code>string[]<\/code> of multiple measure names(only supported in <b>static<\/b>), which is relevant in case of a <b>static<\/b> measure criticality defined on multiple measures.<\/li> <\/ol> <code>\"dimension\"<\/code> holds the dimension name as string value. <\/li> <li> <code>Emphasis<\/code> supports only one parameter: <code>\"dimension\"<\/code> which is <b>optional<\/b>.\n\n<code>\"dimension\"<\/code> holds the dimension name as string value. <\/li> <\/ul> <\/li> <\/ol>\n\nExample: <pre>\nactiveColoring: {\n    coloring: sap.chart.ColoringType.Criticality,\n    parameters: {\n        dimension: \"AvailabilityStatus\u201d\n    }\n}\n<\/pre>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oActiveColoring: Object) -> sap.chart.Chart","parameters":{"oActiveColoring":"type: object, description: New value for property <code>activeColoring<\/code>"}},"getDimensionByName":{"!description":"Return Dimension with the given name.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.chart.data.Dimension","parameters":{"sName":"type: string, description: name of the Dimension to get"}},"fireSelectData":{"!description":"Fires event {@link #event:selectData selectData} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.chart.Chart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeSelectedDataPoints":{"!description":"Deselect one or more data points from current data point selections, specified by datapoint objects.\n\nDatapoint object has the following structure: <pre>\n{\n\t\tgroupId:  \"groupId\",\t\t  // group ID (optional)\n\t\tindex:\t\tindex,\t\t\t\t  // index of the data in the group\n\t\tmeasures: [\"measureId\"]   // measure IDs\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"DATAPOINT\"","!static":false,"!category":"function","!type":"fn(aDataPoints: Array) -> sap.chart.Chart","parameters":{"aDataPoints":"type: array, description: an array of datapoint objects."}},"attachDrilledDown":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:drilledDown drilledDown} event of this <code>sap.chart.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.chart.Chart<\/code> itself.\n\nfired after a drill-down operation","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.chart.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"insertMeasure":{"!description":"Inserts a measure into the aggregation {@link #getMeasures measures}.","!static":false,"!category":"function","!type":"fn(oMeasure: sap.chart.data.Measure, iIndex: Number) -> sap.chart.Chart","parameters":{"oMeasure":"type: sap.chart.data.Measure, description: The measure to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the measure should be inserted at; for a negative value of <code>iIndex<\/code>, the measure is inserted at position 0; for a value greater than the current size of the aggregation, the measure is inserted at the last position"}},"removeMeasure":{"!description":"Removes a measure from the aggregation {@link #getMeasures measures}.","!static":false,"!category":"function","!type":"fn(vMeasure: Number | String | sap.chart.data.Measure) -> sap.chart.data.Measure","parameters":{"vMeasure":"type: int|string|sap.chart.data.Measure, description: The measure to remove or its index or id"}},"getInResultDimensions":{"!description":"Gets current value of property {@link #getInResultDimensions inResultDimensions}.\n\nNames of the inResult dimensions.\n\ninResult dimension do not show up in chart layout, i.e. axis/legend. They do show in tooltip, popover, and in selection results.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"attachRenderComplete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:renderComplete renderComplete} event of this <code>sap.chart.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.chart.Chart<\/code> itself.\n\nEvent fires when the rendering ends.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.chart.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDrillStack":{"!description":"Return all drill down states, only works when the property isAnalytical is true.\n\nNOTE: If {@link sap.chart.data.HierarchyDimension} is used when calling {@link #setVisibleDimensions}, drill stack could not be determined synchronously. Listen to <code>drillStackChanged<\/code> event instead.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"fireDeselectData":{"!description":"Fires event {@link #event:deselectData deselectData} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.chart.Chart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeAllData":{"!description":"Unsupported. Chart manages the \"data\" aggregation only via data binding. The method \"removeAllData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"getZoomInfo":{"!description":"Get zoom information.\n\nReturn the zooming enablement and current zooming level of chart.\n\nObject has the following structure:\n\nExample: <pre>\n{\n    \"enabled\":true,\n    \"currentZoomLevel\":0.16\n}\n<\/pre>","!static":false,"!category":"function","!type":"fn() -> Object"},"!description":"UI5 Chart control","getEnableScalingFactor":{"!description":"Gets current value of property {@link #getEnableScalingFactor enableScalingFactor}.\n\nEnable scaling factor.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCustomMessages":{"!description":"Gets current value of property {@link #getCustomMessages customMessages}.\n\nChart custom messages.","!static":false,"!category":"function","!type":"fn() -> Object"},"insertDimension":{"!description":"Inserts a dimension into the aggregation {@link #getDimensions dimensions}.","!static":false,"!category":"function","!type":"fn(oDimension: sap.chart.data.Dimension, iIndex: Number) -> sap.chart.Chart","parameters":{"oDimension":"type: sap.chart.data.Dimension, description: The dimension to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the dimension should be inserted at; for a negative value of <code>iIndex<\/code>, the dimension is inserted at position 0; for a value greater than the current size of the aggregation, the dimension is inserted at the last position"}},"drillUp":{"!description":"Drill up to previous drill down state, only works when the property isAnalytical is true.\n\n<b>NOTE:<\/b> parameter <code>oBindingInfo.length<\/code> during {@link sap.ui.base.ManagedObject#bindAggregation bindAggregation} of {@link #getData data} always takes effect in drill workflow.","!static":false,"!category":"function","!type":"fn(iIndex: Number)","parameters":{"iIndex":"type: int, description: index of drill state in history to drill up. Default to the previous state in history if available."}},"setSelectionMode":{"!description":"Sets a new value for property {@link #getSelectionMode selectionMode}.\n\nChart selection mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Multi<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectionMode: sap.chart.SelectionMode) -> sap.chart.Chart","parameters":{"sSelectionMode":"type: sap.chart.SelectionMode, description: New value for property <code>selectionMode<\/code>"}},"attachValueAxisFixedScaleTurnedOff":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:valueAxisFixedScaleTurnedOff valueAxisFixedScaleTurnedOff} event of this <code>sap.chart.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.chart.Chart<\/code> itself.\n\nEvent fires when fixed scale is turned off by adding or removing dimension","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.chart.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getChartType":{"!description":"Gets current value of property {@link #getChartType chartType}.\n\nType of the Chart.\n\nDefault value is <code>bar<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setInResultDimensions":{"!description":"Sets a new value for property {@link #getInResultDimensions inResultDimensions}.\n\nNames of the inResult dimensions.\n\ninResult dimension do not show up in chart layout, i.e. axis/legend. They do show in tooltip, popover, and in selection results.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sInResultDimensions: [String]) -> sap.chart.Chart","parameters":{"sInResultDimensions":"type: string[], description: New value for property <code>inResultDimensions<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.chart.Chart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.viz.ui5.controls.common.BaseControl.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getDimensions":{"!description":"Gets content of aggregation {@link #getDimensions dimensions}.\n\nDimensions of the data.","!static":false,"!category":"function","!type":"fn() -> [sap.chart.data.Dimension]"},"setCustomMessages":{"!description":"Set the chart custom messages. Supported messages please refer to enum {@link sap.chart.MessageId}.\n\nThe user should handle the message localization.\n\nExample:\n\n<pre>\noChart.setCustomMessages({\n\t 'NO_DATA': \"No data. Please change your filter\"\n});\n<\/pre>\n\nWhen called with an invalid value, the default value will be restored.","!static":false,"!category":"function","!type":"fn(oCustomMessages: Object) -> sap.chart.Chart","parameters":{"oCustomMessages":"type: object, description: object containing customMessage values to update"}},"!module":"sap/chart/Chart","exportToSVGString":{"!description":"Export the current chart as SVG String. The chart is ready to be exported to SVG ONLY after the initialization is finished. Any attempt to export to SVG before that will result in an empty SVG string.","!static":false,"!category":"function","!type":"fn(option?: Object) -> String","parameters":{"option":"type: Object, description: <pre>\n{\n    width: Number - the exported svg will be scaled to the specific width.\n    height: Number - the exported svg will be scaled to the specific height.\n    hideTitleLegend: Boolean - flag to indicate if the exported SVG includes the original title and legend.\n    hideAxis: Boolean - flag to indicate if the exported SVG includes the original axis.\n}\n<\/pre>"}},"getVizProperties":{"!description":"Return Chart's properties.\n\nRefer to chart property <a href=\"docs/vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","!static":false,"!category":"function","!type":"fn() -> Object"},"removeData":{"!description":"Unsupported. Chart manages the \"data\" aggregation only via data binding. The method \"removeData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"getSelectedSeries":{"!description":"Return series objects of currently selected series and a total number of selected data points.\n\nSeries object has the following structure: <pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nReturn 0 and empty list if selectionBehavior is not \"SERIES\"","!static":false,"!category":"function","!type":"fn() -> Object"},"addDimension":{"!description":"Adds some dimension to the aggregation dimensions.\n\nRender a chart with time axis when the dimension type is {@link sap.chart.data.TimeDimension}. Please be advised that time axis is supported with limited chart types (column, line, combination, stacked_column, bubble, scatter, dual_combination, vertical_bullet, waterfall).","!static":false,"!category":"function","!type":"fn(oDimension: sap.chart.data.Dimension | sap.chart.data.TimeDimension) -> sap.chart.Chart","parameters":{"oDimension":"type: sap.chart.data.Dimension|sap.chart.data.TimeDimension, description: The dimension to add; if empty, nothing is inserted"}},"getTimeDimensions":{"!description":"Return all TimeDimensions from current Dimensions.","!static":false,"!category":"function","!type":"fn() -> Array"},"drillDown":{"!description":"Drill down on specific Dimension(s), only works when the property isAnalytical is true.\n\nThe drill down Dimension(s) must present in the Dimension aggregation and must NOT present in previous drill down or be visible already.\n\n<b>NOTE:<\/b> parameter <code>oBindingInfo.length<\/code> during {@link sap.ui.base.ManagedObject#bindAggregation bindAggregation} of {@link #getData data} always takes effect in drill workflow.","!static":false,"!category":"function","!type":"fn(vDimensions: Array)","parameters":{"vDimensions":"type: array, description: an array, or just a single instance, of either Dimension instance or Dimension name to drill down"}},"attachDrilledUp":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:drilledUp drilledUp} event of this <code>sap.chart.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.chart.Chart<\/code> itself.\n\nfired after a drill-up operation","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.chart.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addSelectedCategories":{"!description":"Add one or more categories to current category selections, specified by category objects.\n\nCategory object has the following structure: <pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"CATEGORY\"","!static":false,"!category":"function","!type":"fn(aCategories: Array) -> sap.chart.Chart","parameters":{"aCategories":"type: array, description: an array of category objects"}},"setSelectedSeries":{"!description":"Select one or more series, specified by series objects.\n\nSeries object has the following structure: <pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"SERIES\"","!static":false,"!category":"function","!type":"fn(aSeries: Array) -> sap.chart.Chart","parameters":{"aSeries":"type: array, description: an array of series objects"}},"detachDrilledUp":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:drilledUp drilledUp} event of this <code>sap.chart.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getData":{"!description":"Unsupported. Chart manages the \"data\" aggregation only via data binding. The method \"getData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"attachSelectData":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectData selectData} event of this <code>sap.chart.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.chart.Chart<\/code> itself.\n\nEvent fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.chart.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addData":{"!description":"Unsupported. Chart manages the \"data\" aggregation only via data binding. The method \"addData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"getActiveColoring":{"!description":"Gets current value of property {@link #getActiveColoring activeColoring}.\n\nActive coloring configurations.\n\nspecifies which coloring of the possible colorings is to be applied for the current chart layout. It holds an object with two properties：\n\n<ol> <li>coloring: <b>mandatory<\/b>, specify which kind of coloring should take effect in current chart layout. Possible values refer to {@link sap.chart.ColoringType}<\/li> <li>parameters: <ul> <li> <code>Criticality<\/code> supports two parameters: <code>\"dimension\"<\/code> and <code>\"measure\"<\/code>. Both are <b>optional<\/b>, one (and only one) must be provided. This setting disambiguates when multiple colorings for different visible dimensions and measures are applicable.\n\n<code>\"measure\"<\/code> supports two input types: <ol> <li><code>string<\/code> for single measure name<\/li> <li><code>string[]<\/code> of multiple measure names(only supported in <b>static<\/b>), which is relevant in case of a <b>static<\/b> measure criticality defined on multiple measures.<\/li> <\/ol> <code>\"dimension\"<\/code> holds the dimension name as string value. <\/li> <li> <code>Emphasis<\/code> supports only one parameter: <code>\"dimension\"<\/code> which is <b>optional<\/b>.\n\n<code>\"dimension\"<\/code> holds the dimension name as string value. <\/li> <\/ul> <\/li> <\/ol>\n\nExample: <pre>\nactiveColoring: {\n    coloring: sap.chart.ColoringType.Criticality,\n    parameters: {\n        dimension: \"AvailabilityStatus\u201d\n    }\n}\n<\/pre>","!static":false,"!category":"function","!type":"fn() -> Object"},"getAvailableChartTypes":{"!description":"Returns available and unavailable chart types with current Dimensions and Measures. An error info will be returned along with each unavailable chart types.\n\n<pre>\n{\n\t\t available: [{\n\t\t\t\t chart: \"chartType\"\n\t\t }, ...],\n\t\t unavailable: [{\n\t\t\t\t chart: \"chartType\"\n\t\t\t\t error: {\n\t\t\t\t\t\t missing: {\n\t\t\t\t\t\t\t\t Dimension: n,\n\t\t\t\t\t\t\t\t Measure: n,\n\t\t\t\t\t\t\t\t DateTimeDimension: n\n\t\t\t\t\t\t }\n\t\t\t\t }\n\t\t }, ...]\n}\n<\/pre>","!static":false,"!category":"function","!type":"fn() -> Object"},"setSelectionBehavior":{"!description":"Sets a new value for property {@link #getSelectionBehavior selectionBehavior}.\n\nChart selection behavior.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>DataPoint<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectionBehavior: sap.chart.SelectionBehavior) -> sap.chart.Chart","parameters":{"sSelectionBehavior":"type: sap.chart.SelectionBehavior, description: New value for property <code>selectionBehavior<\/code>"}},"setVizProperties":{"!description":"Change Chart's properties.\n\nChart's properties will be updated with the parameter.\n\nRefer to chart property <a href=\"docs/vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","!static":false,"!category":"function","!type":"fn(oVizProperties: Object) -> sap.chart.Chart","parameters":{"oVizProperties":"type: object, description: object containing vizProperty values to update"}},"getVisibleMeasures":{"!description":"Gets current value of property {@link #getVisibleMeasures visibleMeasures}.\n\nNames of the Measures to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Measure<\/code>s will cause errors.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setSelectedDataPoints":{"!description":"Select one or more data points, specified by datapoint objects.\n\nDatapoint object has the following structure: <pre>\n{\n\t\tgroupId:  \"groupId\",\t\t  // group ID (optional)\n\t\tindex:\t\tindex,\t\t\t\t  // index of the data in the group\n\t\tmeasures: [\"measureId\"]   // measure IDs\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"DATAPOINT\"","!static":false,"!category":"function","!type":"fn(aDataPoints: Array) -> sap.chart.Chart","parameters":{"aDataPoints":"type: array, description: an array of datapoint objects."}},"getColorings":{"!description":"Gets current value of property {@link #getColorings colorings}.\n\nChart colorings.\n\nHolds an object with information about the possible options how colors can be applied for indicating <code>Criticality<\/code> or <code>Emphasis<\/code> in the chart. <pre>\nColorings: {\n    Criticality: {\n        \u2026\n    },\n    Emphasis: {\n        \u2026\n    }\n}\n<\/pre>\n\n<b>NOTE:<\/b> Dimension-based coloring does not work when {@link sap.chart.data.Measure#setSemantics} is set to {@link sap.chart.data.MeasureSemantics.Projected} or {@link sap.chart.data.MeasureSemantics.Reference} for visible measure(s).\n\nRefer to<br/> {@link sap.chart.ColoringType.Criticality}<br/> {@link sap.chart.ColoringType.Emphasis}<br/> for detailed usage","!static":false,"!category":"function","!type":"fn() -> Object"},"bindData":{"!description":"Binds aggregation {@link #getData data} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.chart.Chart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getMeasureByName":{"!description":"Return Measure with the given name.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.chart.data.Measure","parameters":{"sName":"type: string, description: name of the Measure to get"}},"setValueAxisScale":{"!description":"Sets a new value for property {@link #getValueAxisScale valueAxisScale}.\n\nValue Axis Scale.\n\nSpecifies the scale of the chart value axes.\n\n<ol> <li>scaleBehavior: <b>optional<\/b>, determines whether or not all value axes in the chart should have a fixed scale. Possible values refer to {@link sap.chart.ScaleBehavior}. The default value is sap.chart.ScaleBehavior.AutoScale. In order to apply a fixed scale, boundary values for minimum and maximum must have been specified for all visible measures, and the axes boundaries are then created from the largest maximum and the smallest minimum value of the measures put on the respective axis. If any visible measure lacks this information, or scaleBehavior is set to sap.chart.ScaleBehavior.AutoScale, the chart will apply an automatic scaling for all value axes. <\/li> <li>fixedScaleSettings: <ul> <li>measureBoundaryValues: An object holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d values for all the measures. Stacked chart with only one measure also uses this object to describe the fixed \u201cminimum\u201d and \u201cmaximum\u201d value. <ul> <li> <code>measure<\/code> Measure name <\/li> <\/ul> <\/li> <li>stackedMultipleMeasureBoundaryValues: An array of objects holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d values only for stacked chart with multiple measures. <ul> <li> <code>measures<\/code> the array of measure name applied to the axis. <\/li> <li> <code>boundaryValues：<\/code> An object holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d value all the measures applied to certain axis. <\/li> <\/ul> <\/li> <\/ul> <\/li> <li>autoScaleSettings: <ul> <li> <code>zeroAlwaysVisible<\/code> forces the value axis to always display the zero value (only a few chart types support the opposite), which is <b>optional<\/b>. The default value is true. <\/li> <li> <code>syncWith<\/code> selects how the chart adapts the value axis to the data: The axis boundaries may be determined from the loaded data, which is <b>optional<\/b>. The default value is \"DataSet\". Possible values refer to {@link sap.chart.AutoScaleMode}. <\/li> <\/ul> <\/li> <\/ol>\n\nExample: <pre>\nvalueAxisScale: {\n    scaleBehavior: sap.chart.ScaleBehavior,\n    fixedScaleSettings: {\n        measureBoundaryValues: {\n            measure_1: {\n                minimum: Number,\n                maximum: Number\n            },\n            measure_2: {\n                minimum: Number,\n                maximum: Number\n            }\n        },\n        stackedMultipleMeasureBoundaryValues: [{\n            measures: [ 'measure_1', 'measure_2', \u2026 ],\n            boundaryValues： {\n                minimum: Number,\n                maximum: Number\n            }\n        }， {\n            measures: [ 'measure_3', 'measure_4', \u2026 ],\n            boundaryValues： {\n                minimum: Number,\n                maximum: Number\n            }\n        }]\n    },\n    autoScaleSettings: {\n        zeroAlwaysVisible: Boolean,\n        syncWith: sap.chart.autoScaleMode\n    }\n}\n<\/pre>\n\nRefer to<br/> {@link sap.chart.AutoScaleMode.DataSet}<br/> {@link sap.chart.AutoScaleMode.VisibleData}<br/> {@link sap.chart.ScaleBehavior.AutoScale}<br/> {@link sap.chart.ScaleBehavior.FixedScale}<br/> for detailed usage\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oValueAxisScale: Object) -> sap.chart.Chart","parameters":{"oValueAxisScale":"type: object, description: New value for property <code>valueAxisScale<\/code>"}},"fireValueAxisFixedScaleTurnedOff":{"!description":"Fires event {@link #event:valueAxisFixedScaleTurnedOff valueAxisFixedScaleTurnedOff} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.chart.Chart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"insertData":{"!description":"Unsupported. Chart manages the \"data\" aggregation only via data binding. The method \"insertData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"setVizScales":{"!description":"Change Chart's scales.\n\nChart's scales will be updated with the parameters.\n\nRefer to chart property <a href=\"docs/vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","!static":false,"!category":"function","!type":"fn(oVizScales: [Object]) -> sap.chart.Chart","parameters":{"oVizScales":"type: object[], description: array of vizScale objects"}},"fireRenderComplete":{"!description":"Fires event {@link #event:renderComplete renderComplete} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.chart.Chart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setVisibleMeasures":{"!description":"Sets a new value for property {@link #getVisibleMeasures visibleMeasures}.\n\nNames of the Measures to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Measure<\/code>s will cause errors.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sVisibleMeasures: [String]) -> sap.chart.Chart","parameters":{"sVisibleMeasures":"type: string[], description: New value for property <code>visibleMeasures<\/code>"}},"destroyDimensions":{"!description":"Destroys all the dimensions in the aggregation dimensions, only works when the property isAnalytical is true.","!static":false,"!category":"function","!type":"fn() -> sap.chart.Chart"},"getEnableStableColor":{"!description":"Gets current value of property {@link #getEnableStableColor enableStableColor}.\n\nEnable Stable color mode. To keep the same colors for the same dimension values or measure names.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addSelectedDataPoints":{"!description":"Add one or more data points to current data point selection, specified by datapoint objects.\n\nDatapoint object has the following structure: <pre>\n{\n\t\tgroupId:  \"groupId\",\t\t  // group ID (optional)\n\t\tindex:\t\tindex,\t\t\t\t  // index of the data in the group\n\t\tmeasures: [\"measureId\"]   // measure IDs\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"DATAPOINT\"","!static":false,"!category":"function","!type":"fn(aDataPoints: Array) -> sap.chart.Chart","parameters":{"aDataPoints":"type: array, description: an array of datapoint objects."}},"fireDrilledDown":{"!description":"Fires event {@link #event:drilledDown drilledDown} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.chart.Chart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"indexOfMeasure":{"!description":"Checks for the provided <code>sap.chart.data.Measure<\/code> in the aggregation {@link #getMeasures measures}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oMeasure: sap.chart.data.Measure) -> Number","parameters":{"oMeasure":"type: sap.chart.data.Measure, description: The measure whose index is looked for"}},"addSelectedSeries":{"!description":"Add one or more series to current series selections, specified by series objects.\n\nSeries object has the following structure: <pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"SERIES\"","!static":false,"!category":"function","!type":"fn(aSeries: Array) -> sap.chart.Chart","parameters":{"aSeries":"type: array, description: an array of series objects"}},"getVisibleDimensions":{"!description":"Gets current value of property {@link #getVisibleDimensions visibleDimensions}.\n\nNames of the Dimensions to be displayed in the Chart, all available dimensions will automatically append when the property isAnalytical is false.\n\nDepending on chart type, insufficient number of visible <code>Dimension<\/code>s will cause error.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"getSelectedCategories":{"!description":"Return category objects of currently selected categories and a total number of selected data points.\n\nCategory object has the following structure: <pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nReturn 0 and empty list if selectionBehavior is not \"CATEGORY\"","!static":false,"!category":"function","!type":"fn() -> Object"},"removeSelectedSeries":{"!description":"Deselect one or more series from current series selections, specified by series objects.\n\nSeries object has the following structure: <pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"SERIES\"","!static":false,"!category":"function","!type":"fn(aSeries: Array) -> sap.chart.Chart","parameters":{"aSeries":"type: array, description: an array of series objects"}},"resetLayout":{"!description":"Reset to visible layout.","!static":false,"!category":"function","!type":"fn() -> sap.chart.Chart"},"getIsAnalytical":{"!description":"Gets current value of property isAnalytical.\n\nWhether or not an aggregated entity set is bound to the chart.\n\nThe property isAnalytical will programmatically set according to data source. When the data source has an aggregated entity set, isAnalytical is true, otherwise it's false.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.chart.Chart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllMeasures":{"!description":"Removes all the controls from the aggregation {@link #getMeasures measures}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.chart.data.Measure]"},"indexOfDimension":{"!description":"Checks for the provided <code>sap.chart.data.Dimension<\/code> in the aggregation {@link #getDimensions dimensions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oDimension: sap.chart.data.Dimension) -> Number","parameters":{"oDimension":"type: sap.chart.data.Dimension, description: The dimension whose index is looked for"}},"setIsAnalytical":{"!description":"Whether or not an aggregated entity set is bound to the chart. Deprecated.","!static":false,"!category":"function","!type":"fn() -> sap.chart.Chart"},"detachValueAxisFixedScaleTurnedOff":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:valueAxisFixedScaleTurnedOff valueAxisFixedScaleTurnedOff} event of this <code>sap.chart.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setColorings":{"!description":"Sets a new value for property {@link #getColorings colorings}.\n\nChart colorings.\n\nHolds an object with information about the possible options how colors can be applied for indicating <code>Criticality<\/code> or <code>Emphasis<\/code> in the chart. <pre>\nColorings: {\n    Criticality: {\n        \u2026\n    },\n    Emphasis: {\n        \u2026\n    }\n}\n<\/pre>\n\n<b>NOTE:<\/b> Dimension-based coloring does not work when {@link sap.chart.data.Measure#setSemantics} is set to {@link sap.chart.data.MeasureSemantics.Projected} or {@link sap.chart.data.MeasureSemantics.Reference} for visible measure(s).\n\nRefer to<br/> {@link sap.chart.ColoringType.Criticality}<br/> {@link sap.chart.ColoringType.Emphasis}<br/> for detailed usage\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oColorings: Object) -> sap.chart.Chart","parameters":{"oColorings":"type: object, description: New value for property <code>colorings<\/code>"}},"!helpDescription":"UI5 Chart control","getUiConfig":{"!description":"Gets current value of property {@link #getUiConfig uiConfig}.\n\nConfiguration for initialization to VizControl. This property could only set via settings parameter in Constructor.","!static":false,"!category":"function","!type":"fn() -> Object"},"detachDrilledDown":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:drilledDown drilledDown} event of this <code>sap.chart.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachDrillStackChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:drillStackChanged drillStackChanged} event of this <code>sap.chart.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.chart.Chart<\/code> itself.\n\nEvent fires when drill stack changed. API that relies on drill stack like {@link #drillDown}, {@link #drillUp} shall be called in this event or after chart is rendered","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.chart.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setSelectedCategories":{"!description":"Select one or more categories, specified by category objects.\n\nCategory object has the following structure: <pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"CATEGORY\"","!static":false,"!category":"function","!type":"fn(aCategories: Array) -> sap.chart.Chart","parameters":{"aCategories":"type: array, description: an array of category objects"}},"attachDeselectData":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:deselectData deselectData} event of this <code>sap.chart.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.chart.Chart<\/code> itself.\n\nEvent fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.chart.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEnablePagination":{"!description":"Gets current value of property {@link #getEnablePagination enablePagination}.\n\nEnable pagination mode.\n\nPagination mode empowers users to visualize dataset page by page by scrolling back or forth. Currently there are some limitations of this mode in some chart transversal features, such as: <ol> <li>Selection status might lost for new batch data<\/li> <li>Keyboard navigation will be only available for current continuous batch data<\/li> <li>Zoom out might have inconsistent behavior, Hence the gesture in mobile might have the same issue<\/li> <li>Time charts did not enable pagination yet<\/li> <li>Series color might be inconsistent before/after jump pages<\/li> <\/ol> Please refer to release notes for details.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.viz.ui5.controls.common.BaseControl","getSelectionMode":{"!description":"Gets current value of property {@link #getSelectionMode selectionMode}.\n\nChart selection mode.\n\nDefault value is <code>Multi<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.chart.SelectionMode"},"!category":"class","setEnablePagination":{"!description":"Sets a new value for property enablePagination, only works for oData model.\n\n<b>NOTE:<\/b> setEnablePagination currently only works in constructor.\n\nEnable pagination mode.\n\nPagination mode empowers users to visualize dataset page by page by scrolling back or forth. Currently there are some limitations of this mode in some chart transversal features, such as: <ol> <li>Selection status might lost for new batch data<\/li> <li>Keyboard navigation will be only available for current continuous batch data<\/li> <li>Zoom out might have inconsistent behavior, hence the gesture in mobile might have the same issue<\/li> <li>Time charts did not enable pagination yet<\/li> <li>Series color might be inconsistent before/after jump pages<\/li> <li>parameter <code>oBindingInfo.length<\/code> during {@link sap.ui.base.ManagedObject#bindAggregation bindAggregation} of {@link #getData data} will not be respected in value axis scale<\/li> <\/ol> Please refer to release notes for details.\n\nWhen called with a value of null or undefined, the default value of the property will be restored.\n\nDefault value is false.","!static":false,"!category":"function","!type":"fn(bEnablePagination: Boolean) -> sap.chart.Chart","parameters":{"bEnablePagination":"type: boolean, description: New value for property enablePagination"}},"removeSelectedCategories":{"!description":"Deselect one or more categories from current category selections, specified by category objects.\n\nCategory object has the following structure: <pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"CATEGORY\"","!static":false,"!category":"function","!type":"fn(aCategories: Array) -> sap.chart.Chart","parameters":{"aCategories":"type: array, description: an array of category objects"}},"unbindData":{"!description":"Unbinds aggregation {@link #getData data} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.chart.Chart"},"detachDeselectData":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:deselectData deselectData} event of this <code>sap.chart.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setEnableScalingFactor":{"!description":"Sets a new value for property {@link #getEnableScalingFactor enableScalingFactor}.\n\nEnable scaling factor.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableScalingFactor: Boolean) -> sap.chart.Chart","parameters":{"bEnableScalingFactor":"type: boolean, description: New value for property <code>enableScalingFactor<\/code>"}},"setVisibleDimensions":{"!description":"Sets a new value for property visibleDimensions.\n\nNames of the Dimensions to be displayed in the Chart, all available dimensions will automatically append when the property isAnalytical is false.\n\nDepending on chart type, insufficient number of visible Dimensions will cause error.\n\nWhen called with a value of null or undefined, the default value of the property will be restored.\n\nDefault value is [].","!static":false,"!category":"function","!type":"fn(sVisibleDimensions: [String]) -> sap.chart.Chart","parameters":{"sVisibleDimensions":"type: string[], description: New value for property visibleDimensions"}},"!constructorDescription":"Constructor for a new Chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getChartType chartType} : string (default: bar)<\/li>\n<li>{@link #getUiConfig uiConfig} : object<\/li>\n<li>{@link #getVisibleDimensions visibleDimensions} : string[] (default: [])<\/li>\n<li>{@link #getInResultDimensions inResultDimensions} : string[] (default: [])<\/li>\n<li>{@link #getVisibleMeasures visibleMeasures} : string[] (default: [])<\/li>\n<li>{@link #getVizProperties vizProperties} : object<\/li>\n<li>{@link #getVizScales vizScales} : object[]<\/li>\n<li>{@link #getIsAnalytical isAnalytical} : boolean<\/li>\n<li>{@link #getSelectionBehavior selectionBehavior} : sap.chart.SelectionBehavior (default: DataPoint)<\/li>\n<li>{@link #getSelectionMode selectionMode} : sap.chart.SelectionMode (default: Multi)<\/li>\n<li>{@link #getEnablePagination enablePagination} : boolean (default: false)<\/li>\n<li>{@link #getEnableStableColor enableStableColor} : boolean (default: false)<\/li>\n<li>{@link #getEnableScalingFactor enableScalingFactor} : boolean (default: false)<\/li>\n<li>{@link #getCustomMessages customMessages} : object<\/li>\n<li>{@link #getColorings colorings} : object<\/li>\n<li>{@link #getActiveColoring activeColoring} : object<\/li>\n<li>{@link #getValueAxisScale valueAxisScale} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getData data} : sap.ui.core.Element[]<\/li>\n<li>{@link #getDimensions dimensions} : sap.chart.data.Dimension[]<\/li>\n<li>{@link #getMeasures measures} : sap.chart.data.Measure[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:drilledDown drilledDown} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:drilledUp drilledUp} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:renderComplete renderComplete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:valueAxisFixedScaleTurnedOff valueAxisFixedScaleTurnedOff} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:drillStackChanged drillStackChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.viz.ui5.controls.common.BaseControl#constructor sap.viz.ui5.controls.common.BaseControl}\ncan be used as well.","destroyMeasures":{"!description":"Destroys all the measures in the aggregation {@link #getMeasures measures}.","!static":false,"!category":"function","!type":"fn() -> sap.chart.Chart"},"removeDimension":{"!description":"Removes a dimension from the aggregation dimensions, remove a visible dimension is unsupported when the property isAnalytical is false.","!static":false,"!category":"function","!type":"fn(oDimension: Number | String | sap.chart.data.Dimension) -> sap.chart.data.Dimension","parameters":{"oDimension":"type: int|string|sap.chart.data.Dimension, description: The dimension to remove or its index or id."}},"addMeasure":{"!description":"Adds some measure to the aggregation {@link #getMeasures measures}.","!static":false,"!category":"function","!type":"fn(oMeasure: sap.chart.data.Measure) -> sap.chart.Chart","parameters":{"oMeasure":"type: sap.chart.data.Measure, description: The measure to add; if empty, nothing is inserted"}},"detachSelectData":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectData selectData} event of this <code>sap.chart.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireDrillStackChanged":{"!description":"Fires event {@link #event:drillStackChanged drillStackChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.chart.Chart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMeasures":{"!description":"Gets content of aggregation {@link #getMeasures measures}.\n\nMeasures of the data.","!static":false,"!category":"function","!type":"fn() -> [sap.chart.data.Measure]"},"zoom":{"!description":"Zoom the chart plot.\n\nExample: <pre>\n\tvar oChart = new sap.chart.Chart(...);\n\toChart.zoom({direction: \"in\"});\n<\/pre>","!static":false,"!category":"function","!type":"fn(oConfig: Object)","parameters":{"oConfig":"type: object, description: contains a \"direction\" attribute with value \"in\" or \"out\" indicating zoom to enlarge or shrink respectively"}},"getValueAxisScale":{"!description":"Gets current value of property {@link #getValueAxisScale valueAxisScale}.\n\nValue Axis Scale.\n\nSpecifies the scale of the chart value axes.\n\n<ol> <li>scaleBehavior: <b>optional<\/b>, determines whether or not all value axes in the chart should have a fixed scale. Possible values refer to {@link sap.chart.ScaleBehavior}. The default value is sap.chart.ScaleBehavior.AutoScale. In order to apply a fixed scale, boundary values for minimum and maximum must have been specified for all visible measures, and the axes boundaries are then created from the largest maximum and the smallest minimum value of the measures put on the respective axis. If any visible measure lacks this information, or scaleBehavior is set to sap.chart.ScaleBehavior.AutoScale, the chart will apply an automatic scaling for all value axes. <\/li> <li>fixedScaleSettings: <ul> <li>measureBoundaryValues: An object holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d values for all the measures. Stacked chart with only one measure also uses this object to describe the fixed \u201cminimum\u201d and \u201cmaximum\u201d value. <ul> <li> <code>measure<\/code> Measure name <\/li> <\/ul> <\/li> <li>stackedMultipleMeasureBoundaryValues: An array of objects holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d values only for stacked chart with multiple measures. <ul> <li> <code>measures<\/code> the array of measure name applied to the axis. <\/li> <li> <code>boundaryValues：<\/code> An object holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d value all the measures applied to certain axis. <\/li> <\/ul> <\/li> <\/ul> <\/li> <li>autoScaleSettings: <ul> <li> <code>zeroAlwaysVisible<\/code> forces the value axis to always display the zero value (only a few chart types support the opposite), which is <b>optional<\/b>. The default value is true. <\/li> <li> <code>syncWith<\/code> selects how the chart adapts the value axis to the data: The axis boundaries may be determined from the loaded data, which is <b>optional<\/b>. The default value is \"DataSet\". Possible values refer to {@link sap.chart.AutoScaleMode}. <\/li> <\/ul> <\/li> <\/ol>\n\nExample: <pre>\nvalueAxisScale: {\n    scaleBehavior: sap.chart.ScaleBehavior,\n    fixedScaleSettings: {\n        measureBoundaryValues: {\n            measure_1: {\n                minimum: Number,\n                maximum: Number\n            },\n            measure_2: {\n                minimum: Number,\n                maximum: Number\n            }\n        },\n        stackedMultipleMeasureBoundaryValues: [{\n            measures: [ 'measure_1', 'measure_2', \u2026 ],\n            boundaryValues： {\n                minimum: Number,\n                maximum: Number\n            }\n        }， {\n            measures: [ 'measure_3', 'measure_4', \u2026 ],\n            boundaryValues： {\n                minimum: Number,\n                maximum: Number\n            }\n        }]\n    },\n    autoScaleSettings: {\n        zeroAlwaysVisible: Boolean,\n        syncWith: sap.chart.autoScaleMode\n    }\n}\n<\/pre>\n\nRefer to<br/> {@link sap.chart.AutoScaleMode.DataSet}<br/> {@link sap.chart.AutoScaleMode.VisibleData}<br/> {@link sap.chart.ScaleBehavior.AutoScale}<br/> {@link sap.chart.ScaleBehavior.FixedScale}<br/> for detailed usage","!static":false,"!category":"function","!type":"fn() -> Object"},"getVizUid":{"!description":"Get the UID for Chart. It supports other controls to connect to a viz instance.","!static":false,"!category":"function","!type":"fn() -> String"},"fireDrilledUp":{"!description":"Fires event {@link #event:drilledUp drilledUp} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.chart.Chart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setEnableStableColor":{"!description":"Sets a new value for property {@link #getEnableStableColor enableStableColor}.\n\nEnable Stable color mode. To keep the same colors for the same dimension values or measure names.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableStableColor: Boolean) -> sap.chart.Chart","parameters":{"bEnableStableColor":"type: boolean, description: New value for property <code>enableStableColor<\/code>"}},"removeAllDimensions":{"!description":"Removes all the controls from the aggregation dimensions, only works when the property isAnalytical is true.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.chart.data.Dimension]"},"getVizScales":{"!description":"Return Chart's scales.\n\nRefer to chart property <a href=\"docs/vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"indexOfData":{"!description":"Unsupported. Chart manages the \"data\" aggregation only via data binding. The method \"indexOfData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"setUiConfig":{"!description":"Setter for property uiConfig. uiConfig could only set via settings parameter of constructor.\n\nuiConfig from base type could config the instance. Supported uiConfig keyword: applicationSet, showErrorMessage\n\nExample:\n\n<pre>\nvar chart = new sap.chart.Chart({\n 'chartType' : 'bar',\n 'uiConfig' : {\n\t\t  'applicationSet' : 'fiori',\n\t\t  'showErrorMessage' : true\n }\n});\n<\/pre>","!static":false,"!category":"function","!type":"fn(oUiConfig: Object) -> sap.chart.Chart","parameters":{"oUiConfig":"type: object, description: the UI configuration"}},"setChartType":{"!description":"Sets a new value for property {@link #getChartType chartType}.\n\nType of the Chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>bar<\/code>.","!static":false,"!category":"function","!type":"fn(sChartType: String) -> sap.chart.Chart","parameters":{"sChartType":"type: string, description: New value for property <code>chartType<\/code>"}},"getScalingFactor":{"!description":"return the scaling factor. Or return null when scaling factor is disable.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.chart.api":{"!description":"Package with additional chart APIs","!module":"sap/chart/library","!helpDescription":"Package with additional chart APIs","getChartTypes":{"!description":"Returns all chart types currently supported by chart control (subset of viz types).","!static":"true","!category":"function","!type":"fn() -> Object"},"!category":"namespace","getChartTypeLayout":{"!description":"Get the Dimensions and Measures layout for a certain ChartType with provided Dimensions and Measures.","!static":"true","!category":"function","!type":"fn(sChartType: String, aDimensions: [object[] | sap.chart.data.Dimension], aMeasures: [object[] | sap.chart.data.Measure]) -> Object"}},"sap.chart.data.Dimension_obj":{"extend":{"!description":"Creates a new subclass of class sap.chart.data.Dimension with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.chart.data.Dimension"},"sap.chart.ScaleBehavior":{"!description":"Enumeration for the value axes scale behavior of analytical chart.","!module":"sap/chart/ScaleBehavior","!category":"static class","FixedScale":{"!description":"Value axes scale is fixed.","!category":"enum","!type":"String"},"AutoScale":{"!description":"Value axes scale is automatic.","!category":"enum","!type":"String"}},"sap.chart.TimeUnitType":{"!description":"Enumeration for supported time unit types in analytical chart","yearmonthday":{"!description":"type is Edm.string and V2 annotation sap:semantics is \"yearmonthday\", like \"yyyyMMdd\"","!category":"enum","!type":"String"},"!module":"sap/chart/TimeUnitType","yearquarter":{"!description":"type is Edm.string, like \"yyyyQQQQQ\"","!category":"enum","!type":"String"},"yearweek":{"!description":"type is Edm.string, like \"yyyyww\"","!category":"enum","!type":"String"},"!category":"static class","fiscalyearperiod":{"!description":"type is Edm.string, like \"YYYYPPP\"","!category":"enum","!type":"String"},"yearmonth":{"!description":"type is Edm.string, like \"yyyyMM\"","!category":"enum","!type":"String"},"Date":{"!description":"type is Edm.DateTime and V2 annotation sap:display-format is \"Date\" or timestamp, and type is Edm.Date in V4","!category":"enum","!type":"String"},"fiscalyear":{"!description":"type is Edm.string, like \"YYYY\"","!category":"enum","!type":"String"}},"sap.chart.ChartType":{"DualBar":{"!description":"Bar Chart with 2 X-Axes","!category":"enum","!type":"String"},"PercentageDualStackedBar":{"!description":"100% Stacked Bar Chart with 2 X-Axes","!category":"enum","!type":"String"},"VerticalBullet":{"!description":"Vertical Bullet Chart","!category":"enum","!type":"String"},"Waterfall":{"!description":"Waterfall Chart","!category":"enum","!type":"String"},"!category":"namespace","DualColumn":{"!description":"Column Chart with 2 Y-Axes","!category":"enum","!type":"String"},"StackedBar":{"!description":"Stacked Bar Chart","!category":"enum","!type":"String"},"Bubble":{"!description":"Bubble Chart","!category":"enum","!type":"String"},"DualHorizontalStackedCombination":{"!description":"Horizontal Combined Stacked Line Chart with 2 X-Axes","!category":"enum","!type":"String"},"Column":{"!description":"Column Chart","!category":"enum","!type":"String"},"DualLine":{"!description":"Line Chart with 2 Y-Axes","!category":"enum","!type":"String"},"Combination":{"!description":"Combined Column Line Chart","!category":"enum","!type":"String"},"PercentageDualStackedColumn":{"!description":"100% Stacked Column Chart with 2 Y-Axes","!category":"enum","!type":"String"},"!description":"Enumeration for supported chart types in analytical chart","PercentageDonut":{"!description":"100% Donut Chart","!category":"enum","!type":"String"},"Bullet":{"!description":"Bubble Chart","!category":"enum","!type":"String"},"DualCombination":{"!description":"Combined Column Line Chart with 2 Y-Axes","!category":"enum","!type":"String"},"PercentageStackedBar":{"!description":"100% Stacked Bar Chart","!category":"enum","!type":"String"},"HorizontalStackedCombination":{"!description":"Horizontal Combined Stacked Line Chart","!category":"enum","!type":"String"},"DualStackedColumn":{"!description":"Stacked Column Chart with 2 Y-Axes","!category":"enum","!type":"String"},"Heatmap":{"!description":"Heat Map","!category":"enum","!type":"String"},"HorizontalWaterfall":{"!description":"Horizontal Waterfall Chart","!category":"enum","!type":"String"},"DualStackedCombination":{"!description":"Combined Stacked Line Chart with 2 Y-Axes","!category":"enum","!type":"String"},"PercentageStackedColumn":{"!description":"100% Stacked Column Chart","!category":"enum","!type":"String"},"Pie":{"!description":"Pie Chart","!category":"enum","!type":"String"},"StackedCombination":{"!description":"Combined Stacked Line Chart","!category":"enum","!type":"String"},"Donut":{"!description":"Donut Chart","!category":"enum","!type":"String"},"Line":{"!description":"Line Chart","!category":"enum","!type":"String"},"StackedColumn":{"!description":"Stacked Column Chart","!category":"enum","!type":"String"},"Bar":{"!description":"Bar Chart","!category":"enum","!type":"String"},"!module":"sap/chart/ChartType","!helpDescription":"Enumeration for supported chart types in analytical chart","Scatter":{"!description":"Scatter Plot","!category":"enum","!type":"String"},"DualHorizontalCombination":{"!description":"Horizontal Combined Bar Line Chart with 2 X-Axes","!category":"enum","!type":"String"},"DualStackedBar":{"!description":"Stacked Bar Chart with 2 X-Axes","!category":"enum","!type":"String"}},"sap.chart.SelectionBehavior":{"!description":"Enumeration for supported selection behavior in analytical chart","Series":{"!description":"Series selection behavior, one seies of data points can be selected at once.","!category":"enum","!type":"String"},"Category":{"!description":"Category selection behavior, one category of data points can be selected at once.","!category":"enum","!type":"String"},"!module":"sap/chart/library","DataPoint":{"!description":"Data point selection behavior, only one data point can be selected at once.","!category":"enum","!type":"String"},"!category":"static class"},"sap.chart.coloring.GradationTargetColorScheme":{"!description":"Enumeration for supported Gradation target color scheme in analytical chart","!module":"sap/chart/library","!category":"static class","PositiveTarget":{"!description":"PositiveTarget","!category":"enum","!type":"String"}},"sap.chart.coloring.GradationSingleColorScheme":{"!description":"Enumeration for supported Gradation single color scheme in analytical chart","NoSemantics":{"!description":"NoSemantics","!category":"enum","!type":"String"},"!module":"sap/chart/library","Negative":{"!description":"Negative","!category":"enum","!type":"String"},"Positive":{"!description":"Positive","!category":"enum","!type":"String"},"!category":"static class"},"sap.chart.data.Measure_obj":{"extend":{"!description":"Creates a new subclass of class sap.chart.data.Measure with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.chart.data.Measure"},"sap.chart.MessageId":{"!description":"Enumeration for supported message types in analytical chart.","MultipleUnits":{"!description":"Multiple units message, multiple unites are not allowed in one measure for analytical chart.","!category":"enum","!type":"String"},"!module":"sap/chart/library","!category":"static class","NoData":{"!description":"No data message, metadata is defined but all data values are empty.","!category":"enum","!type":"String"}},"sap.chart.data.TimeDimension_obj":{"extend":{"!description":"Creates a new subclass of class sap.chart.data.TimeDimension with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.chart.data.Dimension.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.chart.data.TimeDimension"},"sap.chart.data.TimeDimension":{"!description":"Definition of a single time dimension in a chart\n\nIf there is exactly one dimension with time semantics, then instead of line, time_line shall be used (implicitly).\n\nTimeDmension is assigned to feed uid \"timeAxis\".","getMetadata":{"!description":"Returns a metadata object for class sap.chart.data.TimeDimension.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.chart.data.Dimension","setFiscalYearPeriodCount":{"!description":"Sets a new value for property {@link #getFiscalYearPeriodCount fiscalYearPeriodCount}.\n\nDetailed fiscalYearPeriodCount of TimeDimension. It contains period numbers of fiscal years, like <pre>\n{\n\t default: 12,\n\t deviations: {\n\t \t \"2012\": 10,\n\t \t \"2013\": 16\n\t }\n}\n<\/pre>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oFiscalYearPeriodCount: Object) -> sap.chart.data.TimeDimension","parameters":{"oFiscalYearPeriodCount":"type: object, description: New value for property <code>fiscalYearPeriodCount<\/code>"}},"!category":"class","getTimeUnit":{"!description":"Gets current value of property {@link #getTimeUnit timeUnit}.\n\nDetailed unit infomation of TimeDimension. Please refer to {@link sap.chart.TimeUnitType TimeUnitType}.","!static":false,"!category":"function","!type":"fn() -> sap.chart.TimeUnitType"},"extend":{"!description":"Creates a new subclass of class sap.chart.data.TimeDimension with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.chart.data.Dimension.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setTimeUnit":{"!description":"Sets a new value for property {@link #getTimeUnit timeUnit}.\n\nDetailed unit infomation of TimeDimension. Please refer to {@link sap.chart.TimeUnitType TimeUnitType}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTimeUnit: sap.chart.TimeUnitType) -> sap.chart.data.TimeDimension","parameters":{"sTimeUnit":"type: sap.chart.TimeUnitType, description: New value for property <code>timeUnit<\/code>"}},"!constructorDescription":"Constructor for a new ui5/data/TimeDimension.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTimeUnit timeUnit} : sap.chart.TimeUnitType<\/li>\n<li>{@link #getFiscalYearPeriodCount fiscalYearPeriodCount} : object<\/li>\n<li>{@link #getProjectedValueStartTime projectedValueStartTime} : any<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.chart.data.Dimension#constructor sap.chart.data.Dimension}\ncan be used as well.","getProjectedValueStartTime":{"!description":"Gets current value of property {@link #getProjectedValueStartTime projectedValueStartTime}.\n\nA time value (aligned with 'timeUnit') to indicate the start point of projected values.","!static":false,"!category":"function","!type":"fn() -> Object"},"!module":"sap/chart/data/TimeDimension","!helpDescription":"Definition of a single time dimension in a chart\n\nIf there is exactly one dimension with time semantics, then instead of line, time_line shall be used (implicitly).\n\nTimeDmension is assigned to feed uid \"timeAxis\".","setProjectedValueStartTime":{"!description":"Sets a new value for property {@link #getProjectedValueStartTime projectedValueStartTime}.\n\nA time value (aligned with 'timeUnit') to indicate the start point of projected values.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oProjectedValueStartTime: Object) -> sap.chart.data.TimeDimension","parameters":{"oProjectedValueStartTime":"type: any, description: New value for property <code>projectedValueStartTime<\/code>"}},"getFiscalYearPeriodCount":{"!description":"Gets current value of property {@link #getFiscalYearPeriodCount fiscalYearPeriodCount}.\n\nDetailed fiscalYearPeriodCount of TimeDimension. It contains period numbers of fiscal years, like <pre>\n{\n\t default: 12,\n\t deviations: {\n\t \t \"2012\": 10,\n\t \t \"2013\": 16\n\t }\n}\n<\/pre>","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.chart":{"customMessages":{"!description":"Chart custom messages.","!category":"enum","!type":"Object"},"data":"sap.chart.data","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"!category":"namespace","uiConfig":{"!description":"Configuration for initialization to VizControl. This property could only set via settings parameter in Constructor.","!category":"enum","!type":"Object"},"SelectionBehavior":"sap.chart.SelectionBehavior","AutoScaleMode":"sap.chart.AutoScaleMode","vizScales":{"!description":"/** Chart scales, refer to chart property <a href=\"docs/vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","!category":"enum","!type":"[Object]"},"valueAxisScale":{"!description":"Value Axis Scale.\n\nSpecifies the scale of the chart value axes.\n\n<ol> <li>scaleBehavior: <b>optional<\/b>, determines whether or not all value axes in the chart should have a fixed scale. Possible values refer to {@link sap.chart.ScaleBehavior}. The default value is sap.chart.ScaleBehavior.AutoScale. In order to apply a fixed scale, boundary values for minimum and maximum must have been specified for all visible measures, and the axes boundaries are then created from the largest maximum and the smallest minimum value of the measures put on the respective axis. If any visible measure lacks this information, or scaleBehavior is set to sap.chart.ScaleBehavior.AutoScale, the chart will apply an automatic scaling for all value axes. <\/li> <li>fixedScaleSettings: <ul> <li>measureBoundaryValues: An object holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d values for all the measures. Stacked chart with only one measure also uses this object to describe the fixed \u201cminimum\u201d and \u201cmaximum\u201d value. <ul> <li> <code>measure<\/code> Measure name <\/li> <\/ul> <\/li> <li>stackedMultipleMeasureBoundaryValues: An array of objects holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d values only for stacked chart with multiple measures. <ul> <li> <code>measures<\/code> the array of measure name applied to the axis. <\/li> <li> <code>boundaryValues：<\/code> An object holding the fixed \u201cminimum\u201d and \u201cmaximum\u201d value all the measures applied to certain axis. <\/li> <\/ul> <\/li> <\/ul> <\/li> <li>autoScaleSettings: <ul> <li> <code>zeroAlwaysVisible<\/code> forces the value axis to always display the zero value (only a few chart types support the opposite), which is <b>optional<\/b>. The default value is true. <\/li> <li> <code>syncWith<\/code> selects how the chart adapts the value axis to the data: The axis boundaries may be determined from the loaded data, which is <b>optional<\/b>. The default value is \"DataSet\". Possible values refer to {@link sap.chart.AutoScaleMode}. <\/li> <\/ul> <\/li> <\/ol>\n\nExample: <pre>\nvalueAxisScale: {\n    scaleBehavior: sap.chart.ScaleBehavior,\n    fixedScaleSettings: {\n        measureBoundaryValues: {\n            measure_1: {\n                minimum: Number,\n                maximum: Number\n            },\n            measure_2: {\n                minimum: Number,\n                maximum: Number\n            }\n        },\n        stackedMultipleMeasureBoundaryValues: [{\n            measures: [ 'measure_1', 'measure_2', \u2026 ],\n            boundaryValues： {\n                minimum: Number,\n                maximum: Number\n            }\n        }， {\n            measures: [ 'measure_3', 'measure_4', \u2026 ],\n            boundaryValues： {\n                minimum: Number,\n                maximum: Number\n            }\n        }]\n    },\n    autoScaleSettings: {\n        zeroAlwaysVisible: Boolean,\n        syncWith: sap.chart.autoScaleMode\n    }\n}\n<\/pre>\n\nRefer to<br/> {@link sap.chart.AutoScaleMode.DataSet}<br/> {@link sap.chart.AutoScaleMode.VisibleData}<br/> {@link sap.chart.ScaleBehavior.AutoScale}<br/> {@link sap.chart.ScaleBehavior.FixedScale}<br/> for detailed usage","!category":"enum","!type":"Object"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"ColoringType":"sap.chart.ColoringType","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"coloring":"sap.chart.coloring","api":"sap.chart.api","visibleMeasures":{"!description":"Names of the Measures to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Measure<\/code>s will cause errors.","!category":"enum","!type":"[String]"},"Chart":"sap.chart.Chart_obj","visibleDimensions":{"!description":"Names of the Dimensions to be displayed in the Chart, all available dimensions will automatically append when the property isAnalytical is false.\n\nDepending on chart type, insufficient number of visible <code>Dimension<\/code>s will cause error.","!category":"enum","!type":"[String]"},"height":{"!description":"Height of the VizControl as a CSS size.","!category":"enum","!type":"sap.ui.core.CSSSize"},"enableScalingFactor":{"!description":"Enable scaling factor.","!category":"enum","!type":"Boolean"},"!description":"Chart controls based on Vizframe","enablePagination":{"!description":"Enable pagination mode.\n\nPagination mode empowers users to visualize dataset page by page by scrolling back or forth. Currently there are some limitations of this mode in some chart transversal features, such as: <ol> <li>Selection status might lost for new batch data<\/li> <li>Keyboard navigation will be only available for current continuous batch data<\/li> <li>Zoom out might have inconsistent behavior, Hence the gesture in mobile might have the same issue<\/li> <li>Time charts did not enable pagination yet<\/li> <li>Series color might be inconsistent before/after jump pages<\/li> <\/ol> Please refer to release notes for details.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"enableStableColor":{"!description":"Enable Stable color mode. To keep the same colors for the same dimension values or measure names.","!category":"enum","!type":"Boolean"},"vizProperties":{"!description":"Chart properties, refer to chart property <a href=\"docs/vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","!category":"enum","!type":"Object"},"isAnalytical":{"!description":"Whether or not an aggregated entity set is bound to the chart.","!category":"enum","!type":"Boolean"},"ScaleBehavior":"sap.chart.ScaleBehavior","colorings":{"!description":"Chart colorings.\n\nHolds an object with information about the possible options how colors can be applied for indicating <code>Criticality<\/code> or <code>Emphasis<\/code> in the chart. <pre>\nColorings: {\n    Criticality: {\n        \u2026\n    },\n    Emphasis: {\n        \u2026\n    }\n}\n<\/pre>\n\n<b>NOTE:<\/b> Dimension-based coloring does not work when {@link sap.chart.data.Measure#setSemantics} is set to {@link sap.chart.data.MeasureSemantics.Projected} or {@link sap.chart.data.MeasureSemantics.Reference} for visible measure(s).\n\nRefer to<br/> {@link sap.chart.ColoringType.Criticality}<br/> {@link sap.chart.ColoringType.Emphasis}<br/> for detailed usage","!category":"enum","!type":"Object"},"ChartType":"sap.chart.ChartType","TimeUnitType":"sap.chart.TimeUnitType","selectionBehavior":{"!description":"Chart selection behavior.","!category":"enum","!type":"sap.chart.SelectionBehavior"},"!module":"sap/chart/library","!helpDescription":"Chart controls based on Vizframe","width":{"!description":"Width of the VizControl as a CSS size.","!category":"enum","!type":"sap.ui.core.CSSSize"},"chartType":{"!description":"Type of the Chart.","!category":"enum","!type":"String"},"inResultDimensions":{"!description":"Names of the inResult dimensions.\n\ninResult dimension do not show up in chart layout, i.e. axis/legend. They do show in tooltip, popover, and in selection results.","!category":"enum","!type":"[String]"},"selectionMode":{"!description":"Chart selection mode.","!category":"enum","!type":"sap.chart.SelectionMode"},"MessageId":"sap.chart.MessageId","SelectionMode":"sap.chart.SelectionMode","activeColoring":{"!description":"Active coloring configurations.\n\nspecifies which coloring of the possible colorings is to be applied for the current chart layout. It holds an object with two properties：\n\n<ol> <li>coloring: <b>mandatory<\/b>, specify which kind of coloring should take effect in current chart layout. Possible values refer to {@link sap.chart.ColoringType}<\/li> <li>parameters: <ul> <li> <code>Criticality<\/code> supports two parameters: <code>\"dimension\"<\/code> and <code>\"measure\"<\/code>. Both are <b>optional<\/b>, one (and only one) must be provided. This setting disambiguates when multiple colorings for different visible dimensions and measures are applicable.\n\n<code>\"measure\"<\/code> supports two input types: <ol> <li><code>string<\/code> for single measure name<\/li> <li><code>string[]<\/code> of multiple measure names(only supported in <b>static<\/b>), which is relevant in case of a <b>static<\/b> measure criticality defined on multiple measures.<\/li> <\/ol> <code>\"dimension\"<\/code> holds the dimension name as string value. <\/li> <li> <code>Emphasis<\/code> supports only one parameter: <code>\"dimension\"<\/code> which is <b>optional<\/b>.\n\n<code>\"dimension\"<\/code> holds the dimension name as string value. <\/li> <\/ul> <\/li> <\/ol>\n\nExample: <pre>\nactiveColoring: {\n    coloring: sap.chart.ColoringType.Criticality,\n    parameters: {\n        dimension: \"AvailabilityStatus\u201d\n    }\n}\n<\/pre>","!category":"enum","!type":"Object"}}}}