{"!name":"sap.apf","!version":"1.20.0","!define":{"sap.apf.core.ReadRequest_obj":{"!type":"fn(oInject: Object, oRequest: Object, sService: String, sEntityType: String)","prototype":"sap.apf.core.ReadRequest"},"sap.apf.ui.representations.RepresentationInterfaceProxy":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/apf/ui/representations/RepresentationInterfaceProxy","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","createMessageObject":{"!description":"see {@link sap.apf.Api#createMessageObject}","!static":false,"!category":"function","!type":"fn()"},"!proto":"sap.ui.base.Object","createFilter":{"!description":"see {@link sap.apf.Api#createFilter}","!static":false,"!category":"function","!type":"fn()"},"!category":"class","getExits":{"!description":"get exits registered on oInject","!static":false,"!category":"function","!type":"fn()"},"getTextNotHtmlEncoded":{"!description":"see {@link sap.apf.Api#getTextNotHtmlEncoded}","!static":false,"!category":"function","!type":"fn()"},"putMessage":{"!description":"see {@link sap.apf.Api#putMessage}","!static":false,"!category":"function","!type":"fn()"},"getUiApi":{"!description":"returns the oUiAPi","!static":false,"!category":"function","!type":"fn()"}},"sap.apf.utils.FilterExpression_obj":{"!type":"fn(oMessageHandler: sap.apf.core.MessageHandler, oExpression: Object)","prototype":"sap.apf.utils.FilterExpression"},"sap.apf.core.ReadRequestByRequiredFilter_obj":{"!type":"fn(oInject: Object, oRequest: Object, sService: String, sEntityType: String)","prototype":"sap.apf.core.ReadRequestByRequiredFilter"},"sap.apf.abap.LrepConnector":{"deleteFile":{"!description":"Delete a file via REST call.","!static":false,"!category":"function","!type":"fn(sNamespace: String, sName: String, sType: String, sLayer: String, sChangelist: String) -> Object","parameters":{"sType":"type: String, description: File type extension","sLayer":"type: String, description: File layer","sName":"type: String, description: Name of the change","sChangelist":"type: String, description: The transport ID, optional","sNamespace":"type: String, description: The abap package goes here. It is needed to identify the change."}},"!constructorDescription":"Provides the connectivity to the LRep & UI5 Flexibility Services REST-routes","!module":"sap/apf/abap/LrepConnector","getFileAttributes":{"!description":"Retrieves the file attributes for a given resource in the LREP.","!static":false,"!category":"function","!type":"fn(sNamespace: String, sName: String, sType: String, sLayer: String) -> Object","parameters":{"sType":"type: String, description: File type extension","sLayer":"type: String, description: File layer","sName":"type: String, description: Name of the change","sNamespace":"type: String, description: The abap package goes here. It is needed to identify the change. Default LREP namespace is \"localchange\"."}},"getStaticResource":{"!description":"Authenticated access to a resource in the Lrep","!static":false,"!category":"function","!type":"fn(sNamespace: String, sName: String, sType: String, bIsRuntime: Boolean) -> Promise","parameters":{"sType":"type: String, description: File type extension","sName":"type: String, description: Name of the change","sNamespace":"type: String, description: The abap package goes here. It is needed to identify the change. Default LREP namespace is \"localchange\".","bIsRuntime":"type: Boolean, description: The stored file content is handed over to the lrep provider that can dynamically adjust the content to the runtime context (e.g. do text replacement to the users' logon language) before"}},"!proto":"sap.ui.base.Object","upsert":{"!description":"Upserts a given change or variant via REST call.","!static":false,"!category":"function","!type":"fn(sNamespace: String, sName: String, sType: String, sLayer: String, sContent: String, sContentType: String, sChangelist: String) -> Object","parameters":{"sContent":"type: String, description: File content to be saved as string","sType":"type: String, description: File type extension","sLayer":"type: String, description: File layer","sContentType":"type: String, description: Content type (e.g. application/json, text/plain, ...), default: application/json","sName":"type: String, description: Name of the change","sChangelist":"type: String, description: The transport ID, optional","sNamespace":"type: String, description: The abap package goes here. It is needed to identify the change."}},"!category":"class","listContent":{"!description":"Retrieves the content for a given namespace and layer via REST call.","!static":false,"!category":"function","!type":"fn(sNamespace: String, sLayer: String) -> Object","parameters":{"sLayer":"type: String, description: File layer","sNamespace":"type: String, description: The file namespace goes here. It is needed to identify the change."}},"_buildParams":{"!static":false,"!category":"function","!type":"fn(aParams: Array) -> String","parameters":{"aParams":"type: Array, description: Array of parameter objects in format {name:<name>, value:<value>}"}},"send":{"!description":"Send a request to the back end","!static":false,"!category":"function","!type":"fn(sUri: String, sMethod?: String, oData?: Object, mOptions?: Object) -> Promise","parameters":{"sMethod":"type: String, description: HTTP-method to be used by this request (default GET)","oData":"type: Object, description: Payload of the request","sUri":"type: String, description: Relative URL for this request","mOptions":"type: Object, description: Additional options which should be used in the request"}}},"sap.apf.base.Component_obj":{"extend":{"!description":"Creates a new subclass of class sap.apf.base.Component with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.UIComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.apf.base.Component"},"sap.apf.utils.Filter_obj":{"!type":"fn(oMessageHandler: sap.apf.core.MessageHandler)","prototype":"sap.apf.utils.Filter"},"sap.apf.core":{"ReadRequestByRequiredFilter":"sap.apf.core.ReadRequestByRequiredFilter_obj","getCumulativeFilterUpToActiveStep":{"!description":"Returns the cumulative filter up to the active step (included) and the context","!static":"true","!category":"function","!type":"fn() -> jQuery.Deferred.promise"},"!category":"namespace","getActiveStep":{"!description":"Returns active step, currently selected step, of analysis path.","!static":"true","!category":"function","!type":"fn() -> sap.apf.core.Step"},"MessageObject":"sap.apf.core.MessageObject_obj","setActiveStep":{"!description":"Sets handed over step as the active one.","!static":"true","!category":"function","!type":"fn(oStep: sap.apf.core.Step)"},"ReadRequest":"sap.apf.core.ReadRequest_obj"},"sap.apf.Api":{"!description":"Official API for Analysis Path Framework (APF)<br> <p> The APF API provides a consuming application access to the functionality of the APF. It is assumed that the consuming application extends type {@link sap.apf.base.Component}. The API reference is returned by method {@link sap.apf.base.Component#getApi}. <br> Objects and types returned by methods of APF API or passed in parameters of APF API method also belong to the API. These objects and types are documented in their respective sections of this documentation. All methods, objects or types that are not explicitly documented as public are strictly internal and may be changed without prior notice. This also includes all methods, objects or types being classified as experimental.<br> Furthermore there is no need to instantiate required entities directly by applying the JavaScript 'new'-operator on their respective constructors. Instead they should be created by consumers using a create method available on API-level, such as e.g. {@link sap.apf.Api#createMessageObject} for {@link sap.apf.core.MessageObject} or {@link sap.apf.Api#createFilter} for {@link sap.apf.utils.Filter}. <\/p>","addPathFilter":{"!description":"Adds a filter to the path. Subsequent changes need to be done by the update method providing the identifier. Limitation: Only a single filter term or a disjunction/conjunction of single terms over a single property is supported. Limitation: Only the operators EQ, LE (less equal than) and GE (greater equal than) are supported.","!static":false,"!category":"function","!type":"fn(filter: sap.apf.utils.Filter) -> Number","parameters":{"filter":"type: sap.apf.utils.Filter, description: undefined"}},"activateOnErrorHandling":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn(bHandling: Boolean)","parameters":{"bHandling":"type: boolean, description: Boolean true switches the winow.onerror handling on"}},"createMessageObject":{"!description":"Creates a message object, which is the mandatory parameter for API method putMessage. So first create the message object and afterwards call putMessage with the message object as argument.","!static":false,"!category":"function","!type":"fn(oConfig: Object) -> sap.apf.core.MessageObject","parameters":{"oConfig":"type: object, description: Configuration object for the message object."}},"!proto":"sap.ui.base.Object","startupSucceeded":{"!description":"true, when no fatal error occurred during startup phase. Startup phase includes the initialization + startupApf","!static":false,"!category":"function","!type":"fn() -> Boolean"},"createFilter":{"!description":"Creates an empty filter object. Its methods can be used to create a logical filter expression.","!static":false,"!category":"function","!type":"fn() -> sap.apf.utils.Filter"},"!category":"class","loadApplicationConfig":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.23.1 undefined<br>Loads a new application configuration in JSON format. When called many times, the file is loaded only the first time.","!static":false,"!category":"function","!type":"fn(sFilePath: String)","parameters":{"sFilePath":"type: string, description: The absolute path of an application configuration file. Host and port will be added in front of this path."}},"putMessage":{"!description":"A message is passed to the APF message handler for further processing. All message specific settings (e.g. message code or severity) need to be passed within an APF message object instance.","!static":false,"!category":"function","!type":"fn(oMessage: sap.apf.core.MessageObject)","parameters":{"oMessage":"type: sap.apf.core.MessageObject, description: The message object shall be created by method {@link sap.apf.Api#createMessageObject}."}},"setCallbackBeforeApfStartup":{"!description":"Register the function callback to be executed before APF start-up. Callback is called with APF API instance as parameter and 'this' set to the Component instance.","!static":false,"!category":"function","!type":"fn(fnCallback: fn())","parameters":{"fnCallback":"type: function, description: that will be executed before APF start-up."}},"updatePathFilter":{"!description":"Updates a filter of the path. Limitation: Only a single filter term or a disjunction/conjunction of single terms over a single property is supported. Limitation: Only the operators EQ, LE (less equal than) and GE (greater equal than) are supported.","!static":false,"!category":"function","!type":"fn(id: Number | String, filter: sap.apf.utils.Filter)","parameters":{"filter":"type: sap.apf.utils.Filter, description: undefined","id":"type: number|string, description: Identifier of the path filter as it was returned by addPathFilter method. When using an ID of type string the caller must ensure that it is unique."}},"customFormat":{"!description":"helps to call customer defined custom formatter function(fnCallback).","!static":false,"!category":"function","!type":"fn(fnCallback: fn())","parameters":{"fnCallback":"type: function, description: custom format function need to be called."}},"setCallbackAfterApfStartup":{"!description":"Register the function callback to be executed after APF start-up and content has been created. Callback is called with APF API instance as parameter and 'this' set to the Component instance.","!static":false,"!category":"function","!type":"fn(fnCallback: fn())","parameters":{"fnCallback":"type: function, description: that will be executed after APF start-up and content has been created."}},"!module":"sap/apf/api","!helpDescription":"Official API for Analysis Path Framework (APF)<br> <p> The APF API provides a consuming application access to the functionality of the APF. It is assumed that the consuming application extends type {@link sap.apf.base.Component}. The API reference is returned by method {@link sap.apf.base.Component#getApi}. <br> Objects and types returned by methods of APF API or passed in parameters of APF API method also belong to the API. These objects and types are documented in their respective sections of this documentation. All methods, objects or types that are not explicitly documented as public are strictly internal and may be changed without prior notice. This also includes all methods, objects or types being classified as experimental.<br> Furthermore there is no need to instantiate required entities directly by applying the JavaScript 'new'-operator on their respective constructors. Instead they should be created by consumers using a create method available on API-level, such as e.g. {@link sap.apf.Api#createMessageObject} for {@link sap.apf.core.MessageObject} or {@link sap.apf.Api#createFilter} for {@link sap.apf.utils.Filter}. <\/p>","selectionChanged":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn(bRefreshAllSteps: Boolean)","parameters":{"bRefreshAllSteps":"type: boolean, description: undefined"}},"setEventCallback":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn(sEventType: sap.apf.core.constants.eventTypes, fnCallback: fn()) -> Boolean","parameters":{"fnCallback":"type: function, description: that will be executed depending on the event type.","sEventType":"type: sap.apf.core.constants.eventTypes, description: is the type of event for registering the fnCallback for that particular event type printTriggered - Registers a callback for initial page print, this callback returns 2d array contextChanged : Registers a callback for context change, which will set the context of the application"}},"getTextNotHtmlEncoded":{"!description":"Retrieves a text without application of HTML encoding","!static":false,"!category":"function","!type":"fn(oLabel: Object, aParameters: [String]) -> String","parameters":{"oLabel":"type: object, description: || {string} Label object or text key","aParameters":"type: string[], description: Array with parameters to replace place holders in text."}},"addMasterFooterContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.23.1 Remains in api in order to maintain downward compatibility to 3 Wave 5 apps.<br>Adds an element to the footer area.","!static":false,"!category":"function","!type":"fn(oControl: Object)","parameters":{"oControl":"type: object, description: any valid UI5 control."}},"getPathFilter":{"!description":"Gets a path filter fragment for the given identifier by fully replacing the existing one.","!static":false,"!category":"function","!type":"fn(id: Number | String) -> sap.apf.utils.Filter","parameters":{"id":"type: number|string, description: Identifier of the path filter fragment as it was returned by addPathFilter method."}},"getTextHtmlEncoded":{"!description":"Retrieves a text and applies HTML encoding","!static":false,"!category":"function","!type":"fn(oLabel: Object, aParameters: [String]) -> String","parameters":{"oLabel":"type: object, description: || {string} Label object or text key","aParameters":"type: string[], description: Array with parameters to replace place holders in text."}}},"sap.apf.abap.LrepConnector_obj":{"!type":"fn(mParameters?: Object)","prototype":"sap.apf.abap.LrepConnector"},"sap.apf.core.MessageObject":{"!description":"The message object represents the APF specific message object for detailed evaluation. The message object shall be created by method {@link sap.apf.Api#createMessageObject}.","getPrevious":{"!description":"Gets the previous message object.","!static":false,"!category":"function","!type":"fn() -> sap.apf.core.MessageObject"},"getCallingObject":{"!description":"Returns the calling object","!static":false,"!category":"function","!type":"fn() -> Object"},"getSeverity":{"!description":"Returns the severity.","!static":false,"!category":"function","!type":"fn() -> String"},"getTimestampAsdateObject":{"!description":"Returns the time stamp of the message object as a date","!static":false,"!category":"function","!type":"fn() -> Date"},"setCode":{"!description":"Sets the code, that classifies the message.","!static":false,"!category":"function","!type":"fn(code: String)","parameters":{"code":"type: string, description: undefined"}},"!proto":"sap.ui.base.Object","getMessage":{"!description":"Returns the message text.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","setMessage":{"!description":"Sets the message text.","!static":false,"!category":"function","!type":"fn(sTextMessage: String)","parameters":{"sTextMessage":"type: string, description: undefined"}},"getJQueryVersion":{"!description":"Returns the version of jQuery","!static":false,"!category":"function","!type":"fn() -> String"},"setSeverity":{"!description":"Sets the severity , which classifies the message.","!static":false,"!category":"function","!type":"fn(severity: String)","parameters":{"severity":"type: string, description: Only for to build in error messages. Allowed values are defined in {@link sap.apf.constants.severity}."}},"getRawText":{"!description":"Returns raw text.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/apf/core/messageObject","!helpDescription":"The message object represents the APF specific message object for detailed evaluation. The message object shall be created by method {@link sap.apf.Api#createMessageObject}.","getTimestamp":{"!description":"Returns the time stamp of the message object in seconds after 1970","!static":false,"!category":"function","!type":"fn() -> Number"},"getParameters":{"!description":"Returns the parameter which were passed over","!static":false,"!category":"function","!type":"fn() -> Array"},"getSapUi5Version":{"!description":"Returns the version of SAP UI5","!static":false,"!category":"function","!type":"fn() -> String"},"getStack":{"!description":"Returns the stack of the error object to get the line number and source file","!static":false,"!category":"function","!type":"fn() -> String"},"getCode":{"!description":"Returns the message code.","!static":false,"!category":"function","!type":"fn() -> String"},"hasRawText":{"!description":"Returns true, if a raw text is set.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPrevious":{"!description":"Sets the previous message object. One can add a message object to this message object, that describes a previous message. The message in the previous message object will also be displayed in the log (as previous entry).","!static":false,"!category":"function","!type":"fn(oPreviousMessageObject: sap.apf.core.MessageObject)","parameters":{"oPreviousMessageObject":"type: sap.apf.core.MessageObject, description: undefined"}}},"sap.apf.core.ReadRequestByRequiredFilter":{"!description":"Facade for sap.apf.core.Request for getting data via the OData protocol. This corresponds to a normal HTTP GET method. Creation is done via APF API. In addition to the handed over filter argument in method send(), the required filters and parameter entity set key properties of the configured entity type are applied, which are determined from path filter.","!module":"sap/apf/core/readRequestByRequiredFilter","!helpDescription":"Facade for sap.apf.core.Request for getting data via the OData protocol. This corresponds to a normal HTTP GET method. Creation is done via APF API. In addition to the handed over filter argument in method send(), the required filters and parameter entity set key properties of the configured entity type are applied, which are determined from path filter.","getMetadataFacade":{"!description":"Returns {sap.apf.core.MetadataFacade} which provides convenience methods for accessing metadata (only for the service document, which is assigned to this read request instance).","!static":false,"!category":"function","!type":"fn(sService: String) -> sap.apf.core.MetadataFacade","parameters":{"sService":"type: string, description: Service defined by the request configuration."}},"!proto":"sap.ui.base.Object","!category":"class","send":{"!description":"Executes an OData request.","!static":false,"!category":"function","!type":"fn(]: sap.apf.utils.Filter, fnCallback: fn(), oRequestOptions: Object)","parameters":{"oRequestOptions":"type: Object, description: An optional object containing additional query string options Format: { orderby : [{ property : <property_name>, order : <asc|desc>}], top : <integer>, skip : <integer> }","fnCallback":"type: function, description: The first argument of the callback function is the received data (as Array). The second argument is {sap.apf.core.EntityTypeMetadata}. The third argument is {sap.apf.core.MessageObject}.","]":"type: sap.apf.utils.Filter, description: oFilter"}}},"sap.apf.utils.FilterExpression":{"!description":"Filter expression","!module":"sap/apf/utils/filter","!helpDescription":"Filter expression","!proto":"sap.ui.base.Object","!category":"class"},"sap.apf.utils.FilterOr_obj":{"!type":"fn(oMessageHandler: sap.apf.core.MessageHandler, sId: String, oAnd: sap.apf.utils.FilterAnd)","prototype":"sap.apf.utils.FilterOr"},"sap.apf.base.Component":{"!description":"Base Component for all APF based applications.","extend":{"!description":"Creates a new subclass of class sap.apf.base.Component with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.UIComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"exit":{"!description":"Cleanup the Component instance. The component that extends this component should call this method.","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.apf.base.Component.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"createContent":{"!description":"Creates the content of the component. A component that extends this component shall call this method.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!module":"sap/apf/base/Component","!helpDescription":"Base Component for all APF based applications.","!proto":"sap.ui.core.UIComponent","!category":"class","getApi":{"!description":"Returns the instance of the APF API.","!static":false,"!category":"function","!type":"fn() -> sap.apf.Api"},"getInjections":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.apf.utils.FilterAnd_obj":{"!type":"fn(oMessageHandler: sap.apf.core.MessageHandler, sId: String)","prototype":"sap.apf.utils.FilterAnd"},"sap.apf.ui.representations.RepresentationInterfaceProxy_obj":{"!type":"fn(oCoreApi: sap.apf.core.Instance, oUiApi: sap.apf.ui.Instance)","prototype":"sap.apf.ui.representations.RepresentationInterfaceProxy"},"sap.apf.abap":{"LrepConnector":"sap.apf.abap.LrepConnector_obj","!category":"namespace"},"sap.apf.ui.representations":{"representationInterface":"sap.apf.ui.representations.representationInterface_obj","RepresentationInterfaceProxy":"sap.apf.ui.representations.RepresentationInterfaceProxy_obj","!category":"namespace"},"sap":{"sap":"sap","apf":"sap.apf","!category":"namespace"},"sap.apf.base":{"!category":"namespace","Component":"sap.apf.base.Component_obj"},"sap.apf.Component":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined since SAP UI 1.30. This ./Component.js was used for any application build with UI5 Version < 1.30. Use the new ./base/Component.js instead for any application build with UI5 Version >= 1.30<br>Base Component for all APF based applications.","extend":{"!description":"Creates a new subclass of class sap.apf.Component with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.UIComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"exit":{"!description":"Cleanup the Component instance . The component, that extends this component should call this method.","!static":false,"!category":"function","!type":"fn()"},"init":{"!description":"Initialize the Component instance after creation. The component, that extends this component should call this method.","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.apf.Component.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"createContent":{"!description":"Creates the content of the component. A component, that extends this component should call this method.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!module":"sap/apf/Component","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined since SAP UI 1.30. This ./Component.js was used for any application build with UI5 Version < 1.30. Use the new ./base/Component.js instead for any application build with UI5 Version >= 1.30<br>Base Component for all APF based applications.","!proto":"sap.ui.core.UIComponent","!category":"class","getApi":{"!description":"Returns the instance of the APF API.","!static":false,"!category":"function","!type":"fn() -> sap.apf.Api"}},"sap.apf.ui.representations.representationInterface":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","adoptSelection":{"!description":"Called on representation by binding when a representation type is set. Intention is to trigger transfer of selections that might exist on a representation (source) that is replaced by the \"new\" representation (target) to be set. Therefore the target representation receives a reference pointing to the source representation. In order to check whether selection transfer is possible the target representation initiates a negotiation process with the source representations (3-way-handshake). If a common method can be determined between target and source representation the selection will be exchanged.","!static":false,"!category":"function","!type":"fn(oSourceRepresentation: Object)","parameters":{"oSourceRepresentation":"type: object, description: Source representation implementing the representationInterface."}},"getPrintContent":{"!description":"This method holds the logic to draw the content to be printed.","!static":false,"!category":"function","!type":"fn() -> Object"},"getFilterMethodType":{"!description":"This method has to be implemented so that binding can determine which method has to be used for the filter retrieval from a representations.","!static":false,"!category":"function","!type":"fn() -> sap.apf.constants.filterMethodTypes"},"setData":{"!description":"The binding sets the data (received from the request) that has to be visualized. The array aDataResponse is shared between all representations of a step and the binding. When lines are moved, deleted or changed, you modify the visualization of the original data! When displaying the data, one can determine which record is selected by aSelectedIndices.","!static":false,"!category":"function","!type":"fn(oMetadata: sap.apf.core.Metadata, aDataResponse: Array)","parameters":{"oMetadata":"type: sap.apf.core.Metadata, description: oMetadata holds meta information about the received data.","aDataResponse":"type: array, description: Data response from the request."}},"updateTreetable":{"!description":"Called during path update for treetable representation. As treetable has its own data model, the request handling is done on representation side.","!static":false,"!category":"function","!type":"fn(controlObject: Object, oModel: sap.ui.model.odata.v2, callbackAfterRequest: fn(), entityTypeMetadata: sap.apf.core.EntityTypeMetadata)","parameters":{"oModel":"type: sap.ui.model.odata.v2, description: OData model for the service of treetable","entityTypeMetadata":"type: sap.apf.core.EntityTypeMetadata, description: Convenience functions for metadata handling","callbackAfterRequest":"type: function, description: Function to be called after request processing","controlObject":"type: object, description: Contains filters and parameters for treetable request handling"}},"getMainContent":{"!description":"This method holds the logic to draw the content to be shown on main representation area.","!static":false,"!category":"function","!type":"fn() -> Object"},"!proto":"sap.ui.base.Object","!category":"class","getAlternateRepresentation":{"!description":"Returns the alternate representation of current step (i.e. list representation for the charts)","!static":false,"!category":"function","!type":"fn() -> Object"},"removeAllSelection":{"!description":"This method holds the logic to remove all selection from the chart. It also updates the step.","!static":false,"!category":"function","!type":"fn()"},"serialize":{"!description":"This method returns the selection for serialization. This is required for the Persisting selection of current representation. It includes selection mode and selections.","!static":false,"!category":"function","!type":"fn() -> Object"},"!module":"sap/apf/ui/representations/representationInterface","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getThumbnailContent":{"!description":"This method holds the logic to draw the content to be shown on thumbnail area.","!static":false,"!category":"function","!type":"fn() -> Object"},"getTooltipContent":{"!description":"This method holds the logic to draw the content to be shown as tooltip for a thumbnail. It will be shown inside a tooltip Popup when the thumbnail content overflows the thumbnail container area with a gradient effect to indicate that it is overflowing.","!static":false,"!category":"function","!type":"fn() -> Object"},"getMetaData":{"!description":"Returns meta data for representation type","!static":false,"!category":"function","!type":"fn() -> sap.apf.core.EntityTypeMetadata"},"getData":{"!description":"Returns data for representation type","!static":false,"!category":"function","!type":"fn() -> Array"},"getRequestOptions":{"!description":"Additionally to parameters being set in the request configuration and filter values that are derived from the path logic, a request can be enriched with additional options such as <b>$top<\/b>, <b>$skip<\/b> and <b>$orderby<\/b>.<p> Dependent on the actual options a representation may require for a request, an object containing the correspondent properties may be returned by this method. <br>In case no additional options are required an empty object should be returned.<p>\n\nThe supported optional properties of the return object are: <ul><li><b>paging<\/b>: An object containing optional properties<ul><li><b>top<\/b> for OData system query option $top <br>A numeric value is expected<li><b>skip<\/b> for query string option $skip<br> A numeric value is expected <li><b>inlineCount<\/b> for OData system query option $inlineCount<br>A boolean value 'true' is expected if inline count is requested<\/ul> <li><b>orderby<\/b> for OData system query option $orderby: Values could be of type<ul> <li><b>string<\/b> that holds a property name (in this case the default sort order 'ascending' is applied) <li><b>object<\/b> with properties:<ul> <li>'property' A string containing the property name is expected. <li>'ascending' A boolean value 'true' is expected, if ascending sort order is required for the property. If omitted default sort order 'descending' is applied. <\/ul> <li><b>array<\/b> holding objects with properties 'property' and 'ascending' as described above.<\/ul>","!static":false,"!category":"function","!type":"fn() -> Object"},"getSelectionAsArray":{"!description":"This is the basic method with which the step can detect data selected in the chart.","!static":false,"!category":"function","!type":"fn() -> [Number]"},"deserialize":{"!description":"This method uses the serialization information from serialized data and sets the selection to representation based on mode and selection string returned.","!static":false,"!category":"function","!type":"fn(oSerializationInformation: Object)","parameters":{"oSerializationInformation":"type: object, description: undefined"}},"getParameter":{"!description":"The method returns the constructor arguments which will be used to create toggle representation.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.apf.utils.FilterOr":{"addAnd":{"!description":"Adds an object of type {@link sap.apf.utils.FilterAnd}.","!static":false,"!category":"function","!type":"fn(sId: String) -> sap.apf.utils.FilterAnd","parameters":{"sId":"type: string, description: Identifier for the object to be added."}},"!module":"sap/apf/utils/filter","addExpression":{"!description":"Adds an expression object to this filter.","!static":false,"!category":"function","!type":"fn(oExpression: Object) -> sap.apf.utils.FilterOr","parameters":{"oExpression":"type: object, description: Expression object"}},"!proto":"sap.ui.base.Object","!category":"class","getId":{"!description":"Retrieves an ID of the term.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.apf.Api_obj":{"!type":"fn(oComponent: sap.apf.Component | sap.apf.base.Component, inject?: Object, manifests?: Object)","prototype":"sap.apf.Api"},"sap.apf.Component_obj":{"extend":{"!description":"Creates a new subclass of class sap.apf.Component with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.UIComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.apf.Component"},"sap.apf.utils":{"Filter":"sap.apf.utils.Filter_obj","FilterOr":"sap.apf.utils.FilterOr_obj","FilterAnd":"sap.apf.utils.FilterAnd_obj","!category":"namespace","FilterExpression":"sap.apf.utils.FilterExpression_obj"},"sap.apf.utils.Filter":{"!description":"Filter object","getTopAnd":{"!description":"Returns the top 'AND' object of the filter.","!static":false,"!category":"function","!type":"fn() -> sap.apf.utils.FilterAnd"},"updateValue":{"!description":"Updates a value of an expression object.","!static":false,"!category":"function","!type":"fn(sId: String, value: String, high: String)","parameters":{"high":"type: string, description: The new high value for the expression (optional)","value":"type: string, description: The new low value for the expression (optional)","sId":"type: string, description: ID of the expression object to be updated"}},"!proto":"sap.ui.base.Object","getExpressions":{"!description":"Returns the logical operations and the boolean expressions of a Filter object as nested arrays for the logical operations and single level objects for the boolean expressions. Depending on the nesting level of the arrays the logical operators for the terms in the arrays alternates between AND and OR. The array on the highest level has the logical operator AND. It corresponds to the TopAnd filter term. Terms in general can be composed of the logical operation AND (see the FilterAnd object) or OR (see the FilterOr object) or be a boolean expression (see the FilterExpression object). AND and OR terms are returned as arrays; boolean expressions are returned as objects.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"!category":"class","getOperators":{"!description":"Convenience function to get the OData operators which are defined in {constants.FilterOperators}.","!static":false,"!category":"function","!type":"fn() -> constants.FilterOperators"},"!constructorDescription":"It is designed to be used for supplying context information for\r             the application. In addition, it can be used for exchanging\r             filter values between the path and the facet filters. This function object supports the top down\r             construction of filter expressions.","!module":"sap/apf/utils/filter","!helpDescription":"Filter object","getById":{"!description":"Returns filter object or expression for a given ID, if exists.","!static":false,"!category":"function","!type":"fn(sId: String) -> sap.apf.utils.FilterAnd | sap.apf.utils.FilterOr | sap.apf.utils.FilterExpression | undefined","parameters":{"sId":"type: string, description: ID of the object to be returned."}},"createFilterFromSapUi5FilterJSON":{"!description":"Creates a filter from json format, that comes from selection variant. Apf creates this filter format with method Filter#mapToSapUI5FilterExpression. See there for description of the format.","!static":false,"!category":"function","!type":"fn() -> sap.apf.utils.Filter"},"updateExpression":{"!description":"Updates an expression.","!static":false,"!category":"function","!type":"fn(sId: String, oExpression: Object)","parameters":{"oExpression":"type: object, description: Expression object containing the updated properties","sId":"type: string, description: ID of expression to be updated"}},"intersectWith":{"!description":"Build the intersection of the this filter object with the supplied filter(s). The method does not change the \"this\"-instance.","!static":false,"!category":"function","!type":"fn(args: [sap.apf.utils.Filter | sap.apf.utils.Filter]) -> sap.apf.utils.Filter","parameters":{"args":"type: sap.apf.utils.Filter|sap.apf.utils.Filter[], description: Single filter object {@link sap.apf.utils.Filter}, a comma separated parameter list of filter objects, or an array of filter objects"}}},"sap.apf.core.MessageObject_obj":{"!type":"fn(oConfig: Object)","prototype":"sap.apf.core.MessageObject"},"sap.apf":{"!description":"Analysis Path Framework","core":"sap.apf.core","ui":"sap.apf.ui","!module":"sap/apf/library","!helpDescription":"Analysis Path Framework","utils":"sap.apf.utils","!category":"namespace","Api":"sap.apf.Api_obj","constants":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.23.1 Use sap.apf.core.constants instead.<br>Constants to be used by APF consumers.","!module":"sap/apf/api","!category":"enum","!type":"Object"},"Component":"sap.apf.Component_obj","abap":"sap.apf.abap","base":"sap.apf.base"},"sap.apf.utils.FilterAnd":{"addOr":{"!description":"Adds an object of type {sap.apf.utils.FilterOr}.","!static":false,"!category":"function","!type":"fn(sId: String) -> sap.apf.utils.FilterOr","parameters":{"sId":"type: string, description: Identifier for the object to be added."}},"!module":"sap/apf/utils/filter","addExpression":{"!description":"Adds an expression object to this filter.","!static":false,"!category":"function","!type":"fn(oExpression: Object) -> sap.apf.utils.FilterAnd","parameters":{"oExpression":"type: object, description: Expression object"}},"!proto":"sap.ui.base.Object","!category":"class","getId":{"!description":"Returns ID of this filter object.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.apf.ui":{"!category":"namespace","representations":"sap.apf.ui.representations"},"sap.apf.core.ReadRequest":{"!description":"Facade for sap.apf.core.Request for getting data via the OData protocol. This corresponds to a normal HTTP GET method. Creation is done via APF API.","!module":"sap/apf/core/readRequest","!helpDescription":"Facade for sap.apf.core.Request for getting data via the OData protocol. This corresponds to a normal HTTP GET method. Creation is done via APF API.","getMetadataFacade":{"!description":"Returns {sap.apf.core.MetadataFacade} which provides convenience methods for accessing metadata (only for the service document, which is assigned to this read request instance).","!static":false,"!category":"function","!type":"fn(sService: String) -> sap.apf.core.MetadataFacade","parameters":{"sService":"type: string, description: Service defined by the request configuration."}},"!proto":"sap.ui.base.Object","!category":"class","send":{"!description":"Executes an OData request.","!static":false,"!category":"function","!type":"fn(]: sap.apf.utils.Filter, fnCallback: fn(), oRequestOptions: Object)","parameters":{"oRequestOptions":"type: Object, description: An optional object containing additional query string options Format: { orderby : [{ property : <property_name>, order : <asc|desc>}], top : <integer>, skip : <integer> }","fnCallback":"type: function, description: The first argument of the callback function is the received data (as Array). The second argument is {sap.apf.core.EntityTypeMetadata}. The third argument is {sap.apf.core.MessageObject}.","]":"type: sap.apf.utils.Filter, description: oFilter"}}},"sap.apf.ui.representations.representationInterface_obj":{"!type":"fn(dependencies: sap.apf.ui.representations.RepresentationInterfaceProxy, configuration: Object)","prototype":"sap.apf.ui.representations.representationInterface"}}}