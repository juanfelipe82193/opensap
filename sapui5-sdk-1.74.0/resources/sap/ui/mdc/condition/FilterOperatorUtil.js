/*!
 * SAPUI5

		(c) Copyright 2009-2020 SAP SE. All rights reserved
	
*/
sap.ui.define(["sap/ui/model/FilterOperator","sap/ui/model/Filter","sap/ui/model/ValidateException","sap/base/Log","sap/base/util/merge","./Operator","sap/ui/mdc/util/BaseType"],function(M,F,V,L,m,O,B){"use strict";var a=function(){};a._mOperators={strictEqual:new O({name:"EEQ",showInSuggest:false,filterOperator:M.EQ,tokenParse:"^==([\\s\\S]*)$",tokenFormat:"$1 ($0)",valueTypes:["self",null],longText:"EEQ",displayFormats:{DescriptionValue:"$1 ($0)",ValueDescription:"$0 ($1)",Description:"$1",Value:"$0"},format:function(v,c,t,d){d=d||"DescriptionValue";var C=this.valueTypes.length;var T=this.displayFormats[d];if(!v[1]){T=this.displayFormats["Value"];C=1;}for(var i=0;i<C;i++){var r,b=v[i];if(b===null||b===undefined){b="";}if(i==0&&t&&(typeof t.formatValue==="function")){r=t.formatValue(b,"string");}else{r=b;}T=r==null?null:T.replace(new RegExp("\\$"+i,"g"),r);}return T;},parse:function(t,T,d){d=d||"DescriptionValue";var b=t.match(this.tokenParseRegExp);var r;if(b){try{var v=b[1];r=this.splitText(v,d);if(r.length>0){r[0]=this._parseValue(r[0],T);}}catch(e){L.warning(e.message);throw e;}}return r;},splitText:function(t,d){d=d||"DescriptionValue";var T=this.displayFormats[d];var k=T.indexOf("$0");var D=T.indexOf("$1");var K;var s;if(k>=0&&D>=0){if(t.lastIndexOf("(")>0&&(t.lastIndexOf(")")===t.length-1||t.lastIndexOf(")")===-1)){var e=t.length;if(t[e-1]===")"){e--;}var b=t.substring(0,t.lastIndexOf("("));if(b[b.length-1]===" "){b=b.substring(0,b.length-1);}var c=t.substring(t.lastIndexOf("(")+1,e);if(k<D){K=b;s=c;}else{K=c;s=b;}}else if(k<D){K=t;}else{s=t;}}else if(k>=0){K=t;}else{s=t;}return[K,s];},isEmpty:function(c,t){var i=false;var v=c.values[0];if(v===null||v===undefined||v===""){i=true;}return i;}}),equal:new O({name:"EQ",filterOperator:M.EQ,tokenParse:"^=([^=].*)$",tokenFormat:"=$0",valueTypes:["self"]}),between:new O({name:"BT",filterOperator:M.BT,tokenParse:"^([^!].*)\\.\\.\\.(.+)$",tokenFormat:"$0...$1",valueTypes:["self","self"],validate:function(v,t){if(v.length<2){throw new V("Between must have two values");}if(v[0]===v[1]){throw new V("Between must have two different values");}O.prototype.validate.apply(this,[v,t]);}}),betweenExclBoundaries:new O({name:"BTEX",filterOperator:M.BT,tokenParse:"^([^!].*)\\.\\.(.+)$",tokenFormat:"$0..$1",valueTypes:["self","self"],getModelFilter:function(c,f){return new F({filters:[new F(f,M.GT,c.values[0]),new F(f,M.LT,c.values[1])],and:true});},validate:function(v,t){if(v.length<2){throw new V("Between must have two values");}if(v[0]===v[1]){throw new V("Between must have two different values");}O.prototype.validate.apply(this,[v,t]);}}),notBetween:new O({name:"NOTBT",filterOperator:M.NB,tokenParse:"^!(.+)\\.\\.\\.(.+)$",tokenFormat:"!($0...$1)",valueTypes:["self","self"],exclude:true,validate:function(v,t){if(v.length<2){throw new V("NotBetween must have two values");}if(v[0]===v[1]){throw new V("NotBetween must have two different values");}O.prototype.validate.apply(this,[v,t]);}}),notBetweenExclBoundaries:new O({name:"NOTBTEX",filterOperator:M.NB,tokenParse:"^!(.+)\\.\\.(.+)$",tokenFormat:"!($0..$1)",valueTypes:["self","self"],exclude:true,getModelFilter:function(c,f){return new F({filters:[new F(f,M.LE,c.values[0]),new F(f,M.GE,c.values[1])],and:false});},validate:function(v,t){if(v.length<2){throw new V("NotBetween must have two values");}if(v[0]===v[1]){throw new V("NotBetween must have two different values");}O.prototype.validate.apply(this,[v,t]);}}),lowerThan:new O({name:"LT",filterOperator:M.LT,tokenParse:"^<([^=].*)$",tokenFormat:"<$0",valueTypes:["self"]}),notLowerThan:new O({name:"NOTLT",filterOperator:M.GE,tokenParse:"^!<([^=].*)$",tokenFormat:"!(<$0)",valueTypes:["self"],exclude:true}),greaterThan:new O({name:"GT",filterOperator:M.GT,tokenParse:"^>([^=].*)$",tokenFormat:">$0",valueTypes:["self"]}),notGreaterThan:new O({name:"NOTGT",filterOperator:M.LE,tokenParse:"^!>([^=].*)$",tokenFormat:"!(>$0)",valueTypes:["self"],exclude:true}),lessEqual:new O({name:"LE",filterOperator:M.LE,tokenParse:"^<=(.+)$",tokenFormat:"<=$0",valueTypes:["self"]}),notLessEqual:new O({name:"NOTLE",filterOperator:M.GT,tokenParse:"^!<=(.+)$",tokenFormat:"!(<=$0)",valueTypes:["self"],exclude:true}),greaterEqual:new O({name:"GE",filterOperator:M.GE,tokenParse:"^>=(.+)$",tokenFormat:">=$0",valueTypes:["self"]}),notGreaterEqual:new O({name:"NOTGE",filterOperator:M.LT,tokenParse:"^!>=(.+)$",tokenFormat:"!(>=$0)",valueTypes:["self"],exclude:true}),startsWith:new O({name:"StartsWith",filterOperator:M.StartsWith,tokenParse:"^([^!\\*]+.*)\\*$",tokenFormat:"$0*",valueTypes:["self"]}),notStartsWith:new O({name:"NotStartsWith",filterOperator:M.NotStartsWith,tokenParse:"^!([^\\*].*)\\*$",tokenFormat:"!($0*)",valueTypes:["self"],exclude:true}),endsWith:new O({name:"EndsWith",filterOperator:M.EndsWith,tokenParse:"^\\*(.*[^\\*])$",tokenFormat:"*$0",valueTypes:["self"]}),notEndsWith:new O({name:"NotEndsWith",filterOperator:M.NotEndsWith,tokenParse:"^!\\*(.*[^\\*])$",tokenFormat:"!(*$0)",valueTypes:["self"],exclude:true}),contains:new O({name:"Contains",filterOperator:M.Contains,tokenParse:"^\\*(.*)\\*$",tokenFormat:"*$0*",valueTypes:["self"]}),notContains:new O({name:"NotContains",filterOperator:M.NotContains,tokenParse:"^!\\*(.*)\\*$",tokenFormat:"!(*$0*)",valueTypes:["self"],exclude:true}),notEqual:new O({name:"NE",filterOperator:M.NE,tokenParse:"^!=(.+)$",tokenFormat:"!(=$0)",valueTypes:["self"],exclude:true}),empty:new O({name:"Empty",filterOperator:M.EQ,tokenParse:"^<#tokenText#>$",tokenFormat:"<#tokenText#>",valueTypes:[],getModelFilter:function(c,f,o){var b=a.getOperator(c.operator,o);return new F({path:f,operator:b.filterOperator,value1:""});}}),notEmpty:new O({name:"NotEmpty",filterOperator:M.NE,tokenParse:"^!<#tokenText#>$",tokenFormat:"!(<#tokenText#>)",valueTypes:[],exclude:true,getModelFilter:function(c,f,o){var b=a.getOperator(c.operator,o);return new F({path:f,operator:b.filterOperator,value1:""});}})};a._mDefaultOpsForType={};a.addOperator=function(o){a._mOperators[o.name]=o;};a.setOperatorsForType=function(t,o,d){a._mDefaultOpsForType[t]={operators:o};if(d){a._mDefaultOpsForType[t].defaultOperator=d;}};a.setOperatorsForType(B.String,[a._mOperators.strictEqual,a._mOperators.contains,a._mOperators.equal,a._mOperators.between,a._mOperators.startsWith,a._mOperators.endsWith,a._mOperators.empty,a._mOperators.lessEqual,a._mOperators.lowerThan,a._mOperators.greaterEqual,a._mOperators.greaterThan,a._mOperators.notContains,a._mOperators.notEqual,a._mOperators.notBetween,a._mOperators.notStartsWith,a._mOperators.notEndsWith,a._mOperators.notEmpty,a._mOperators.notLessEqual,a._mOperators.notLowerThan,a._mOperators.notGreaterEqual,a._mOperators.notGreaterThan],a._mOperators.contains);a.setOperatorsForType(B.Date,[a._mOperators.strictEqual,a._mOperators.equal,a._mOperators.between,a._mOperators.lessEqual,a._mOperators.lowerThan,a._mOperators.greaterEqual,a._mOperators.greaterThan,a._mOperators.notEqual,a._mOperators.notBetween,a._mOperators.notLessEqual,a._mOperators.notLowerThan,a._mOperators.notGreaterEqual,a._mOperators.notGreaterThan]);a.setOperatorsForType(B.DateTime,[a._mOperators.strictEqual,a._mOperators.equal,a._mOperators.between,a._mOperators.lessEqual,a._mOperators.lowerThan,a._mOperators.greaterEqual,a._mOperators.greaterThan,a._mOperators.notEqual,a._mOperators.notBetween,a._mOperators.notLessEqual,a._mOperators.notLowerThan,a._mOperators.notGreaterEqual,a._mOperators.notGreaterThan]);a.setOperatorsForType(B.Numeric,[a._mOperators.strictEqual,a._mOperators.equal,a._mOperators.between,a._mOperators.lessEqual,a._mOperators.lowerThan,a._mOperators.greaterEqual,a._mOperators.greaterThan,a._mOperators.notEqual,a._mOperators.notBetween,a._mOperators.notLessEqual,a._mOperators.notLowerThan,a._mOperators.notGreaterEqual,a._mOperators.notGreaterThan]);a.setOperatorsForType(B.Time,[a._mOperators.strictEqual,a._mOperators.equal,a._mOperators.between,a._mOperators.lessEqual,a._mOperators.lowerThan,a._mOperators.greaterEqual,a._mOperators.greaterThan,a._mOperators.notEqual,a._mOperators.notBetween,a._mOperators.notLessEqual,a._mOperators.notLowerThan,a._mOperators.notGreaterEqual,a._mOperators.notGreaterThan]);a.setOperatorsForType(B.Boolean,[a._mOperators.equal,a._mOperators.strictEqual,a._mOperators.notEqual]);a.getOperatorsForType=function(t){var o=[];for(var i=0;i<a._mDefaultOpsForType[t].operators.length;i++){o.push(a._mDefaultOpsForType[t].operators[i].name);}return o;};a.getDefaultOperator=function(t){return a._mDefaultOpsForType[t].defaultOperator||a._mOperators.equal;};a.getMatchingOperators=function(o,v){var b=[];for(var i=0;i<o.length;i++){var c=this.getOperator(o[i]);if(c){b.push(c);}}return _.call(this,b,v);};function _(o,v){var r=[];for(var i=0;i<o.length;i++){var b=o[i];if(b&&b.test&&b.test(v)){r.push(b);}}return r;}a.getOperator=function(o){for(var n in a._mOperators){var b=a._mOperators[n];if(b.name===o){return b;}}if(o==="EEQ"){return a._mOperators.equal;}if(o==="EQ"){return a._mOperators.strictEqual;}L.error("Operator "+o+" not in supported operators.","FilterOperatorUtil");return undefined;};a.getEEQOperator=function(){return a._mOperators.strictEqual;};a.onlyEEQ=function(o){if(o.length===1&&o[0]==="EEQ"){return true;}else{return false;}};a.checkConditionsEmpty=function(c){if(!Array.isArray(c)){c=[c];}c.forEach(function(C){var o=this.getOperator(C.operator);if(o){C.isEmpty=o.isEmpty(C);}}.bind(this));};a.updateConditionsValues=function(c){if(!Array.isArray(c)){c=[c];}c.forEach(function(C){var o=this.getOperator(C.operator);if(o&&C.operator!=="EEQ"){while(C.values.length!=o.valueTypes.length){if(C.values.length<o.valueTypes.length){C.values.push(null);}if(C.values.length>o.valueTypes.length){C.values=C.values.slice(0,C.values.length-1);}}}}.bind(this));};return a;},true);
